File,Function,Kind,TypeAnnotation
"docs/make.jl","_link_example","mtsig","Tuple{Any}"
"docs/make.jl","_file_list","mtsig","Tuple{Any, Any, Any}"
"docs/make.jl","<NA-name>","mtsig","Tuple{Any}"
"docs/make.jl","<NA-name>","mtsig","Tuple{Any}"
"docs/make.jl","_include_sandbox","mtsig","Tuple{Any}"
"docs/make.jl","_literate_directory","mtsig","Tuple{Any}"
"docs/make.jl","_add_moi_pages","mtsig","Tuple{}"
"docs/make.jl","_add_to_set","mtsig","Tuple{Any, String}"
"docs/make.jl","_add_to_set","mtsig","Tuple{Any, Pair}"
"docs/make.jl","_add_to_set","mtsig","Tuple{Any, Vector}"
"docs/make.jl","_validate_pages","mtsig","Tuple{}"
"docs/src/assets/logo_constructor.jl","_logo_no_text","mtsig","Tuple{String}"
"docs/src/assets/logo_constructor.jl","_jump_text_outlines","mtsig","Tuple{String}"
"docs/src/assets/logo_constructor.jl","logo_with_text","mtsig","Tuple{String, String, String, Bool}"
"docs/src/assets/logo_constructor.jl","logo_square","mtsig","Tuple{String, String, Bool}"
"docs/src/assets/logo_constructor.jl","logo_no_text","mtsig","Tuple{String, String}"
"docs/src/assets/logo_constructor.jl","color","mtsig","Tuple{Any}"
"docs/src/assets/logo_constructor.jl","dark_color","mtsig","Tuple{Any}"
"docs/src/tutorials/algorithms/benders_decomposition.jl","solve_subproblem","mtsig","Tuple{Any}"
"docs/src/tutorials/algorithms/benders_decomposition.jl","print_iteration","mtsig","Tuple{Any, Vararg{Any}}"
"docs/src/tutorials/algorithms/benders_decomposition.jl","f","mtsig","Tuple{Any}"
"docs/src/tutorials/algorithms/benders_decomposition.jl","my_callback","mtsig","Tuple{Any}"
"docs/src/tutorials/algorithms/cutting_stock_column_generation.jl","Base.show","mtsig","Tuple{IO, Data}"
"docs/src/tutorials/algorithms/cutting_stock_column_generation.jl","get_data","mtsig","Tuple{}"
"docs/src/tutorials/algorithms/cutting_stock_column_generation.jl","solve_pricing","mtsig","Tuple{Data, Vector{Float64}}"
"docs/src/tutorials/algorithms/tsp_lazy_constraints.jl","generate_distance_matrix","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/algorithms/tsp_lazy_constraints.jl","build_tsp_model","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/algorithms/tsp_lazy_constraints.jl","subtour","mtsig","Tuple{Vector{Tuple{Int, Int}}, Any}"
"docs/src/tutorials/algorithms/tsp_lazy_constraints.jl","selected_edges","mtsig","Tuple{Matrix{Float64}, Any}"
"docs/src/tutorials/algorithms/tsp_lazy_constraints.jl","subtour","mtsig","Tuple{Matrix{Float64}}"
"docs/src/tutorials/algorithms/tsp_lazy_constraints.jl","subtour","mtsig","Tuple{AbstractMatrix{VariableRef}}"
"docs/src/tutorials/algorithms/tsp_lazy_constraints.jl","plot_tour","mtsig","Tuple{Any, Any, Any}"
"docs/src/tutorials/algorithms/tsp_lazy_constraints.jl","subtour_elimination_callback","mtsig","Tuple{Any}"
"docs/src/tutorials/applications/power_systems.jl","ThermalGenerator","mtsig","Tuple{Float64, Float64, Float64, Float64}"
"docs/src/tutorials/applications/power_systems.jl","WindGenerator","mtsig","Tuple{Float64}"
"docs/src/tutorials/applications/power_systems.jl","Scenario","mtsig","Tuple{Float64, Float64}"
"docs/src/tutorials/applications/power_systems.jl","solve_ed","mtsig","Tuple{Vector, Any, Any}"
"docs/src/tutorials/applications/power_systems.jl","scale_generator_cost","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/applications/power_systems.jl","solve_ed_inplace","mtsig","Tuple{Vector, Any, Any, AbstractVector{Float64}}"
"docs/src/tutorials/applications/power_systems.jl","scale_demand","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/applications/power_systems.jl","solve_uc","mtsig","Tuple{Vector, Any, Any}"
"docs/src/tutorials/applications/power_systems.jl","thermal_cost_function","mtsig","Tuple{Any}"
"docs/src/tutorials/applications/power_systems.jl","solve_nonlinear_ed","mtsig","Tuple{Vector, Any, Any, Bool}"
"docs/src/tutorials/applications/web_app.jl","endpoint_solve","mtsig","Tuple{Dict{String, Any}}"
"docs/src/tutorials/applications/web_app.jl","serve_solve","mtsig","Tuple{HTTP.Request}"
"docs/src/tutorials/applications/web_app.jl","setup_server","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/applications/web_app.jl","<NA-name>","mtsig","Tuple{Any}"
"docs/src/tutorials/applications/web_app.jl","send_request","mtsig","Tuple{Dict, String}"
"docs/src/tutorials/conic/cluster.jl","example_cluster","mtsig","Tuple{Any}"
"docs/src/tutorials/conic/corr_sdp.jl","example_corr_sdp","mtsig","Tuple{}"
"docs/src/tutorials/conic/logistic_regression.jl","generate_dataset","mtsig","Tuple{Any, Any, Any}"
"docs/src/tutorials/conic/logistic_regression.jl","softplus","mtsig","Tuple{Any, Any, Any}"
"docs/src/tutorials/conic/logistic_regression.jl","build_logit_model","mtsig","Tuple{Any, Any, Any}"
"docs/src/tutorials/conic/logistic_regression.jl","build_sparse_logit_model","mtsig","Tuple{Any, Any, Any}"
"docs/src/tutorials/conic/logistic_regression.jl","count_nonzero","mtsig","Tuple{Vector, Any}"
"docs/src/tutorials/conic/max_cut_sdp.jl","svd_cholesky","mtsig","Tuple{AbstractMatrix}"
"docs/src/tutorials/conic/max_cut_sdp.jl","solve_max_cut_sdp","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/conic/max_cut_sdp.jl","example_max_cut_sdp","mtsig","Tuple{}"
"docs/src/tutorials/conic/min_distortion.jl","example_min_distortion","mtsig","Tuple{}"
"docs/src/tutorials/conic/robust_uncertainty.jl","example_robust_uncertainty","mtsig","Tuple{}"
"docs/src/tutorials/conic/robust_uncertainty.jl","Γ1","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/conic/robust_uncertainty.jl","Γ2","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/conic/start_values.jl","set_optimal_start_values","mtsig","Tuple{Model}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","solve_knapsack_1","mtsig","Tuple{Vector, Vector, Real}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","KnapsackObject","mtsig","Tuple{Float64, Float64}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","Base.show","mtsig","Tuple{IO, KnapsackData}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","solve_knapsack_2","mtsig","Tuple{KnapsackData}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","read_data","mtsig","Tuple{Any}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","solve_knapsack_3","mtsig","Tuple{KnapsackData, Bool}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","solve_knapsack_4","mtsig","Tuple{KnapsackData, AbstractConfiguration}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","add_knapsack_variables","mtsig","Tuple{Model, KnapsackData, BinaryKnapsackConfig}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","add_knapsack_variables","mtsig","Tuple{Model, KnapsackData, IntegerKnapsackConfig}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","add_knapsack_variables","mtsig","Tuple{Model, KnapsackData, UpperBoundedKnapsackConfig}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","add_knapsack_constraints","mtsig","Tuple{Model, KnapsackData, AbstractConfiguration}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","add_knapsack_objective","mtsig","Tuple{Model, KnapsackData, AbstractConfiguration}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","solve_knapsack_5","mtsig","Tuple{KnapsackData, AbstractConfiguration}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","solve_knapsack_6","mtsig","Tuple{Any, KnapsackData, AbstractConfiguration}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","solve_knapsack_6","mtsig","Tuple{Any, String, AbstractConfiguration}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","_KnapsackObject","mtsig","Tuple{Float64, Float64}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","_read_data","mtsig","Tuple{Any}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","_add_knapsack_variables","mtsig","Tuple{JuMP.Model, _KnapsackData, BinaryKnapsackConfig}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","_add_knapsack_variables","mtsig","Tuple{JuMP.Model, _KnapsackData, IntegerKnapsackConfig}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","_add_knapsack_constraints","mtsig","Tuple{JuMP.Model, _KnapsackData, _AbstractConfiguration}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","_add_knapsack_objective","mtsig","Tuple{JuMP.Model, _KnapsackData, _AbstractConfiguration}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","_solve_knapsack","mtsig","Tuple{Any, _KnapsackData, _AbstractConfiguration}"
"docs/src/tutorials/getting_started/design_patterns_for_larger_models.jl","solve_knapsack","mtsig","Tuple{Any, String, _AbstractConfiguration}"
"docs/src/tutorials/getting_started/getting_started_with_JuMP.jl","solve_infeasible","mtsig","Tuple{}"
"docs/src/tutorials/getting_started/getting_started_with_data_and_plotting.jl","<NA-name>","mtsig","Tuple{Any}"
"docs/src/tutorials/getting_started/getting_started_with_data_and_plotting.jl","modifier","mtsig","Tuple{Any}"
"docs/src/tutorials/getting_started/getting_started_with_julia.jl","print_hello","mtsig","Tuple{}"
"docs/src/tutorials/getting_started/getting_started_with_julia.jl","print_it","mtsig","Tuple{Any}"
"docs/src/tutorials/getting_started/getting_started_with_julia.jl","print_it","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/getting_started/getting_started_with_julia.jl","mult","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/getting_started/getting_started_with_julia.jl","<NA-name>","mtsig","Tuple{Any}"
"docs/src/tutorials/getting_started/getting_started_with_julia.jl","<NA-name>","mtsig","Tuple{Any}"
"docs/src/tutorials/getting_started/getting_started_with_julia.jl","foo","mtsig","Tuple{Int}"
"docs/src/tutorials/getting_started/getting_started_with_julia.jl","foo","mtsig","Tuple{Float64}"
"docs/src/tutorials/getting_started/getting_started_with_julia.jl","foo","mtsig","Tuple{Number}"
"docs/src/tutorials/getting_started/getting_started_with_julia.jl","mutability_example","mtsig","Tuple{Vector{Int}, Int}"
"docs/src/tutorials/getting_started/performance_tips.jl","<NA-name>","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/callbacks.jl","example_lazy_constraint","mtsig","Tuple{}"
"docs/src/tutorials/linear/callbacks.jl","my_callback_function","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/callbacks.jl","example_user_cut_constraint","mtsig","Tuple{}"
"docs/src/tutorials/linear/callbacks.jl","my_callback_function","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/callbacks.jl","example_heuristic_solution","mtsig","Tuple{}"
"docs/src/tutorials/linear/callbacks.jl","my_callback_function","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/callbacks.jl","example_solver_dependent_callback","mtsig","Tuple{}"
"docs/src/tutorials/linear/callbacks.jl","my_callback_function","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/cannery.jl","distance","mtsig","Tuple{String, String}"
"docs/src/tutorials/linear/factory_schedule.jl","example_factory_schedule","mtsig","Tuple{}"
"docs/src/tutorials/linear/factory_schedule.jl","containerize","mtsig","Tuple{Matrix}"
"docs/src/tutorials/linear/geographic_clustering.jl","haversine","mtsig","Tuple{Any, Any, Any, Any, Any}"
"docs/src/tutorials/linear/geographic_clustering.jl","hav","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/linear/knapsack.jl","example_knapsack","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/lp_sensitivity.jl","variable_report","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/lp_sensitivity.jl","constraint_report","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/lp_sensitivity.jl","<NA-name>","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/lp_sensitivity.jl","<NA-name>","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/lp_sensitivity.jl","<NA-name>","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/lp_sensitivity.jl","<NA-name>","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/multi.jl","example_multi","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/prod.jl","example_prod","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/prod.jl","checkpro","mtsig","Tuple{Any, Any, Any, Any, Any}"
"docs/src/tutorials/linear/steelT3.jl","example_steelT3","mtsig","Tuple{Any}"
"docs/src/tutorials/linear/transp.jl","example_transp","mtsig","Tuple{}"
"docs/src/tutorials/linear/urban_plan.jl","example_urban_plan","mtsig","Tuple{}"
"docs/src/tutorials/nonlinear/clnlbeam.jl","example_clnlbeam","mtsig","Tuple{}"
"docs/src/tutorials/nonlinear/mle.jl","example_mle","mtsig","Tuple{Any}"
"docs/src/tutorials/nonlinear/qcp.jl","example_qcp","mtsig","Tuple{Any}"
"docs/src/tutorials/nonlinear/querying_hessians.jl","analytic_hessian","mtsig","Tuple{Any, Any, Any}"
"docs/src/tutorials/nonlinear/querying_hessians.jl","fill_off_diagonal","mtsig","Tuple{Any}"
"docs/src/tutorials/nonlinear/querying_hessians.jl","add_to_hessian","mtsig","Tuple{Any, QuadExpr, Any}"
"docs/src/tutorials/nonlinear/querying_hessians.jl","add_to_hessian","mtsig","Tuple{Any, Any, Any}"
"docs/src/tutorials/nonlinear/querying_hessians.jl","compute_optimal_hessian","mtsig","Tuple{Any}"
"docs/src/tutorials/nonlinear/querying_hessians.jl","add_to_hessian","mtsig","Tuple{Any, Any, Any}"
"docs/src/tutorials/nonlinear/querying_hessians.jl","add_to_hessian","mtsig","Tuple{Any, QuadExpr, Any}"
"docs/src/tutorials/nonlinear/rocket_control.jl","my_plot","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/nonlinear/rosenbrock.jl","example_rosenbrock","mtsig","Tuple{}"
"docs/src/tutorials/nonlinear/space_shuttle_reentry_trajectory.jl","q","mtsig","Tuple{Any, Any, Any}"
"docs/src/tutorials/nonlinear/space_shuttle_reentry_trajectory.jl","ρ","mtsig","Tuple{Any}"
"docs/src/tutorials/nonlinear/space_shuttle_reentry_trajectory.jl","qᵣ","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/nonlinear/space_shuttle_reentry_trajectory.jl","qₐ","mtsig","Tuple{Any}"
"docs/src/tutorials/nonlinear/tips_and_tricks.jl","foo","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/nonlinear/tips_and_tricks.jl","foo_1","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/nonlinear/tips_and_tricks.jl","foo_2","mtsig","Tuple{Any, Any}"
"docs/src/tutorials/nonlinear/tips_and_tricks.jl","memoize","mtsig","Tuple{Function, Int}"
"docs/src/tutorials/nonlinear/tips_and_tricks.jl","foo_i","mtsig","Tuple{Any, Vararg{T}} where T <: Real"
"src/JuMP.jl","optimizer_with_attributes","mtsig","Tuple{Any, Vararg{Pair}}"
"src/JuMP.jl","Model","mtsig","Tuple{}"
"src/JuMP.jl","Model","mtsig","Tuple{Any, Bool}"
"src/JuMP.jl","direct_model","mtsig","Tuple{MOI.ModelLike}"
"src/JuMP.jl","direct_model","mtsig","Tuple{MOI.OptimizerWithAttributes}"
"src/JuMP.jl","Base.broadcastable","mtsig","Tuple{Model}"
"src/JuMP.jl","backend","mtsig","Tuple{Model}"
"src/JuMP.jl","unsafe_backend","mtsig","Tuple{Model}"
"src/JuMP.jl","unsafe_backend","mtsig","Tuple{MOIU.CachingOptimizer}"
"src/JuMP.jl","unsafe_backend","mtsig","Tuple{MOIB.LazyBridgeOptimizer}"
"src/JuMP.jl","unsafe_backend","mtsig","Tuple{MOI.ModelLike}"
"src/JuMP.jl","_moi_mode","mtsig","Tuple{MOI.ModelLike}"
"src/JuMP.jl","_moi_mode","mtsig","Tuple{MOIU.CachingOptimizer}"
"src/JuMP.jl","mode","mtsig","Tuple{Model}"
"src/JuMP.jl","_try_get_solver_name","mtsig","Tuple{Any}"
"src/JuMP.jl","set_string_names_on_creation","mtsig","Tuple{Model, Bool}"
"src/JuMP.jl","set_string_names_on_creation","mtsig","Tuple{Model}"
"src/JuMP.jl","set_string_names_on_creation","mtsig","Tuple{AbstractModel}"
"src/JuMP.jl","solver_name","mtsig","Tuple{Model}"
"src/JuMP.jl","_moi_bridge_constraints","mtsig","Tuple{MOI.ModelLike}"
"src/JuMP.jl","_moi_bridge_constraints","mtsig","Tuple{MOIU.CachingOptimizer}"
"src/JuMP.jl","bridge_constraints","mtsig","Tuple{Model}"
"src/JuMP.jl","_moi_add_bridge","mtsig","Tuple{Nothing, Type{<:MOI.Bridges.AbstractBridge}}"
"src/JuMP.jl","_moi_add_bridge","mtsig","Tuple{MOI.ModelLike, Type{<:MOI.Bridges.AbstractBridge}}"
"src/JuMP.jl","_moi_add_bridge","mtsig","Tuple{MOI.Bridges.LazyBridgeOptimizer, Type{<:MOI.Bridges.AbstractBridge}}"
"src/JuMP.jl","_moi_add_bridge","mtsig","Tuple{MOIU.CachingOptimizer, Type{<:MOI.Bridges.AbstractBridge}}"
"src/JuMP.jl","add_bridge","mtsig","Tuple{Model, Type{<:MOI.Bridges.AbstractBridge}}"
"src/JuMP.jl","print_bridge_graph","mtsig","Tuple{Model}"
"src/JuMP.jl","print_bridge_graph","mtsig","Tuple{IO, Model}"
"src/JuMP.jl","_moi_print_bridge_graph","mtsig","Tuple{IO, MOI.Bridges.LazyBridgeOptimizer}"
"src/JuMP.jl","_moi_print_bridge_graph","mtsig","Tuple{IO, MOIU.CachingOptimizer}"
"src/JuMP.jl","_moi_print_bridge_graph","mtsig","Tuple{IO, MOI.ModelLike}"
"src/JuMP.jl","Base.empty!","mtsig","Tuple{Model}"
"src/JuMP.jl","Base.isempty","mtsig","Tuple{Model}"
"src/JuMP.jl","num_variables","mtsig","Tuple{Model}"
"src/JuMP.jl","num_nonlinear_constraints","mtsig","Tuple{Model}"
"src/JuMP.jl","object_dictionary","mtsig","Tuple{Model}"
"src/JuMP.jl","unregister","mtsig","Tuple{AbstractModel, Symbol}"
"src/JuMP.jl","termination_status","mtsig","Tuple{Model}"
"src/JuMP.jl","raw_status","mtsig","Tuple{Model}"
"src/JuMP.jl","primal_status","mtsig","Tuple{Model, Int}"
"src/JuMP.jl","dual_status","mtsig","Tuple{Model, Int}"
"src/JuMP.jl","set_optimize_hook","mtsig","Tuple{Model, Any}"
"src/JuMP.jl","solve_time","mtsig","Tuple{Model}"
"src/JuMP.jl","set_optimizer_attribute","mtsig","Tuple{Model, String, Any}"
"src/JuMP.jl","set_optimizer_attribute","mtsig","Tuple{Model, MOI.AbstractOptimizerAttribute, Any}"
"src/JuMP.jl","set_optimizer_attributes","mtsig","Tuple{Model, Vararg{Pair}}"
"src/JuMP.jl","get_optimizer_attribute","mtsig","Tuple{Model, String}"
"src/JuMP.jl","get_optimizer_attribute","mtsig","Tuple{Model, MOI.AbstractOptimizerAttribute}"
"src/JuMP.jl","set_silent","mtsig","Tuple{Model}"
"src/JuMP.jl","unset_silent","mtsig","Tuple{Model}"
"src/JuMP.jl","set_time_limit_sec","mtsig","Tuple{Model, Real}"
"src/JuMP.jl","set_time_limit_sec","mtsig","Tuple{Model, Nothing}"
"src/JuMP.jl","unset_time_limit_sec","mtsig","Tuple{Model}"
"src/JuMP.jl","time_limit_sec","mtsig","Tuple{Model}"
"src/JuMP.jl","simplex_iterations","mtsig","Tuple{Model}"
"src/JuMP.jl","barrier_iterations","mtsig","Tuple{Model}"
"src/JuMP.jl","node_count","mtsig","Tuple{Model}"
"src/JuMP.jl","Base.ndims","mtsig","Tuple{Type{<:AbstractJuMPScalar}}"
"src/JuMP.jl","Base.ndims","mtsig","Tuple{AbstractJuMPScalar}"
"src/JuMP.jl","LinearAlgebra.symmetric_type","mtsig","Tuple{Type{T}} where T <: AbstractJuMPScalar"
"src/JuMP.jl","LinearAlgebra.symmetric","mtsig","Tuple{AbstractJuMPScalar, Symbol}"
"src/JuMP.jl","LinearAlgebra.adjoint","mtsig","Tuple{AbstractJuMPScalar}"
"src/JuMP.jl","Base.iterate","mtsig","Tuple{AbstractJuMPScalar}"
"src/JuMP.jl","Base.iterate","mtsig","Tuple{AbstractJuMPScalar, Any}"
"src/JuMP.jl","Base.isempty","mtsig","Tuple{AbstractJuMPScalar}"
"src/JuMP.jl","isequal_canonical","mtsig","Tuple{AbstractArray{<:JuMP.AbstractJuMPScalar}, AbstractArray{<:JuMP.AbstractJuMPScalar}}"
"src/JuMP.jl","Base.zero","mtsig","Tuple{Type{V}} where V <: AbstractVariableRef"
"src/JuMP.jl","Base.zero","mtsig","Tuple{AbstractVariableRef}"
"src/JuMP.jl","Base.one","mtsig","Tuple{Type{V}} where V <: AbstractVariableRef"
"src/JuMP.jl","Base.one","mtsig","Tuple{AbstractVariableRef}"
"src/JuMP.jl","_moi_optimizer_index","mtsig","Tuple{MOI.AbstractOptimizer, MOI.Index}"
"src/JuMP.jl","_moi_optimizer_index","mtsig","Tuple{MOIU.CachingOptimizer, MOI.Index}"
"src/JuMP.jl","_moi_optimizer_index","mtsig","Tuple{MOI.Bridges.LazyBridgeOptimizer, MOI.Index}"
"src/JuMP.jl","optimizer_index","mtsig","Tuple{VariableRef}"
"src/JuMP.jl","optimizer_index","mtsig","Tuple{ConstraintRef{Model}}"
"src/JuMP.jl","index","mtsig","Tuple{ConstraintRef}"
"src/JuMP.jl","_moi_get_result","mtsig","Tuple{MOI.ModelLike, Vararg{Any}}"
"src/JuMP.jl","_moi_get_result","mtsig","Tuple{MOIU.CachingOptimizer, Vararg{Any}}"
"src/JuMP.jl","MOI.get","mtsig","Tuple{Model, MOI.AbstractModelAttribute}"
"src/JuMP.jl","MOI.get","mtsig","Tuple{Model, MOI.TerminationStatus}"
"src/JuMP.jl","MOI.get","mtsig","Tuple{Model, Union{MOI.PrimalStatus, MOI.DualStatus}}"
"src/JuMP.jl","MOI.get","mtsig","Tuple{Model, MOI.AbstractOptimizerAttribute}"
"src/JuMP.jl","MOI.get","mtsig","Tuple{Model, MOI.AbstractVariableAttribute, VariableRef}"
"src/JuMP.jl","MOI.get","mtsig","Tuple{Model, MOI.AbstractConstraintAttribute, ConstraintRef}"
"src/JuMP.jl","MOI.set","mtsig","Tuple{Model, MOI.AbstractOptimizerAttribute, Any}"
"src/JuMP.jl","MOI.set","mtsig","Tuple{Model, MOI.AbstractModelAttribute, Any}"
"src/JuMP.jl","MOI.set","mtsig","Tuple{Model, MOI.AbstractVariableAttribute, VariableRef, Any}"
"src/JuMP.jl","MOI.set","mtsig","Tuple{Model, MOI.AbstractConstraintAttribute, ConstraintRef, Any}"
"src/JuMP.jl","_constant_to_number","mtsig","Tuple{Number}"
"src/JuMP.jl","_constant_to_number","mtsig","Tuple{UniformScaling}"
"src/JuMP.jl","Base.getindex","mtsig","Tuple{JuMP.AbstractModel, Symbol}"
"src/JuMP.jl","Base.setindex!","mtsig","Tuple{AbstractModel, Any, Symbol}"
"src/JuMP.jl","Base.haskey","mtsig","Tuple{AbstractModel, Symbol}"
"src/JuMP.jl","operator_warn","mtsig","Tuple{AbstractModel}"
"src/JuMP.jl","operator_warn","mtsig","Tuple{Model}"
"src/aff_expr.jl","_add_or_set!","mtsig","(Tuple{OrderedDict{K, V}, K, V} where V) where K"
"src/aff_expr.jl","_new_ordered_dict","mtsig","(Tuple{Type{K}, Type{V}, AbstractArray{<:Pair}} where V) where K"
"src/aff_expr.jl","_new_ordered_dict","mtsig","((Tuple{Type{K}, Type{V}, Vararg{Pair, N}} where N) where V) where K"
"src/aff_expr.jl","_new_ordered_dict","mtsig","(Tuple{Type{K}, Type{V}, Pair} where V) where K"
"src/aff_expr.jl","_new_ordered_dict","mtsig","(Tuple{Type{K}, Type{V}, Pair, Pair} where V) where K"
"src/aff_expr.jl","_build_aff_expr","mtsig","(Tuple{V, V, K} where K) where V"
"src/aff_expr.jl","_build_aff_expr","mtsig","(Tuple{V, V, K, V, K} where K) where V"
"src/aff_expr.jl","variable_ref_type","mtsig","(Tuple{GenericAffExpr{C, V}} where V) where C"
"src/aff_expr.jl","GenericAffExpr","mtsig","(Tuple{V, AbstractArray{Pair{K, V}}} where V) where K"
"src/aff_expr.jl","GenericAffExpr","mtsig","((Tuple{V, Pair{K, V}, Vararg{Pair{K, V}, N}} where N) where V) where K"
"src/aff_expr.jl","GenericAffExpr","mtsig","(Tuple{Any, AbstractArray{<:Pair}} where V) where K"
"src/aff_expr.jl","GenericAffExpr","mtsig","((Tuple{Any, Vararg{Pair, N}} where N) where V) where K"
"src/aff_expr.jl","Base.iszero","mtsig","Tuple{GenericAffExpr}"
"src/aff_expr.jl","Base.zero","mtsig","(Tuple{Type{GenericAffExpr{C, V}}} where V) where C"
"src/aff_expr.jl","Base.zero","mtsig","Tuple{GenericAffExpr}"
"src/aff_expr.jl","Base.one","mtsig","(Tuple{Type{GenericAffExpr{C, V}}} where V) where C"
"src/aff_expr.jl","Base.one","mtsig","Tuple{GenericAffExpr}"
"src/aff_expr.jl","Base.copy","mtsig","Tuple{GenericAffExpr}"
"src/aff_expr.jl","Base.broadcastable","mtsig","Tuple{GenericAffExpr}"
"src/aff_expr.jl","Base.conj","mtsig","Tuple{GenericAffExpr{<:Real}}"
"src/aff_expr.jl","Base.real","mtsig","Tuple{GenericAffExpr{<:Real}}"
"src/aff_expr.jl","Base.imag","mtsig","Tuple{GenericAffExpr{<:Real}}"
"src/aff_expr.jl","Base.abs2","mtsig","Tuple{GenericAffExpr{<:Real}}"
"src/aff_expr.jl","Base.conj","mtsig","Tuple{GenericAffExpr{<:Complex}}"
"src/aff_expr.jl","_map_coefs","mtsig","(Tuple{Function, GenericAffExpr{Complex{T}, V}} where V) where T"
"src/aff_expr.jl","Base.real","mtsig","Tuple{GenericAffExpr{<:Complex}}"
"src/aff_expr.jl","Base.imag","mtsig","Tuple{GenericAffExpr{<:Complex}}"
"src/aff_expr.jl","Base.abs2","mtsig","Tuple{GenericAffExpr{<:Complex}}"
"src/aff_expr.jl","Base.:(==)","mtsig","Tuple{GenericAffExpr, Number}"
"src/aff_expr.jl","coefficient","mtsig","(Tuple{GenericAffExpr{C, V}, V} where V) where C"
"src/aff_expr.jl","coefficient","mtsig","(Tuple{GenericAffExpr{C, V}, V, V} where V) where C"
"src/aff_expr.jl","drop_zeros!","mtsig","Tuple{GenericAffExpr}"
"src/aff_expr.jl","GenericAffExpr","mtsig","(Tuple{} where V) where C"
"src/aff_expr.jl","_affine_coefficient","mtsig","(Tuple{GenericAffExpr{C, V}, V} where V) where C"
"src/aff_expr.jl","map_coefficients_inplace!","mtsig","Tuple{Function, GenericAffExpr}"
"src/aff_expr.jl","map_coefficients","mtsig","Tuple{Function, GenericAffExpr}"
"src/aff_expr.jl","_map_aff","mtsig","((Tuple{Any, C, GenericAffExpr{T, V}} where V) where T) where C"
"src/aff_expr.jl","Base.sizehint!","mtsig","Tuple{GenericAffExpr, Int}"
"src/aff_expr.jl","value","mtsig","(Tuple{Function, GenericAffExpr{T, V}} where V) where T"
"src/aff_expr.jl","constant","mtsig","Tuple{GenericAffExpr}"
"src/aff_expr.jl","linear_terms","mtsig","Tuple{GenericAffExpr}"
"src/aff_expr.jl","_reverse_pair_to_tuple","mtsig","Tuple{Pair}"
"src/aff_expr.jl","Base.iterate","mtsig","Tuple{LinearTermIterator}"
"src/aff_expr.jl","Base.iterate","mtsig","Tuple{LinearTermIterator, Any}"
"src/aff_expr.jl","Base.length","mtsig","Tuple{LinearTermIterator}"
"src/aff_expr.jl","Base.eltype","mtsig","(Tuple{LinearTermIterator{GenericAffExpr{C, V}}} where V) where C"
"src/aff_expr.jl","add_to_expression!","mtsig","Tuple{GenericAffExpr, _Constant}"
"src/aff_expr.jl","add_to_expression!","mtsig","(Tuple{GenericAffExpr{C, V}, V} where V) where C"
"src/aff_expr.jl","add_to_expression!","mtsig","((Tuple{GenericAffExpr{S, V}, GenericAffExpr{T, V}} where V) where T) where S"
"src/aff_expr.jl","add_to_expression!","mtsig","(Tuple{GenericAffExpr{C, V}, _Constant, V} where V) where C"
"src/aff_expr.jl","add_to_expression!","mtsig","(Tuple{GenericAffExpr{C, V}, V, _Constant} where V) where C"
"src/aff_expr.jl","add_to_expression!","mtsig","((Tuple{GenericAffExpr{S, V}, _Constant, GenericAffExpr{T, V}} where V) where T) where S"
"src/aff_expr.jl","add_to_expression!","mtsig","(Tuple{GenericAffExpr{C, V}, GenericAffExpr{C, V}, _Constant} where V) where C"
"src/aff_expr.jl","Base.isequal","mtsig","(Tuple{GenericAffExpr{C, V}, GenericAffExpr{C, V}} where V) where C"
"src/aff_expr.jl","Base.hash","mtsig","Tuple{GenericAffExpr, UInt}"
"src/aff_expr.jl","SparseArrays.dropzeros","mtsig","Tuple{GenericAffExpr}"
"src/aff_expr.jl","isequal_canonical","mtsig","(Tuple{GenericAffExpr{C, V}, GenericAffExpr{C, V}} where V) where C"
"src/aff_expr.jl","Base.convert","mtsig","(Tuple{Type{GenericAffExpr{T, V}}, V} where V) where T"
"src/aff_expr.jl","Base.convert","mtsig","(Tuple{Type{GenericAffExpr{T, V}}, _Constant} where V) where T"
"src/aff_expr.jl","Base.convert","mtsig","(Tuple{Type{GenericAffExpr{T, V}}, GenericAffExpr{T, V}} where V) where T"
"src/aff_expr.jl","Base.convert","mtsig","((Tuple{Type{GenericAffExpr{T, V}}, GenericAffExpr{S, V}} where V) where T) where S"
"src/aff_expr.jl","_assert_isfinite","mtsig","Tuple{GenericAffExpr}"
"src/aff_expr.jl","value","mtsig","Tuple{GenericAffExpr, Int}"
"src/aff_expr.jl","<NA-name>","mtsig","Tuple{Any}"
"src/aff_expr.jl","check_belongs_to_model","mtsig","Tuple{GenericAffExpr, AbstractModel}"
"src/aff_expr.jl","MOI.ScalarAffineFunction","mtsig","Tuple{GenericAffExpr{C, VariableRef}} where C"
"src/aff_expr.jl","moi_function","mtsig","Tuple{GenericAffExpr}"
"src/aff_expr.jl","moi_function_type","mtsig","Tuple{Type{<:GenericAffExpr{T}}} where T"
"src/aff_expr.jl","GenericAffExpr","mtsig","Tuple{Model, MOI.ScalarAffineFunction} where C"
"src/aff_expr.jl","jump_function_type","mtsig","Tuple{Model, Type{MOI.ScalarAffineFunction{T}}} where T"
"src/aff_expr.jl","jump_function","mtsig","Tuple{Model, MOI.ScalarAffineFunction{T}} where T"
"src/aff_expr.jl","jump_function_type","mtsig","Tuple{Model, Type{MOI.VectorAffineFunction{T}}} where T"
"src/aff_expr.jl","jump_function","mtsig","Tuple{Model, MOI.VectorAffineFunction{T}} where T"
"src/aff_expr.jl","_fill_vaf!","mtsig","Tuple{Vector{<:MOI.VectorAffineTerm}, Int, Int, AbstractJuMPScalar}"
"src/aff_expr.jl","MOI.VectorAffineFunction","mtsig","Tuple{Vector{GenericAffExpr{C, VariableRef}}} where C"
"src/aff_expr.jl","moi_function","mtsig","Tuple{Vector{<:GenericAffExpr}}"
"src/aff_expr.jl","moi_function_type","mtsig","Tuple{Type{<:Vector{<:GenericAffExpr{T}}}} where T"
"src/callbacks.jl","callback_node_status","mtsig","Tuple{Any, Model}"
"src/callbacks.jl","callback_value","mtsig","Tuple{Any, VariableRef}"
"src/callbacks.jl","callback_value","mtsig","Tuple{Any, Union{GenericAffExpr, GenericQuadExpr}}"
"src/callbacks.jl","<NA-name>","mtsig","Tuple{Any}"
"src/callbacks.jl","MOI.submit","mtsig","Tuple{Model, MOI.LazyConstraint, ScalarConstraint}"
"src/callbacks.jl","MOI.submit","mtsig","Tuple{Model, MOI.UserCut, ScalarConstraint}"
"src/callbacks.jl","MOI.submit","mtsig","Tuple{Model, MOI.HeuristicSolution, Vector{VariableRef}, Vector{<:Real}}"
"src/complement.jl","_build_complements_constraint","mtsig","Tuple{Function, AbstractArray{<:AbstractJuMPScalar}, AbstractArray{<:AbstractVariableRef}}"
"src/complement.jl","_build_complements_constraint","mtsig","Tuple{Function, Containers.SparseAxisArray{<:AbstractJuMPScalar}, Containers.SparseAxisArray{<:AbstractVariableRef}}"
"src/complement.jl","_build_complements_constraint","mtsig","Tuple{Function, AbstractArray{<:AbstractJuMPScalar}, AbstractArray{<:AbstractJuMPScalar}}"
"src/complement.jl","_build_complements_constraint","mtsig","Tuple{Function, AbstractJuMPScalar, AbstractVariableRef}"
"src/complement.jl","_build_complements_constraint","mtsig","Tuple{Function, AbstractJuMPScalar, AbstractJuMPScalar}"
"src/complement.jl","parse_constraint_call","mtsig","Tuple{Function, Bool, Union{Val{:complements}, Val{:⟂}}, Any, Any}"
"src/constraints.jl","owner_model","mtsig","Tuple{ConstraintRef}"
"src/constraints.jl","check_belongs_to_model","mtsig","Tuple{ConstraintRef, AbstractModel}"
"src/constraints.jl","Base.broadcastable","mtsig","Tuple{ConstraintRef}"
"src/constraints.jl","dual_start_value","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON}}"
"src/constraints.jl","_dual_start","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON{<:MOI.AbstractScalarFunction, <:MOI.AbstractScalarSet}}}"
"src/constraints.jl","_dual_start","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON{<:MOI.AbstractVectorFunction, <:MOI.AbstractVectorSet}}}"
"src/constraints.jl","set_dual_start_value","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON{<:MOI.AbstractVectorFunction, <:MOI.AbstractVectorSet}}, Any}"
"src/constraints.jl","set_dual_start_value","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON{<:MOI.AbstractVectorFunction, <:MOI.AbstractVectorSet}}, Nothing}"
"src/constraints.jl","set_dual_start_value","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON{<:MOI.AbstractScalarFunction, <:MOI.AbstractScalarSet}}, Any}"
"src/constraints.jl","set_start_value","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON{<:MOI.AbstractVectorFunction, <:MOI.AbstractVectorSet}}, Any}"
"src/constraints.jl","set_start_value","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON{<:MOI.AbstractVectorFunction, <:MOI.AbstractVectorSet}}, Nothing}"
"src/constraints.jl","set_start_value","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON{<:MOI.AbstractScalarFunction, <:MOI.AbstractScalarSet}}, Any}"
"src/constraints.jl","start_value","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON}}"
"src/constraints.jl","name","mtsig","Tuple{ConstraintRef{<:AbstractModel, C}} where C <: _MOICON"
"src/constraints.jl","name","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:MOI.ConstraintIndex{MOI.VariableIndex}}}"
"src/constraints.jl","set_name","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON}, String}"
"src/constraints.jl","constraint_by_name","mtsig","Tuple{Model, String}"
"src/constraints.jl","constraint_by_name","mtsig","Tuple{Model, String, Type{<:MOI.AbstractFunction}, Type{<:MOI.AbstractSet}}"
"src/constraints.jl","constraint_by_name","mtsig","Tuple{Model, String, Type{<:Union{ScalarType, Vector{ScalarType}}}, Type} where ScalarType <: AbstractJuMPScalar"
"src/constraints.jl","constraint_ref_with_index","mtsig","Tuple{AbstractModel, MOI.ConstraintIndex{<:MOI.AbstractScalarFunction, <:MOI.AbstractScalarSet}}"
"src/constraints.jl","constraint_ref_with_index","mtsig","Tuple{AbstractModel, MOI.ConstraintIndex{<:MOI.AbstractVectorFunction, <:MOI.AbstractVectorSet}}"
"src/constraints.jl","delete","mtsig","Tuple{Model, ConstraintRef}"
"src/constraints.jl","delete","mtsig","Tuple{Model, Vector{<:ConstraintRef{<:AbstractModel}}}"
"src/constraints.jl","<NA-name>","mtsig","Tuple{Any}"
"src/constraints.jl","is_valid","mtsig","Tuple{Model, ConstraintRef{<:AbstractModel}}"
"src/constraints.jl","add_constraint","mtsig","Tuple{Model, BridgeableConstraint, String}"
"src/constraints.jl","jump_function","mtsig","Tuple{AbstractConstraint}"
"src/constraints.jl","moi_function","mtsig","Tuple{AbstractConstraint}"
"src/constraints.jl","moi_set","mtsig","Tuple{AbstractConstraint}"
"src/constraints.jl","reshape_set","mtsig","Tuple{MOI.AbstractScalarSet, ScalarShape}"
"src/constraints.jl","shape","mtsig","Tuple{ScalarConstraint}"
"src/constraints.jl","constraint_object","mtsig","(Tuple{ConstraintRef{<:AbstractModel, _MOICON{FuncType, SetType}}} where SetType <: MOI.AbstractScalarSet) where FuncType <: MOI.AbstractScalarFunction"
"src/constraints.jl","check_belongs_to_model","mtsig","Tuple{ScalarConstraint, Any}"
"src/constraints.jl","VectorConstraint","mtsig","Tuple{Vector{<:AbstractJuMPScalar}, MOI.AbstractVectorSet}"
"src/constraints.jl","VectorConstraint","mtsig","Tuple{AbstractVector{<:AbstractJuMPScalar}, MOI.AbstractVectorSet}"
"src/constraints.jl","reshape_set","mtsig","Tuple{MOI.AbstractVectorSet, VectorShape}"
"src/constraints.jl","shape","mtsig","Tuple{VectorConstraint}"
"src/constraints.jl","constraint_object","mtsig","(Tuple{ConstraintRef{<:AbstractModel, _MOICON{FuncType, SetType}}} where SetType <: MOI.AbstractVectorSet) where FuncType <: MOI.AbstractVectorFunction"
"src/constraints.jl","check_belongs_to_model","mtsig","Tuple{VectorConstraint, Any}"
"src/constraints.jl","_moi_add_constraint","mtsig","(Tuple{MOI.ModelLike, F, S} where S <: MOI.AbstractSet) where F <: MOI.AbstractFunction"
"src/constraints.jl","add_constraint","mtsig","Tuple{Model, AbstractConstraint, String}"
"src/constraints.jl","set_normalized_coefficient","mtsig","((Tuple{ConstraintRef{<:AbstractModel, _MOICON{F, S}}, Any, Any} where F <: Union{MOI.ScalarAffineFunction{T}, MOI.ScalarQuadraticFunction{T}}) where T) where S"
"src/constraints.jl","set_normalized_coefficients","mtsig","(Tuple{ConstraintRef{<:AbstractModel, <:MOI.ConstraintIndex{F}}, Any, Vector{Tuple{Int64, T}}} where F <: Union{MOI.VectorAffineFunction{T}, MOI.VectorQuadraticFunction{T}}) where T"
"src/constraints.jl","normalized_coefficient","mtsig","((Tuple{ConstraintRef{<:AbstractModel, _MOICON{F, S}}, Any} where F <: Union{MOI.ScalarAffineFunction{T}, MOI.ScalarQuadraticFunction{T}}) where T) where S"
"src/constraints.jl","set_normalized_rhs","mtsig","((Tuple{ConstraintRef{<:AbstractModel, _MOICON{F, S}}, Any} where F <: Union{MOI.ScalarAffineFunction{T}, MOI.ScalarQuadraticFunction{T}}) where S <: Union{MOI.LessThan{T}, MOI.GreaterThan{T}, MOI.EqualTo{T}}) where T"
"src/constraints.jl","normalized_rhs","mtsig","((Tuple{ConstraintRef{<:AbstractModel, _MOICON{F, S}}} where F <: Union{MOI.ScalarAffineFunction{T}, MOI.ScalarQuadraticFunction{T}}) where S <: Union{MOI.LessThan{T}, MOI.GreaterThan{T}, MOI.EqualTo{T}}) where T"
"src/constraints.jl","_moi_add_to_function_constant","mtsig","Tuple{MOI.ModelLike, MOI.ConstraintIndex{<:MOI.AbstractScalarFunction, <:MOI.AbstractScalarSet}, Any}"
"src/constraints.jl","_moi_add_to_function_constant","mtsig","Tuple{MOI.ModelLike, MOI.ConstraintIndex{<:Union{MOI.VectorAffineFunction, MOI.VectorQuadraticFunction}, <:MOI.AbstractVectorSet}, Any}"
"src/constraints.jl","add_to_function_constant","mtsig","Tuple{ConstraintRef{<:AbstractModel}, Any}"
"src/constraints.jl","value","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON}, Int}"
"src/constraints.jl","value","mtsig","Tuple{Function, ConstraintRef{<:AbstractModel, <:_MOICON}}"
"src/constraints.jl","_constraint_primal","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON{<:MOI.AbstractScalarFunction, <:MOI.AbstractScalarSet}}, Int}"
"src/constraints.jl","_constraint_primal","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON{<:MOI.AbstractVectorFunction, <:MOI.AbstractVectorSet}}, Any}"
"src/constraints.jl","has_duals","mtsig","Tuple{Model, Int}"
"src/constraints.jl","dual","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON}, Int}"
"src/constraints.jl","_constraint_dual","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON{<:MOI.AbstractScalarFunction, <:MOI.AbstractScalarSet}}, Int}"
"src/constraints.jl","_constraint_dual","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON{<:MOI.AbstractVectorFunction, <:MOI.AbstractVectorSet}}, Int}"
"src/constraints.jl","shadow_price","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:_MOICON}}"
"src/constraints.jl","_shadow_price_less_than","mtsig","Tuple{Any, MOI.OptimizationSense}"
"src/constraints.jl","_shadow_price_greater_than","mtsig","Tuple{Any, MOI.OptimizationSense}"
"src/constraints.jl","shadow_price","mtsig","(Tuple{ConstraintRef{<:AbstractModel, _MOICON{F, S}}} where F) where S <: MOI.LessThan"
"src/constraints.jl","shadow_price","mtsig","(Tuple{ConstraintRef{<:AbstractModel, _MOICON{F, S}}} where F) where S <: MOI.GreaterThan"
"src/constraints.jl","shadow_price","mtsig","(Tuple{ConstraintRef{<:AbstractModel, _MOICON{F, S}}} where F) where S <: MOI.EqualTo"
"src/constraints.jl","_error_if_not_concrete_type","mtsig","Tuple{Any}"
"src/constraints.jl","_error_if_not_concrete_type","mtsig","Tuple{Type{Vector{ElT}}} where ElT"
"src/constraints.jl","num_constraints","mtsig","Tuple{Model, Type{<:Union{AbstractJuMPScalar, Vector{<:AbstractJuMPScalar}}}, Type{<:MOI.AbstractSet}}"
"src/constraints.jl","all_constraints","mtsig","Tuple{Model, Type{<:Union{AbstractJuMPScalar, Vector{<:AbstractJuMPScalar}}}, Type{<:MOI.AbstractSet}}"
"src/constraints.jl","list_of_constraint_types","mtsig","Tuple{Model}"
"src/constraints.jl","num_constraints","mtsig","Tuple{Model, Bool}"
"src/copy.jl","copy_extension_data","mtsig","Tuple{Any, AbstractModel, AbstractModel}"
"src/copy.jl","Base.getindex","mtsig","Tuple{ReferenceMap, VariableRef}"
"src/copy.jl","Base.getindex","mtsig","Tuple{ReferenceMap, ConstraintRef}"
"src/copy.jl","Base.getindex","mtsig","Tuple{ReferenceMap, GenericAffExpr}"
"src/copy.jl","Base.getindex","mtsig","Tuple{ReferenceMap, GenericQuadExpr}"
"src/copy.jl","Base.getindex","mtsig","Tuple{ReferenceMap, AbstractArray}"
"src/copy.jl","Base.broadcastable","mtsig","Tuple{ReferenceMap}"
"src/copy.jl","_should_copy_complete_object","mtsig","Tuple{Any, Any}"
"src/copy.jl","_should_copy_complete_object","mtsig","Tuple{Function, ConstraintRef}"
"src/copy.jl","_should_copy_complete_object","mtsig","Tuple{Function, AbstractArray{T}} where T <: ConstraintRef"
"src/copy.jl","copy_model","mtsig","Tuple{Model, Union{Nothing, Function}}"
"src/copy.jl","moi_filter","mtsig","Tuple{MOI.ConstraintIndex}"
"src/copy.jl","moi_filter","mtsig","Tuple{Any}"
"src/copy.jl","Base.copy","mtsig","Tuple{AbstractModel}"
"src/copy.jl","copy_conflict","mtsig","Tuple{Model}"
"src/copy.jl","<NA-name>","mtsig","Tuple{Any}"
"src/copy.jl","Base.deepcopy","mtsig","Tuple{Model}"
"src/copy.jl","MOI.copy_to","mtsig","Tuple{MOI.ModelLike, Model}"
"src/copy.jl","MOI.copy_to","mtsig","Tuple{Model, MOI.ModelLike}"
"src/feasibility_checker.jl","_last_primal_solution","mtsig","Tuple{Model}"
"src/feasibility_checker.jl","primal_feasibility_report","mtsig","Tuple{Model, AbstractDict{VariableRef, Float64}, Float64, Bool}"
"src/feasibility_checker.jl","<NA-name>","mtsig","Tuple{Any}"
"src/feasibility_checker.jl","primal_feasibility_report","mtsig","Tuple{Function, Model, Float64, Bool}"
"src/feasibility_checker.jl","_add_infeasible_constraints","mtsig","(Tuple{Model, Type{F}, Type{S}, Dict{Any, Float64}, Function, Float64} where S) where F"
"src/feasibility_checker.jl","_add_infeasible_nonlinear_constraints","mtsig","Tuple{Model, Dict{Any, Float64}, Function, Float64}"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{Any, MOI.AbstractSet}"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{Missing, MOI.AbstractSet}"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{T, MOI.LessThan{T}} where T <: Real"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{T, MOI.GreaterThan{T}} where T <: Real"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{T, MOI.EqualTo{T}} where T <: Number"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{T, MOI.Interval{T}} where T <: Real"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{T, MOI.ZeroOne} where T <: Real"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{T, MOI.Integer} where T <: Real"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{T, MOI.Semicontinuous{T}} where T <: Real"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{T, MOI.Semiinteger{T}} where T <: Real"
"src/feasibility_checker.jl","_check_dimension","mtsig","Tuple{AbstractVector, Any}"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{Vector{T}, MOI.Nonnegatives} where T <: Real"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{Vector{T}, MOI.Nonpositives} where T <: Real"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{Vector{T}, MOI.Zeros} where T <: Number"
"src/feasibility_checker.jl","_distance_to_set","mtsig","Tuple{Vector{T}, MOI.Reals} where T <: Real"
"src/file_formats.jl","_throw_write_to_file_explanatory_message","mtsig","(Tuple{MOI.UnsupportedConstraint{F, S}} where S) where F"
"src/file_formats.jl","_throw_write_to_file_explanatory_message","mtsig","Tuple{MOI.UnsupportedAttribute{MOI.ObjectiveFunction{F}}} where F"
"src/file_formats.jl","_throw_write_to_file_explanatory_message","mtsig","Tuple{Any}"
"src/file_formats.jl","_copy_to_bridged_model","mtsig","Tuple{Function, Model}"
"src/file_formats.jl","write_to_file","mtsig","Tuple{Model, String, MOI.FileFormats.FileFormat, Vararg{Any}}"
"src/file_formats.jl","<NA-name>","mtsig","Tuple{}"
"src/file_formats.jl","Base.write","mtsig","Tuple{IO, Model, MOI.FileFormats.FileFormat, Vararg{Any}}"
"src/file_formats.jl","<NA-name>","mtsig","Tuple{}"
"src/file_formats.jl","read_from_file","mtsig","Tuple{String, MOI.FileFormats.FileFormat, Vararg{Any}}"
"src/file_formats.jl","Base.read","mtsig","Tuple{IO, Type{Model}, MOI.FileFormats.FileFormat, Vararg{Any}}"
"src/indicator.jl","_build_indicator_constraint","mtsig","Tuple{Function, AbstractVariableRef, ScalarConstraint, Type{MOI.Indicator{A}}} where A"
"src/indicator.jl","_indicator_variable_set","mtsig","Tuple{Function, Symbol}"
"src/indicator.jl","_indicator_variable_set","mtsig","Tuple{Function, Expr}"
"src/indicator.jl","parse_constraint_call","mtsig","Tuple{Function, Bool, Union{Val{:(=>)}, Val{:⇒}}, Any, Any}"
"src/indicator.jl","constraint_string","mtsig","(Tuple{Any, VectorConstraint{F, <:MOI.Indicator{A}}} where A) where F"
"src/lp_sensitivity2.jl","Base.getindex","mtsig","Tuple{SensitivityReport, ConstraintRef}"
"src/lp_sensitivity2.jl","Base.getindex","mtsig","Tuple{SensitivityReport, VariableRef}"
"src/lp_sensitivity2.jl","lp_sensitivity_report","mtsig","Tuple{Model, Float64}"
"src/lp_sensitivity2.jl","_basic_range","mtsig","Tuple{Any, MOI.LessThan}"
"src/lp_sensitivity2.jl","_basic_range","mtsig","Tuple{Any, MOI.GreaterThan}"
"src/lp_sensitivity2.jl","_basic_range","mtsig","Tuple{Any, Any}"
"src/lp_sensitivity2.jl","_compute_rhs_range","mtsig","Tuple{Any, Any, Any, Any, Any}"
"src/lp_sensitivity2.jl","_is_lp","mtsig","Tuple{Model}"
"src/lp_sensitivity2.jl","_standard_form_matrix","mtsig","Tuple{Model}"
"src/lp_sensitivity2.jl","_fill_standard_form","mtsig","Tuple{Model, Dict{VariableRef, Int}, Vector{ConstraintRef}, Vector{ConstraintRef}, Type{VariableRef}, Type, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}, Vector{Int}, Vector{Float64}}"
"src/lp_sensitivity2.jl","_fill_standard_form","mtsig","Tuple{Model, Dict{VariableRef, Int}, Vector{ConstraintRef}, Vector{ConstraintRef}, Type{<:GenericAffExpr}, Type, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Int}, Vector{Int}, Vector{Float64}}"
"src/lp_sensitivity2.jl","_convert_nonbasic_status","mtsig","Tuple{MOI.LessThan}"
"src/lp_sensitivity2.jl","_convert_nonbasic_status","mtsig","Tuple{MOI.GreaterThan}"
"src/lp_sensitivity2.jl","_convert_nonbasic_status","mtsig","Tuple{Any}"
"src/lp_sensitivity2.jl","_try_get_constraint_basis_status","mtsig","Tuple{Model, Any}"
"src/lp_sensitivity2.jl","_try_get_variable_basis_status","mtsig","Tuple{Model, Any}"
"src/lp_sensitivity2.jl","_nonbasic_at_lower","mtsig","Tuple{MOI.GreaterThan}"
"src/lp_sensitivity2.jl","_nonbasic_at_lower","mtsig","Tuple{Any}"
"src/lp_sensitivity2.jl","_nonbasic_at_upper","mtsig","Tuple{MOI.LessThan}"
"src/lp_sensitivity2.jl","_nonbasic_at_upper","mtsig","Tuple{Any}"
"src/lp_sensitivity2.jl","_standard_form_basis","mtsig","Tuple{Model, Any}"
"src/macros.jl","_is_sum","mtsig","Tuple{Symbol}"
"src/macros.jl","_is_prod","mtsig","Tuple{Symbol}"
"src/macros.jl","_add_kw_args","mtsig","Tuple{Any, Any}"
"src/macros.jl","_add_positional_args","mtsig","Tuple{Any, Any}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","_valid_model","mtsig","Tuple{AbstractModel, Any}"
"src/macros.jl","_valid_model","mtsig","Tuple{Any, Any}"
"src/macros.jl","_finalize_macro","mtsig","Tuple{Any, Any, LineNumberNode}"
"src/macros.jl","_error_if_cannot_register","mtsig","Tuple{AbstractModel, Symbol}"
"src/macros.jl","_error_if_cannot_register","mtsig","Tuple{AbstractModel, Any}"
"src/macros.jl","_macro_assign_and_return","mtsig","Tuple{Any, Any, Any, Any}"
"src/macros.jl","_check_vectorized","mtsig","Tuple{Symbol}"
"src/macros.jl","operator_to_set","mtsig","Tuple{Function, Union{Val{:<=}, Val{:≤}}}"
"src/macros.jl","operator_to_set","mtsig","Tuple{Function, Union{Val{:>=}, Val{:≥}}}"
"src/macros.jl","operator_to_set","mtsig","Tuple{Function, Val{:(==)}}"
"src/macros.jl","operator_to_set","mtsig","Tuple{Function, Val{S}} where S"
"src/macros.jl","_desparsify","mtsig","Tuple{AbstractSparseArray}"
"src/macros.jl","_desparsify","mtsig","Tuple{Any}"
"src/macros.jl","_functionize","mtsig","Tuple{V} where V <: AbstractVariableRef"
"src/macros.jl","_functionize","mtsig","Tuple{AbstractArray{<:AbstractVariableRef}}"
"src/macros.jl","_functionize","mtsig","Tuple{LinearAlgebra.Symmetric{V}} where V <: AbstractVariableRef"
"src/macros.jl","_functionize","mtsig","Tuple{Any}"
"src/macros.jl","_functionize","mtsig","Tuple{MutableArithmetics.Zero}"
"src/macros.jl","parse_constraint","mtsig","Tuple{Function, Expr}"
"src/macros.jl","parse_constraint_head","mtsig","Tuple{Function, Val{T}, Vararg{Any}} where T"
"src/macros.jl","parse_constraint_head","mtsig","Tuple{Function, Val{:call}, Symbol, Vararg{Any}}"
"src/macros.jl","parse_constraint_head","mtsig","Tuple{Function, Val{:comparison}, Any, Symbol, Any, Symbol, Any}"
"src/macros.jl","parse_constraint_call","mtsig","Tuple{Function, Bool, Val{T}, Vararg{Any}} where T"
"src/macros.jl","parse_constraint_call","mtsig","Tuple{Function, Bool, Union{Val{:in}, Val{:∈}}, Any, Any}"
"src/macros.jl","parse_constraint_call","mtsig","Tuple{Function, Bool, Val, Any, Any}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, Any, Any, Vararg{Any}, Vararg{Any}}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, Any, Union{MOI.AbstractScalarSet, MOI.AbstractVectorSet}}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, AbstractJuMPScalar, MOI.AbstractScalarSet}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, Union{GenericAffExpr, GenericQuadExpr}, MOI.AbstractScalarSet}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, Number, MOI.AbstractScalarSet}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, MutableArithmetics.Zero, MOI.AbstractScalarSet}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, AbstractVector{<:AbstractJuMPScalar}, MOI.AbstractVectorSet}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, Vector{<:Number}, MOI.AbstractVectorSet}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, AbstractArray, MOI.AbstractScalarSet}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, Matrix, MOI.AbstractVectorSet}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, Matrix, Union{MOI.PositiveSemidefiniteConeSquare, MOI.PositiveSemidefiniteConeTriangle}}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, AbstractJuMPScalar, Real, Real}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, AbstractJuMPScalar, Union{AbstractJuMPScalar, Real}, Union{AbstractJuMPScalar, Real}}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, AbstractVariableRef, Real, Real}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, AbstractVector{<:AbstractJuMPScalar}, MOI.SOS1}"
"src/macros.jl","build_constraint","mtsig","Tuple{Function, AbstractVector{<:AbstractJuMPScalar}, MOI.SOS2}"
"src/macros.jl","_constraint_macro","mtsig","Tuple{Any, Symbol, Function, LineNumberNode}"
"src/macros.jl","_error","mtsig","Tuple{Vararg{Any}}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","_error","mtsig","Tuple{Vararg{Any}}"
"src/macros.jl","_add_JuMP_prefix","mtsig","Tuple{Symbol}"
"src/macros.jl","_pluralize_macro","mtsig","Tuple{Any, Any}"
"src/macros.jl","_moi_sense","mtsig","Tuple{Function, Any}"
"src/macros.jl","_throw_error_for_invalid_sense","mtsig","Tuple{Function, Any}"
"src/macros.jl","_throw_error_for_invalid_sense","mtsig","Tuple{Function, MOI.OptimizationSense}"
"src/macros.jl","_replace_zero","mtsig","Tuple{_MA.Zero}"
"src/macros.jl","_replace_zero","mtsig","Tuple{Any}"
"src/macros.jl","_error","mtsig","Tuple{Vararg{Any}}"
"src/macros.jl","_error","mtsig","Tuple{Vararg{Any}}"
"src/macros.jl","_esc_non_constant","mtsig","Tuple{Number}"
"src/macros.jl","_esc_non_constant","mtsig","Tuple{Expr}"
"src/macros.jl","_esc_non_constant","mtsig","Tuple{Any}"
"src/macros.jl","build_variable","mtsig","Tuple{Function, VariableInfo, Vararg{Any}, Vararg{Any}}"
"src/macros.jl","build_variable","mtsig","Tuple{Function, AbstractVariable, MOI.AbstractScalarSet}"
"src/macros.jl","build_variable","mtsig","Tuple{Function, AbstractArray{<:ScalarVariable}, AbstractArray{<:MOI.AbstractScalarSet}}"
"src/macros.jl","build_variable","mtsig","Tuple{Function, AbstractArray{<:ScalarVariable}, MOI.AbstractScalarSet}"
"src/macros.jl","build_variable","mtsig","Tuple{Function, ScalarVariable, AbstractArray{<:MOI.AbstractScalarSet}}"
"src/macros.jl","build_variable","mtsig","Tuple{Function, Vector{<:AbstractVariable}, MOI.AbstractVectorSet}"
"src/macros.jl","_macro_error","mtsig","Tuple{Any, Any, Any, Vararg{Any}}"
"src/macros.jl","_name_call","mtsig","Tuple{Any, Any}"
"src/macros.jl","reverse_sense","mtsig","Tuple{Val{:<=}}"
"src/macros.jl","reverse_sense","mtsig","Tuple{Val{:≤}}"
"src/macros.jl","reverse_sense","mtsig","Tuple{Val{:>=}}"
"src/macros.jl","reverse_sense","mtsig","Tuple{Val{:≥}}"
"src/macros.jl","reverse_sense","mtsig","Tuple{Val{:(==)}}"
"src/macros.jl","parse_variable","mtsig","Tuple{Function, _VariableInfoExpr, Vararg{Any}}"
"src/macros.jl","parse_one_operator_variable","mtsig","Tuple{Function, _VariableInfoExpr, Union{Val{:in}, Val{:∈}}, Any}"
"src/macros.jl","parse_one_operator_variable","mtsig","Tuple{Function, _VariableInfoExpr, Union{Val{:<=}, Val{:≤}, Val{:.<=}, Val{:.≤}}, Any}"
"src/macros.jl","parse_one_operator_variable","mtsig","Tuple{Function, _VariableInfoExpr, Union{Val{:>=}, Val{:≥}, Val{:.>=}, Val{:.≥}}, Any}"
"src/macros.jl","parse_one_operator_variable","mtsig","Tuple{Function, _VariableInfoExpr, Union{Val{:(==)}, Val{:.==}}, Any}"
"src/macros.jl","parse_one_operator_variable","mtsig","Tuple{Function, _VariableInfoExpr, Val{S}, Any} where S"
"src/macros.jl","parse_variable","mtsig","Tuple{Function, _VariableInfoExpr, Symbol, Any, Any}"
"src/macros.jl","parse_variable","mtsig","Tuple{Function, _VariableInfoExpr, Symbol, Number, Any}"
"src/macros.jl","parse_ternary_variable","mtsig","Tuple{Function, _VariableInfoExpr, Union{Val{:<=}, Val{:≤}, Val{:.<=}, Val{:.≤}}, Any, Union{Val{:<=}, Val{:≤}, Val{:.<=}, Val{:.≤}}, Any}"
"src/macros.jl","parse_ternary_variable","mtsig","Tuple{Function, _VariableInfoExpr, Union{Val{:>=}, Val{:≥}, Val{:.>=}, Val{:.≥}}, Any, Union{Val{:>=}, Val{:≥}, Val{:.>=}, Val{:.≥}}, Any}"
"src/macros.jl","parse_ternary_variable","mtsig","Tuple{Function, _VariableInfoExpr, Val, Any, Val, Any}"
"src/macros.jl","parse_variable","mtsig","Tuple{Function, _VariableInfoExpr, Any, Symbol, Any, Symbol, Any}"
"src/macros.jl","_reorder_parameters","mtsig","Tuple{Any}"
"src/macros.jl","_error","mtsig","Tuple{Vararg{Any}}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/macros.jl","_error","mtsig","Tuple{Vararg{Any}}"
"src/macros.jl","_error","mtsig","Tuple{Vararg{Any}}"
"src/macros.jl","_error","mtsig","Tuple{Vararg{Any}}"
"src/macros.jl","_error","mtsig","Tuple{Vararg{Any}}"
"src/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"src/mutable_arithmetics.jl","_change_coef","mtsig","((Tuple{Type{T}, Type{GenericAffExpr{C, V}}} where V) where C) where T"
"src/mutable_arithmetics.jl","_change_coef","mtsig","((Tuple{Type{T}, Type{GenericQuadExpr{C, V}}} where V) where C) where T"
"src/mutable_arithmetics.jl","_MA.promote_operation","mtsig","Tuple{Union{typeof(+), typeof(-), typeof(*)}, Type{<:_Constant}, Type{<:AbstractVariableRef}}"
"src/mutable_arithmetics.jl","_MA.promote_operation","mtsig","Tuple{Union{typeof(+), typeof(-), typeof(*)}, Type{<:AbstractVariableRef}, Type{<:_Constant}}"
"src/mutable_arithmetics.jl","_MA.promote_operation","mtsig","((Tuple{Union{typeof(+), typeof(-), typeof(*)}, Type{S}, Type{<:_GenericAffOrQuadExpr{T, V}}} where V) where T) where S <: _Constant"
"src/mutable_arithmetics.jl","_MA.promote_operation","mtsig","((Tuple{Union{typeof(+), typeof(-), typeof(*)}, Type{<:_GenericAffOrQuadExpr{T, V}}, Type{S}} where V) where T) where S <: _Constant"
"src/mutable_arithmetics.jl","_MA.promote_operation","mtsig","Tuple{Union{typeof(+), typeof(-)}, Type{V}, Type{V}} where V <: AbstractVariableRef"
"src/mutable_arithmetics.jl","_MA.promote_operation","mtsig","(Tuple{Union{typeof(+), typeof(-)}, Type{V}, Type{<:_GenericAffOrQuadExpr{C, V}}} where V <: AbstractVariableRef) where C"
"src/mutable_arithmetics.jl","_MA.promote_operation","mtsig","(Tuple{Union{typeof(+), typeof(-)}, Type{<:_GenericAffOrQuadExpr{C, V}}, Type{V}} where V <: AbstractVariableRef) where C"
"src/mutable_arithmetics.jl","_MA.promote_operation","mtsig","Tuple{Union{typeof(+), typeof(-)}, Type{A}, Type{A}} where A <: _GenericAffOrQuadExpr"
"src/mutable_arithmetics.jl","_MA.promote_operation","mtsig","(Tuple{Union{typeof(+), typeof(-)}, Type{<:GenericAffExpr{T, V}}, Type{<:GenericQuadExpr{T, V}}} where V) where T"
"src/mutable_arithmetics.jl","_MA.promote_operation","mtsig","(Tuple{Union{typeof(+), typeof(-)}, Type{<:GenericQuadExpr{T, V}}, Type{<:GenericAffExpr{T, V}}} where V) where T"
"src/mutable_arithmetics.jl","_MA.promote_operation","mtsig","Tuple{typeof(*), Type{V}, Type{V}} where V <: AbstractVariableRef"
"src/mutable_arithmetics.jl","_MA.promote_operation","mtsig","(Tuple{typeof(*), Type{V}, Type{GenericAffExpr{T, V}}} where V <: AbstractVariableRef) where T"
"src/mutable_arithmetics.jl","_MA.promote_operation","mtsig","(Tuple{typeof(*), Type{GenericAffExpr{T, V}}, Type{V}} where V <: AbstractVariableRef) where T"
"src/mutable_arithmetics.jl","_MA.isequal_canonical","mtsig","Tuple{T, T} where T <: AbstractJuMPScalar"
"src/mutable_arithmetics.jl","_MA.scaling","mtsig","Tuple{GenericAffExpr{C}} where C"
"src/mutable_arithmetics.jl","_MA.scaling","mtsig","Tuple{GenericQuadExpr{C}} where C"
"src/mutable_arithmetics.jl","_MA.mutability","mtsig","Tuple{Type{<:_GenericAffOrQuadExpr}}"
"src/mutable_arithmetics.jl","_MA.mutable_copy","mtsig","Tuple{_GenericAffOrQuadExpr}"
"src/mutable_arithmetics.jl","_MA.operate!","mtsig","Tuple{typeof(zero), GenericAffExpr}"
"src/mutable_arithmetics.jl","_MA.operate!","mtsig","Tuple{typeof(one), GenericAffExpr}"
"src/mutable_arithmetics.jl","_MA.operate!","mtsig","Tuple{Union{typeof(zero), typeof(one)}, GenericQuadExpr}"
"src/mutable_arithmetics.jl","_MA.operate!","mtsig","Tuple{typeof(*), _GenericAffOrQuadExpr, _Constant}"
"src/mutable_arithmetics.jl","<NA-name>","mtsig","Tuple{Any}"
"src/mutable_arithmetics.jl","_MA.operate!","mtsig","Tuple{typeof(+), _GenericAffOrQuadExpr, Any}"
"src/mutable_arithmetics.jl","_MA.operate!","mtsig","Tuple{typeof(-), _GenericAffOrQuadExpr, Any}"
"src/mutable_arithmetics.jl","_MA.operate!","mtsig","Tuple{typeof(_MA.add_mul), _GenericAffOrQuadExpr, _Scalar}"
"src/mutable_arithmetics.jl","_MA.operate!","mtsig","Tuple{typeof(_MA.add_mul), _GenericAffOrQuadExpr, _Scalar, _Scalar}"
"src/mutable_arithmetics.jl","_MA.operate!","mtsig","Tuple{typeof(_MA.sub_mul), _GenericAffOrQuadExpr, _Scalar}"
"src/mutable_arithmetics.jl","_MA.operate!","mtsig","Tuple{typeof(_MA.sub_mul), _GenericAffOrQuadExpr, _Scalar, _Scalar}"
"src/mutable_arithmetics.jl","_MA.operate!","mtsig","Tuple{typeof(_MA.sub_mul), _GenericAffOrQuadExpr, AbstractJuMPScalar, _Constant}"
"src/mutable_arithmetics.jl","_MA.operate!","mtsig","Tuple{_MA.AddSubMul, _GenericAffOrQuadExpr, Any, Any}"
"src/mutable_arithmetics.jl","_add_sub_mul_reorder!","mtsig","Tuple{_MA.AddSubMul, _GenericAffOrQuadExpr, Vararg{Any, N}} where N"
"src/mutable_arithmetics.jl","<NA-name>","mtsig","Tuple{Any}"
"src/mutable_arithmetics.jl","<NA-name>","mtsig","Tuple{Any}"
"src/mutable_arithmetics.jl","_MA.operate!","mtsig","Tuple{_MA.AddSubMul, _GenericAffOrQuadExpr, Any, Any, Any, Vararg{Any, N}} where N"
"src/mutable_arithmetics.jl","add_to_expression!","mtsig","Tuple{_GenericAffOrQuadExpr, _Constant, _Constant}"
"src/mutable_arithmetics.jl","_MA.add_mul","mtsig","Tuple{AbstractJuMPScalar, _Scalar, _Scalar}"
"src/mutable_arithmetics.jl","_MA.add_mul","mtsig","Tuple{AbstractJuMPScalar, _Scalar, _Scalar, Vararg{_Scalar, N}} where N"
"src/mutable_arithmetics.jl","_MA.sub_mul","mtsig","Tuple{AbstractJuMPScalar, _Scalar, _Scalar}"
"src/mutable_arithmetics.jl","_MA.sub_mul","mtsig","Tuple{AbstractJuMPScalar, _Scalar, _Scalar, Vararg{_Scalar, N}} where N"
"src/nlp.jl","set_objective","mtsig","Tuple{Model, MOI.OptimizationSense, _NonlinearExprData}"
"src/nlp.jl","_sense","mtsig","Tuple{_NonlinearConstraint}"
"src/nlp.jl","_rhs","mtsig","Tuple{_NonlinearConstraint}"
"src/nlp.jl","_nlp_objective_function","mtsig","Tuple{Model}"
"src/nlp.jl","_create_nlp_block_data","mtsig","Tuple{Model}"
"src/nlp.jl","NonlinearExpression","mtsig","Tuple{Model, _NonlinearExprData}"
"src/nlp.jl","_new_parameter","mtsig","Tuple{Model, Number}"
"src/nlp.jl","value","mtsig","Tuple{NonlinearParameter}"
"src/nlp.jl","set_value","mtsig","Tuple{NonlinearParameter, Number}"
"src/nlp.jl","_NLPData","mtsig","Tuple{}"
"src/nlp.jl","Base.copy","mtsig","Tuple{_NLPData}"
"src/nlp.jl","_init_NLP","mtsig","Tuple{Model}"
"src/nlp.jl","all_nonlinear_constraints","mtsig","Tuple{Model}"
"src/nlp.jl","<NA-name>","mtsig","Tuple{Any}"
"src/nlp.jl","is_valid","mtsig","Tuple{Model, NonlinearConstraintRef}"
"src/nlp.jl","dual","mtsig","Tuple{NonlinearConstraintRef}"
"src/nlp.jl","nonlinear_dual_start_value","mtsig","Tuple{Model}"
"src/nlp.jl","set_nonlinear_dual_start_value","mtsig","Tuple{Model, Vector{Float64}}"
"src/nlp.jl","set_nonlinear_dual_start_value","mtsig","Tuple{Model, Nothing}"
"src/nlp.jl","NLPEvaluator","mtsig","Tuple{Model}"
"src/nlp.jl","_replace_moi_variables","mtsig","Tuple{Vector{NodeData}, Any}"
"src/nlp.jl","_FunctionStorage","mtsig","Tuple{Vector{NodeData}, Any, Any, Any, Bool, Vector{_SubexpressionStorage}, Any, Any, Any, Any, Any}"
"src/nlp.jl","_SubexpressionStorage","mtsig","Tuple{Vector{NodeData}, Any, Any, Any, Any}"
"src/nlp.jl","MOI.initialize","mtsig","Tuple{NLPEvaluator, Vector{Symbol}}"
"src/nlp.jl","_recompute_disable_2ndorder","mtsig","Tuple{NLPEvaluator}"
"src/nlp.jl","MOI.features_available","mtsig","Tuple{NLPEvaluator}"
"src/nlp.jl","_forward_eval_all","mtsig","Tuple{NLPEvaluator, Any}"
"src/nlp.jl","_reverse_eval_all","mtsig","Tuple{NLPEvaluator, Any}"
"src/nlp.jl","MOI.eval_objective","mtsig","Tuple{NLPEvaluator, Any}"
"src/nlp.jl","MOI.eval_objective_gradient","mtsig","Tuple{NLPEvaluator, Any, Any}"
"src/nlp.jl","MOI.eval_constraint","mtsig","Tuple{NLPEvaluator, Any, Any}"
"src/nlp.jl","MOI.eval_constraint_jacobian","mtsig","Tuple{NLPEvaluator, Any, Any}"
"src/nlp.jl","MOI.eval_constraint_jacobian_product","mtsig","Tuple{NLPEvaluator, AbstractVector{Float64}, AbstractVector{Float64}, AbstractVector{Float64}}"
"src/nlp.jl","MOI.eval_constraint_jacobian_transpose_product","mtsig","Tuple{NLPEvaluator, AbstractVector{Float64}, AbstractVector{Float64}, AbstractVector{Float64}}"
"src/nlp.jl","MOI.eval_hessian_lagrangian_product","mtsig","Tuple{NLPEvaluator, AbstractVector{Float64}, AbstractVector{Float64}, AbstractVector{Float64}, Float64, AbstractVector{Float64}}"
"src/nlp.jl","MOI.eval_hessian_lagrangian","mtsig","Tuple{NLPEvaluator, AbstractVector{Float64}, AbstractVector{Float64}, Float64, AbstractVector{Float64}}"
"src/nlp.jl","_hessian_slice_inner","mtsig","Tuple{Any, Any, Any, Any, Type{Val{CHUNK}}} where CHUNK"
"src/nlp.jl","_hessian_slice","mtsig","Tuple{Any, Any, Any, Any, Any, Any, Any, Type{Val{CHUNK}}} where CHUNK"
"src/nlp.jl","MOI.jacobian_structure","mtsig","Tuple{NLPEvaluator}"
"src/nlp.jl","MOI.hessian_lagrangian_structure","mtsig","Tuple{NLPEvaluator}"
"src/nlp.jl","_hessian_lagrangian_structure","mtsig","Tuple{NLPEvaluator}"
"src/nlp.jl","Base.show","mtsig","Tuple{IO, _VariablePrintWrapper}"
"src/nlp.jl","Base.show","mtsig","Tuple{IO, _ParameterPrintWrapper}"
"src/nlp.jl","Base.show","mtsig","Tuple{IO, _SubexpressionPrintWrapper}"
"src/nlp.jl","_tape_to_expr","mtsig","Tuple{Model, Any, Vector{NodeData}, Any, Any, Any, Vector{Any}, _Derivatives.UserOperatorRegistry, Bool, Bool, Any}"
"src/nlp.jl","MOI.objective_expr","mtsig","Tuple{NLPEvaluator}"
"src/nlp.jl","MOI.constraint_expr","mtsig","Tuple{NLPEvaluator, Integer}"
"src/nlp.jl","Base.getindex","mtsig","Tuple{_VarValueMap{T}, Int64} where T"
"src/nlp.jl","<NA-name>","mtsig","Tuple{}"
"src/nlp.jl","value","mtsig","Tuple{Function, NonlinearExpression}"
"src/nlp.jl","value","mtsig","Tuple{NonlinearExpression, Int}"
"src/nlp.jl","<NA-name>","mtsig","Tuple{Any}"
"src/nlp.jl","MOI.eval_objective","mtsig","Tuple{_UserFunctionEvaluator, Any}"
"src/nlp.jl","MOI.eval_objective_gradient","mtsig","Tuple{_UserFunctionEvaluator, Any, Any}"
"src/nlp.jl","_intercept_ForwardDiff_MethodError","mtsig","Tuple{Any, Any}"
"src/nlp.jl","_intercept_ForwardDiff_MethodError","mtsig","Tuple{MethodError, Any}"
"src/nlp.jl","_UserFunctionEvaluator","mtsig","Tuple{Integer, Function, Type{T}, Any} where T"
"src/nlp.jl","<NA-name>","mtsig","Tuple{Any}"
"src/nlp.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"src/nlp.jl","_validate_register_assumptions","mtsig","Tuple{Function, Symbol, Integer}"
"src/nlp.jl","<NA-name>","mtsig","Tuple{Any}"
"src/nlp.jl","_checked_derivative","mtsig","Tuple{F, Any} where F"
"src/nlp.jl","<NA-name>","mtsig","Tuple{Any}"
"src/nlp.jl","register","mtsig","Tuple{Model, Symbol, Integer, Function, Bool}"
"src/nlp.jl","<NA-name>","mtsig","Tuple{Any}"
"src/nlp.jl","register","mtsig","Tuple{Model, Symbol, Integer, Function, Function, Bool}"
"src/nlp.jl","<NA-name>","mtsig","Tuple{Any}"
"src/nlp.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"src/nlp.jl","register","mtsig","Tuple{Model, Symbol, Integer, Function, Function, Function}"
"src/nlp.jl","add_nonlinear_expression","mtsig","Tuple{Model, Any}"
"src/nlp.jl","set_nonlinear_objective","mtsig","Tuple{Model, MOI.OptimizationSense, Any}"
"src/nlp.jl","add_nonlinear_constraint","mtsig","Tuple{Model, Expr}"
"src/objective.jl","relative_gap","mtsig","Tuple{Model}"
"src/objective.jl","objective_bound","mtsig","Tuple{Model}"
"src/objective.jl","objective_value","mtsig","Tuple{Model, Int}"
"src/objective.jl","dual_objective_value","mtsig","Tuple{Model, Int}"
"src/objective.jl","objective_sense","mtsig","Tuple{Model}"
"src/objective.jl","set_objective_sense","mtsig","Tuple{Model, MOI.OptimizationSense}"
"src/objective.jl","set_objective_function","mtsig","Tuple{Model, MOI.AbstractScalarFunction}"
"src/objective.jl","set_objective_function","mtsig","Tuple{Model, AbstractJuMPScalar}"
"src/objective.jl","set_objective_function","mtsig","Tuple{Model, Real}"
"src/objective.jl","set_objective_function","mtsig","Tuple{AbstractModel, Any}"
"src/objective.jl","set_objective","mtsig","Tuple{AbstractModel, MOI.OptimizationSense, Any}"
"src/objective.jl","objective_function_type","mtsig","Tuple{Model}"
"src/objective.jl","objective_function","mtsig","Tuple{Model, Type{<:AbstractJuMPScalar}}"
"src/objective.jl","set_objective_coefficient","mtsig","Tuple{Model, VariableRef, Real}"
"src/operators.jl","_float_type","mtsig","Tuple{Type{<:Real}}"
"src/operators.jl","_float_type","mtsig","Tuple{Type{<:UniformScaling}}"
"src/operators.jl","_float_type","mtsig","Tuple{Type{<:Complex}}"
"src/operators.jl","_float","mtsig","Tuple{Real}"
"src/operators.jl","_float","mtsig","Tuple{Complex}"
"src/operators.jl","_float","mtsig","Tuple{UniformScaling}"
"src/operators.jl","Base.:+","mtsig","Tuple{_Constant, AbstractVariableRef}"
"src/operators.jl","Base.:-","mtsig","Tuple{_Constant, AbstractVariableRef}"
"src/operators.jl","Base.:*","mtsig","Tuple{_Constant, AbstractVariableRef}"
"src/operators.jl","Base.:+","mtsig","Tuple{_Constant, _GenericAffOrQuadExpr}"
"src/operators.jl","Base.:-","mtsig","Tuple{_Constant, _GenericAffOrQuadExpr}"
"src/operators.jl","Base.:*","mtsig","Tuple{_Constant, _GenericAffOrQuadExpr}"
"src/operators.jl","<NA-name>","mtsig","Tuple{Any}"
"src/operators.jl","Base.:+","mtsig","Tuple{AbstractJuMPScalar}"
"src/operators.jl","Base.:-","mtsig","Tuple{AbstractVariableRef}"
"src/operators.jl","Base.:*","mtsig","Tuple{AbstractJuMPScalar}"
"src/operators.jl","Base.:+","mtsig","Tuple{AbstractVariableRef, _Constant}"
"src/operators.jl","Base.:-","mtsig","Tuple{AbstractVariableRef, _Constant}"
"src/operators.jl","Base.:*","mtsig","Tuple{AbstractVariableRef, _Constant}"
"src/operators.jl","Base.:/","mtsig","Tuple{AbstractVariableRef, _Constant}"
"src/operators.jl","Base.:+","mtsig","Tuple{V, V} where V <: AbstractVariableRef"
"src/operators.jl","Base.:-","mtsig","Tuple{V, V} where V <: AbstractVariableRef"
"src/operators.jl","Base.:*","mtsig","Tuple{V, V} where V <: AbstractVariableRef"
"src/operators.jl","Base.:+","mtsig","(Tuple{V, GenericAffExpr{C, V}} where V <: AbstractVariableRef) where C"
"src/operators.jl","Base.:-","mtsig","(Tuple{V, GenericAffExpr{C, V}} where V <: AbstractVariableRef) where C"
"src/operators.jl","Base.:*","mtsig","(Tuple{V, GenericAffExpr{C, V}} where V <: AbstractVariableRef) where C"
"src/operators.jl","Base.:/","mtsig","Tuple{AbstractVariableRef, GenericAffExpr}"
"src/operators.jl","Base.:+","mtsig","Tuple{AbstractVariableRef, GenericQuadExpr}"
"src/operators.jl","Base.:-","mtsig","Tuple{AbstractVariableRef, GenericQuadExpr}"
"src/operators.jl","Base.:+","mtsig","Tuple{GenericAffExpr}"
"src/operators.jl","Base.:-","mtsig","Tuple{GenericAffExpr}"
"src/operators.jl","Base.:+","mtsig","Tuple{GenericAffExpr, _Constant}"
"src/operators.jl","Base.:-","mtsig","Tuple{GenericAffExpr, _Constant}"
"src/operators.jl","Base.:*","mtsig","Tuple{GenericAffExpr, _Constant}"
"src/operators.jl","Base.:/","mtsig","Tuple{GenericAffExpr, _Constant}"
"src/operators.jl","<NA-name>","mtsig","Tuple{Any}"
"src/operators.jl","Base.:^","mtsig","Tuple{Union{AbstractVariableRef, GenericAffExpr}, Integer}"
"src/operators.jl","Base.:^","mtsig","Tuple{Union{AbstractVariableRef, GenericAffExpr}, _Constant}"
"src/operators.jl","Base.:+","mtsig","(Tuple{GenericAffExpr{C, V}, V} where V <: AbstractVariableRef) where C"
"src/operators.jl","Base.:-","mtsig","(Tuple{GenericAffExpr{C, V}, V} where V <: AbstractVariableRef) where C"
"src/operators.jl","Base.:*","mtsig","(Tuple{GenericAffExpr{C, V}, V} where V <: AbstractVariableRef) where C"
"src/operators.jl","Base.:/","mtsig","Tuple{GenericAffExpr, AbstractVariableRef}"
"src/operators.jl","_copy_convert_coef","mtsig","Tuple{Type{C}, GenericAffExpr{C}} where C"
"src/operators.jl","_copy_convert_coef","mtsig","((Tuple{Type{T}, GenericAffExpr{C, V}} where V) where C) where T"
"src/operators.jl","_copy_convert_coef","mtsig","Tuple{Type{C}, GenericQuadExpr{C}} where C"
"src/operators.jl","_copy_convert_coef","mtsig","((Tuple{Type{T}, GenericQuadExpr{C, V}} where V) where C) where T"
"src/operators.jl","Base.:+","mtsig","((Tuple{GenericAffExpr{S, V}, GenericAffExpr{T, V}} where V <: _JuMPTypes) where T) where S"
"src/operators.jl","Base.:-","mtsig","((Tuple{GenericAffExpr{S, V}, GenericAffExpr{T, V}} where V <: _JuMPTypes) where T) where S"
"src/operators.jl","Base.:*","mtsig","(Tuple{GenericAffExpr{C, V}, GenericAffExpr{C, V}} where V <: _JuMPTypes) where C"
"src/operators.jl","Base.:+","mtsig","Tuple{GenericAffExpr, GenericQuadExpr}"
"src/operators.jl","Base.:-","mtsig","Tuple{GenericAffExpr, GenericQuadExpr}"
"src/operators.jl","Base.:+","mtsig","Tuple{GenericQuadExpr}"
"src/operators.jl","Base.:-","mtsig","Tuple{GenericQuadExpr}"
"src/operators.jl","Base.:+","mtsig","Tuple{GenericQuadExpr, _Constant}"
"src/operators.jl","Base.:-","mtsig","Tuple{GenericQuadExpr, _Constant}"
"src/operators.jl","Base.:*","mtsig","Tuple{GenericQuadExpr, _Constant}"
"src/operators.jl","Base.:/","mtsig","Tuple{GenericQuadExpr, _Constant}"
"src/operators.jl","Base.:+","mtsig","Tuple{GenericQuadExpr, AbstractVariableRef}"
"src/operators.jl","Base.:-","mtsig","Tuple{GenericQuadExpr, AbstractVariableRef}"
"src/operators.jl","Base.:*","mtsig","Tuple{GenericQuadExpr, AbstractVariableRef}"
"src/operators.jl","Base.:/","mtsig","Tuple{GenericQuadExpr, AbstractVariableRef}"
"src/operators.jl","Base.:+","mtsig","Tuple{GenericQuadExpr, GenericAffExpr}"
"src/operators.jl","Base.:-","mtsig","Tuple{GenericQuadExpr, GenericAffExpr}"
"src/operators.jl","Base.:*","mtsig","Tuple{GenericQuadExpr, GenericAffExpr}"
"src/operators.jl","Base.:/","mtsig","Tuple{GenericQuadExpr, GenericAffExpr}"
"src/operators.jl","Base.:+","mtsig","(Tuple{GenericQuadExpr{S}, GenericQuadExpr{T}} where T) where S"
"src/operators.jl","Base.:-","mtsig","(Tuple{GenericQuadExpr{S}, GenericQuadExpr{T}} where T) where S"
"src/operators.jl","Base.:(==)","mtsig","Tuple{GenericAffExpr, GenericAffExpr}"
"src/operators.jl","Base.:(==)","mtsig","Tuple{GenericQuadExpr, GenericQuadExpr}"
"src/operators.jl","LinearAlgebra.dot","mtsig","Tuple{_JuMPTypes, _JuMPTypes}"
"src/operators.jl","LinearAlgebra.dot","mtsig","Tuple{_JuMPTypes, _Constant}"
"src/operators.jl","LinearAlgebra.dot","mtsig","Tuple{_Constant, _JuMPTypes}"
"src/operators.jl","Base.promote_rule","mtsig","Tuple{Type{<:AbstractVariableRef}, Type{<:Number}}"
"src/operators.jl","Base.promote_rule","mtsig","Tuple{Type{<:AbstractVariableRef}, Type{<:GenericAffExpr{T}}} where T"
"src/operators.jl","Base.promote_rule","mtsig","Tuple{Type{<:AbstractVariableRef}, Type{<:GenericQuadExpr{T}}} where T"
"src/operators.jl","Base.promote_rule","mtsig","(Tuple{Type{GenericAffExpr{S, V}}, Type{<:Real}} where V) where S"
"src/operators.jl","Base.promote_rule","mtsig","((Tuple{Type{<:GenericAffExpr{S, V}}, Type{<:GenericQuadExpr{T, V}}} where V) where T) where S"
"src/operators.jl","Base.promote_rule","mtsig","(Tuple{Type{GenericQuadExpr{S, V}}, Type{<:Number}} where V) where S"
"src/operators.jl","Base.transpose","mtsig","Tuple{AbstractJuMPScalar}"
"src/operators.jl","Base.conj","mtsig","Tuple{VariableRef}"
"src/operators.jl","LinearAlgebra.issymmetric","mtsig","Tuple{Matrix{T}} where T <: _JuMPTypes"
"src/operators.jl","Base.:(\$func)","mtsig","Tuple{\$typ}"
"src/operators.jl","Base.:*","mtsig","(Tuple{T, S} where S <: Union{AbstractVariableRef, GenericAffExpr, GenericQuadExpr}) where T <: GenericQuadExpr"
"src/operators.jl","Base.:*","mtsig","Tuple{GenericQuadExpr, GenericQuadExpr}"
"src/operators.jl","Base.:*","mtsig","(Tuple{S, T} where S <: Union{AbstractVariableRef, GenericAffExpr, GenericQuadExpr}) where T <: GenericQuadExpr"
"src/operators.jl","Base.:/","mtsig","(Tuple{S, T} where T <: Union{AbstractVariableRef, GenericAffExpr, GenericQuadExpr}) where S <: Union{_Constant, AbstractVariableRef, GenericAffExpr, GenericQuadExpr}"
"src/optimizer_interface.jl","error_if_direct_mode","mtsig","Tuple{Model, Symbol}"
"src/optimizer_interface.jl","MOIU.reset_optimizer","mtsig","Tuple{Model, MOI.AbstractOptimizer, Bool}"
"src/optimizer_interface.jl","MOIU.reset_optimizer","mtsig","Tuple{Model}"
"src/optimizer_interface.jl","MOIU.drop_optimizer","mtsig","Tuple{Model}"
"src/optimizer_interface.jl","MOIU.attach_optimizer","mtsig","Tuple{Model}"
"src/optimizer_interface.jl","set_optimizer","mtsig","Tuple{Model, Any, Bool}"
"src/optimizer_interface.jl","optimize!","mtsig","Tuple{Model, Any, Vararg{Any}}"
"src/optimizer_interface.jl","compute_conflict!","mtsig","Tuple{Model}"
"src/optimizer_interface.jl","result_count","mtsig","Tuple{Model}"
"src/parse_nlp.jl","_let_code_block","mtsig","Tuple{Expr}"
"src/parse_nlp.jl","_error_curly","mtsig","Tuple{Any}"
"src/parse_nlp.jl","_warn_auto_register","mtsig","Tuple{Any, Any}"
"src/parse_nlp.jl","_parse_NL_expr","mtsig","Tuple{Any, Any, Any, Any, Any}"
"src/parse_nlp.jl","<NA-name>","mtsig","Tuple{Any}"
"src/parse_nlp.jl","<NA-name>","mtsig","Tuple{Any}"
"src/parse_nlp.jl","_parse_NL_expr_runtime","mtsig","Tuple{Model, Real, Any, Any, Any}"
"src/parse_nlp.jl","_parse_NL_expr_runtime","mtsig","Tuple{Model, VariableRef, Any, Any, Any}"
"src/parse_nlp.jl","_parse_NL_expr_runtime","mtsig","Tuple{Model, NonlinearExpression, Any, Any, Any}"
"src/parse_nlp.jl","_parse_NL_expr_runtime","mtsig","Tuple{Model, NonlinearParameter, Any, Any, Any}"
"src/parse_nlp.jl","_parse_NL_expr_runtime","mtsig","Tuple{Model, AbstractArray, Any, Any, Any}"
"src/parse_nlp.jl","_parse_NL_expr_runtime","mtsig","Tuple{Model, GenericQuadExpr, Any, Any, Any}"
"src/parse_nlp.jl","_parse_NL_expr_runtime","mtsig","Tuple{Model, GenericAffExpr, Any, Any, Any}"
"src/parse_nlp.jl","_parse_NL_expr_runtime","mtsig","Tuple{Model, Any, Any, Any, Any}"
"src/parse_nlp.jl","_parse_NL_expr_runtime","mtsig","Tuple{Any, Any, Any, Any, Any}"
"src/parse_nlp.jl","_expression_complexity","mtsig","Tuple{Expr}"
"src/parse_nlp.jl","_expression_complexity","mtsig","Tuple{Any}"
"src/parse_nlp.jl","_process_NL_expr","mtsig","Tuple{Any, Any}"
"src/parse_nlp.jl","_Derivatives.expr_to_nodedata","mtsig","Tuple{VariableRef, Vector{NodeData}, Vector{Float64}, Any, _Derivatives.UserOperatorRegistry}"
"src/parse_nlp.jl","_Derivatives.expr_to_nodedata","mtsig","Tuple{NonlinearExpression, Vector{NodeData}, Vector{Float64}, Any, _Derivatives.UserOperatorRegistry}"
"src/parse_nlp.jl","_Derivatives.expr_to_nodedata","mtsig","Tuple{NonlinearParameter, Vector{NodeData}, Vector{Float64}, Any, _Derivatives.UserOperatorRegistry}"
"src/parse_nlp.jl","_Derivatives.expr_to_nodedata","mtsig","Tuple{GenericAffExpr, Vector{NodeData}, Vector{Float64}, Any, _Derivatives.UserOperatorRegistry}"
"src/parse_nlp.jl","_Derivatives.expr_to_nodedata","mtsig","Tuple{GenericQuadExpr, Vector{NodeData}, Vector{Float64}, Any, _Derivatives.UserOperatorRegistry}"
"src/parse_nlp.jl","_NonlinearExprData","mtsig","Tuple{Model, Expr}"
"src/parse_nlp.jl","_NonlinearExprData","mtsig","Tuple{Model, Any}"
"src/parse_nlp.jl","_check_expr","mtsig","Tuple{Model, Expr}"
"src/parse_nlp.jl","_check_expr","mtsig","Tuple{Model, VariableRef}"
"src/parse_nlp.jl","_check_expr","mtsig","Tuple{Model, Any}"
"src/precompile.jl","_precompile_","mtsig","Tuple{}"
"src/precompile.jl","_precompile_","mtsig","Tuple{}"
"src/print.jl","Base.show","mtsig","Tuple{IO, AbstractModel}"
"src/print.jl","latex_formulation","mtsig","Tuple{AbstractModel}"
"src/print.jl","Base.show","mtsig","Tuple{IO, _LatexModel}"
"src/print.jl","Base.show","mtsig","Tuple{IO, MIME\"text/latex\", _LatexModel}"
"src/print.jl","Base.print","mtsig","Tuple{AbstractModel}"
"src/print.jl","Base.print","mtsig","Tuple{IO, AbstractModel}"
"src/print.jl","_is_zero_for_printing","mtsig","Tuple{Any}"
"src/print.jl","_is_one_for_printing","mtsig","Tuple{Any}"
"src/print.jl","_is_one_for_printing","mtsig","Tuple{Complex}"
"src/print.jl","_is_zero_for_printing","mtsig","Tuple{Complex}"
"src/print.jl","_string_round","mtsig","Tuple{Float64}"
"src/print.jl","_string_round","mtsig","Tuple{typeof(abs), Real}"
"src/print.jl","_sign_string","mtsig","Tuple{Real}"
"src/print.jl","_string_round","mtsig","Tuple{Any}"
"src/print.jl","_string_round","mtsig","Tuple{typeof(abs), Any}"
"src/print.jl","_sign_string","mtsig","Tuple{Any}"
"src/print.jl","_string_round","mtsig","Tuple{Complex}"
"src/print.jl","_math_symbol","mtsig","Tuple{MIME\"text/plain\", Symbol}"
"src/print.jl","_math_symbol","mtsig","Tuple{MIME\"text/latex\", Symbol}"
"src/print.jl","_wrap_in_math_mode","mtsig","Tuple{Any}"
"src/print.jl","_wrap_in_inline_math_mode","mtsig","Tuple{Any}"
"src/print.jl","_plural","mtsig","Tuple{Any}"
"src/print.jl","name","mtsig","Tuple{AbstractModel}"
"src/print.jl","name","mtsig","Tuple{Model}"
"src/print.jl","_print_summary","mtsig","Tuple{IO, AbstractModel}"
"src/print.jl","show_objective_function_summary","mtsig","Tuple{IO, Model}"
"src/print.jl","show_constraints_summary","mtsig","Tuple{IO, Model}"
"src/print.jl","show_backend_summary","mtsig","Tuple{IO, Model}"
"src/print.jl","_print_model","mtsig","Tuple{IO, AbstractModel}"
"src/print.jl","_print_latex","mtsig","Tuple{IO, AbstractModel}"
"src/print.jl","model_string","mtsig","Tuple{MIME, AbstractModel}"
"src/print.jl","objective_function_string","mtsig","Tuple{Any, Model}"
"src/print.jl","nonlinear_constraint_string","mtsig","Tuple{Model, MIME, _NonlinearConstraint}"
"src/print.jl","constraints_string","mtsig","Tuple{Any, Model}"
"src/print.jl","nonlinear_expr_string","mtsig","Tuple{Model, MIME, _NonlinearExprData}"
"src/print.jl","_latexify_exponentials","mtsig","Tuple{MIME, Any}"
"src/print.jl","_latexify_exponentials","mtsig","Tuple{MIME\"text/latex\", Expr}"
"src/print.jl","_nl_subexpression_string","mtsig","Tuple{Any, AbstractModel}"
"src/print.jl","_nl_subexpression_string","mtsig","Tuple{MIME, Model}"
"src/print.jl","anonymous_name","mtsig","Tuple{Any, AbstractVariableRef}"
"src/print.jl","anonymous_name","mtsig","Tuple{MIME\"text/plain\", VariableRef}"
"src/print.jl","anonymous_name","mtsig","Tuple{MIME\"text/latex\", VariableRef}"
"src/print.jl","function_string","mtsig","Tuple{MIME\"text/plain\", AbstractVariableRef}"
"src/print.jl","function_string","mtsig","Tuple{MIME\"text/latex\", AbstractVariableRef}"
"src/print.jl","function_string","mtsig","Tuple{Any, GenericAffExpr, Any}"
"src/print.jl","function_string","mtsig","Tuple{Any, GenericQuadExpr}"
"src/print.jl","function_string","mtsig","Tuple{Any, Vector{<:AbstractJuMPScalar}}"
"src/print.jl","function_string","mtsig","Tuple{MIME\"text/plain\", AbstractMatrix{<:AbstractJuMPScalar}}"
"src/print.jl","function_string","mtsig","Tuple{MIME\"text/latex\", AbstractMatrix{<:AbstractJuMPScalar}}"
"src/print.jl","function_string","mtsig","Tuple{Any, AbstractConstraint}"
"src/print.jl","function_string","mtsig","Tuple{MIME, NonlinearExpression}"
"src/print.jl","function_string","mtsig","Tuple{MIME, NonlinearParameter}"
"src/print.jl","in_set_string","mtsig","Tuple{MIME, MOI.LessThan}"
"src/print.jl","in_set_string","mtsig","Tuple{MIME, MOI.GreaterThan}"
"src/print.jl","in_set_string","mtsig","Tuple{MIME, MOI.EqualTo}"
"src/print.jl","in_set_string","mtsig","Tuple{MIME\"text/latex\", MOI.Interval}"
"src/print.jl","in_set_string","mtsig","Tuple{MIME\"text/plain\", MOI.Interval}"
"src/print.jl","in_set_string","mtsig","Tuple{MIME\"text/plain\", MOI.ZeroOne}"
"src/print.jl","in_set_string","mtsig","Tuple{MIME\"text/latex\", MOI.ZeroOne}"
"src/print.jl","in_set_string","mtsig","Tuple{MIME\"text/plain\", MOI.Integer}"
"src/print.jl","in_set_string","mtsig","Tuple{MIME\"text/latex\", MOI.Integer}"
"src/print.jl","in_set_string","mtsig","Tuple{Any, Union{PSDCone, MOI.AbstractSet}}"
"src/print.jl","in_set_string","mtsig","Tuple{Any, AbstractConstraint}"
"src/print.jl","constraint_string","mtsig","Tuple{MIME, ConstraintRef, Any}"
"src/print.jl","constraint_string","mtsig","Tuple{Any, AbstractConstraint}"
"src/print.jl","constraint_string","mtsig","Tuple{Any, String, AbstractConstraint, Bool}"
"src/print.jl","Base.show","mtsig","Tuple{IO, ConstraintRef}"
"src/print.jl","Base.show","mtsig","Tuple{IO, MIME\"text/latex\", ConstraintRef}"
"src/print.jl","Base.show","mtsig","Tuple{IO, AbstractJuMPScalar}"
"src/print.jl","Base.show","mtsig","Tuple{IO, MIME\"text/latex\", AbstractJuMPScalar}"
"src/print.jl","Base.show","mtsig","Tuple{IO, NLPEvaluator}"
"src/print.jl","Base.show","mtsig","Tuple{IO, Union{NonlinearExpression, NonlinearParameter}}"
"src/print.jl","Base.show","mtsig","Tuple{IO, MIME\"text/latex\", Union{NonlinearExpression, NonlinearParameter}}"
"src/print.jl","Base.show","mtsig","Tuple{IO, NonlinearConstraintRef}"
"src/print.jl","Base.show","mtsig","Tuple{IO, MIME\"text/latex\", NonlinearConstraintRef}"
"src/quad_expr.jl","Base.hash","mtsig","Tuple{UnorderedPair, UInt}"
"src/quad_expr.jl","Base.isequal","mtsig","Tuple{UnorderedPair, UnorderedPair}"
"src/quad_expr.jl","GenericQuadExpr","mtsig","(Tuple{GenericAffExpr{V, K}, AbstractArray{Pair{UnorderedPair{K}, V}}} where V) where K"
"src/quad_expr.jl","GenericQuadExpr","mtsig","(Tuple{GenericAffExpr{V, K}, Vararg{Pair{UnorderedPair{K}, V}}} where V) where K"
"src/quad_expr.jl","GenericAffExpr","mtsig","(Tuple{GenericAffExpr{V, K}, AbstractArray{<:Pair}} where V) where K"
"src/quad_expr.jl","GenericQuadExpr","mtsig","(Tuple{GenericAffExpr{V, K}, Vararg{Pair}} where V) where K"
"src/quad_expr.jl","Base.iszero","mtsig","Tuple{GenericQuadExpr}"
"src/quad_expr.jl","Base.zero","mtsig","(Tuple{Type{GenericQuadExpr{C, V}}} where V) where C"
"src/quad_expr.jl","Base.one","mtsig","(Tuple{Type{GenericQuadExpr{C, V}}} where V) where C"
"src/quad_expr.jl","Base.zero","mtsig","Tuple{GenericQuadExpr}"
"src/quad_expr.jl","Base.one","mtsig","Tuple{GenericQuadExpr}"
"src/quad_expr.jl","Base.copy","mtsig","Tuple{GenericQuadExpr}"
"src/quad_expr.jl","Base.broadcastable","mtsig","Tuple{GenericQuadExpr}"
"src/quad_expr.jl","Base.conj","mtsig","Tuple{GenericQuadExpr{<:Real}}"
"src/quad_expr.jl","Base.real","mtsig","Tuple{GenericQuadExpr{<:Real}}"
"src/quad_expr.jl","Base.imag","mtsig","Tuple{GenericQuadExpr{<:Real}}"
"src/quad_expr.jl","Base.conj","mtsig","Tuple{GenericQuadExpr{<:Complex}}"
"src/quad_expr.jl","Base.real","mtsig","Tuple{GenericQuadExpr{<:Complex}}"
"src/quad_expr.jl","Base.imag","mtsig","Tuple{GenericQuadExpr{<:Complex}}"
"src/quad_expr.jl","Base.:(==)","mtsig","Tuple{GenericQuadExpr, Number}"
"src/quad_expr.jl","coefficient","mtsig","(Tuple{GenericQuadExpr{C, V}, V, V} where V) where C"
"src/quad_expr.jl","coefficient","mtsig","(Tuple{GenericQuadExpr{C, V}, V} where V) where C"
"src/quad_expr.jl","drop_zeros!","mtsig","Tuple{GenericQuadExpr}"
"src/quad_expr.jl","map_coefficients_inplace!","mtsig","Tuple{Function, GenericQuadExpr}"
"src/quad_expr.jl","map_coefficients","mtsig","Tuple{Function, GenericQuadExpr}"
"src/quad_expr.jl","_map_quad","mtsig","(Tuple{Function, GenericAffExpr{C, V}, GenericQuadExpr} where V) where C"
"src/quad_expr.jl","_affine_coefficient","mtsig","(Tuple{GenericQuadExpr{C, V}, V} where V) where C"
"src/quad_expr.jl","constant","mtsig","Tuple{GenericQuadExpr}"
"src/quad_expr.jl","linear_terms","mtsig","Tuple{GenericQuadExpr}"
"src/quad_expr.jl","quad_terms","mtsig","Tuple{GenericQuadExpr}"
"src/quad_expr.jl","_reorder_and_flatten","mtsig","Tuple{Pair{<:UnorderedPair}}"
"src/quad_expr.jl","Base.iterate","mtsig","Tuple{QuadTermIterator}"
"src/quad_expr.jl","Base.iterate","mtsig","Tuple{QuadTermIterator, Any}"
"src/quad_expr.jl","Base.length","mtsig","Tuple{QuadTermIterator}"
"src/quad_expr.jl","Base.eltype","mtsig","(Tuple{QuadTermIterator{GenericQuadExpr{C, V}}} where V) where C"
"src/quad_expr.jl","add_to_expression!","mtsig","Tuple{GenericQuadExpr, _Constant}"
"src/quad_expr.jl","add_to_expression!","mtsig","(Tuple{GenericQuadExpr{C, V}, V} where V) where C"
"src/quad_expr.jl","add_to_expression!","mtsig","(Tuple{GenericQuadExpr{T, S}, GenericAffExpr{T, S}} where S) where T"
"src/quad_expr.jl","add_to_expression!","mtsig","((Tuple{GenericQuadExpr{T, V}, GenericQuadExpr{S, V}} where V) where S) where T"
"src/quad_expr.jl","add_to_expression!","mtsig","(Tuple{GenericQuadExpr{C, V}, _Constant, V} where V) where C"
"src/quad_expr.jl","add_to_expression!","mtsig","(Tuple{GenericQuadExpr{C, V}, Union{V, GenericAffExpr{C, V}}, _Constant} where V) where C"
"src/quad_expr.jl","add_to_expression!","mtsig","Tuple{GenericQuadExpr, _Constant, GenericAffExpr}"
"src/quad_expr.jl","add_to_expression!","mtsig","((Tuple{GenericQuadExpr{S, V}, _Constant, GenericQuadExpr{T, V}} where V) where T) where S"
"src/quad_expr.jl","add_to_expression!","mtsig","Tuple{GenericQuadExpr, GenericQuadExpr, _Constant}"
"src/quad_expr.jl","add_to_expression!","mtsig","Tuple{GenericQuadExpr{C}, AbstractVariableRef, AbstractVariableRef} where C"
"src/quad_expr.jl","add_to_expression!","mtsig","(Tuple{GenericQuadExpr{C, V}, V, GenericAffExpr{C, V}} where V) where C"
"src/quad_expr.jl","add_to_expression!","mtsig","(Tuple{GenericQuadExpr{C, V}, GenericAffExpr{C, V}, V} where V) where C"
"src/quad_expr.jl","add_to_expression!","mtsig","(Tuple{GenericQuadExpr{C, V}, GenericAffExpr{C, V}, GenericAffExpr{C, V}} where V) where C"
"src/quad_expr.jl","add_to_expression!","mtsig","(Tuple{GenericQuadExpr{C, V}, _Constant, V, V} where V) where C"
"src/quad_expr.jl","_assert_isfinite","mtsig","Tuple{GenericQuadExpr}"
"src/quad_expr.jl","Base.isequal","mtsig","(Tuple{GenericQuadExpr{T, S}, GenericQuadExpr{T, S}} where S) where T"
"src/quad_expr.jl","Base.hash","mtsig","Tuple{GenericQuadExpr, UInt}"
"src/quad_expr.jl","SparseArrays.dropzeros","mtsig","Tuple{GenericQuadExpr}"
"src/quad_expr.jl","isequal_canonical","mtsig","(Tuple{GenericQuadExpr{CoefType, VarType}, GenericQuadExpr{CoefType, VarType}} where VarType) where CoefType"
"src/quad_expr.jl","Base.convert","mtsig","(Tuple{Type{GenericQuadExpr{C, V}}, Union{_Constant, AbstractVariableRef, GenericAffExpr}} where V) where C"
"src/quad_expr.jl","Base.convert","mtsig","(Tuple{Type{GenericQuadExpr{C, V}}, GenericQuadExpr{C, V}} where V) where C"
"src/quad_expr.jl","Base.convert","mtsig","((Tuple{Type{GenericQuadExpr{T, V}}, GenericQuadExpr{S, V}} where V) where S) where T"
"src/quad_expr.jl","GenericQuadExpr","mtsig","(Tuple{} where V) where C"
"src/quad_expr.jl","check_belongs_to_model","mtsig","Tuple{GenericQuadExpr, AbstractModel}"
"src/quad_expr.jl","_moi_quadratic_term","mtsig","Tuple{Tuple}"
"src/quad_expr.jl","MOI.ScalarQuadraticFunction","mtsig","Tuple{GenericQuadExpr{C, VariableRef}} where C"
"src/quad_expr.jl","moi_function","mtsig","Tuple{GenericQuadExpr}"
"src/quad_expr.jl","moi_function_type","mtsig","Tuple{Type{<:GenericQuadExpr{T}}} where T"
"src/quad_expr.jl","GenericQuadExpr","mtsig","Tuple{Model, MOI.ScalarQuadraticFunction} where C"
"src/quad_expr.jl","jump_function_type","mtsig","Tuple{Model, Type{MOI.ScalarQuadraticFunction{T}}} where T"
"src/quad_expr.jl","jump_function","mtsig","Tuple{Model, MOI.ScalarQuadraticFunction{T}} where T"
"src/quad_expr.jl","jump_function_type","mtsig","Tuple{Model, Type{MOI.VectorQuadraticFunction{T}}} where T"
"src/quad_expr.jl","jump_function","mtsig","Tuple{Model, MOI.VectorQuadraticFunction{T}} where T"
"src/quad_expr.jl","_fill_vqf!","mtsig","Tuple{Vector{<:MOI.VectorQuadraticTerm}, Int, Int, AbstractJuMPScalar}"
"src/quad_expr.jl","MOI.VectorQuadraticFunction","mtsig","Tuple{Vector{GenericQuadExpr{C, VariableRef}}} where C"
"src/quad_expr.jl","<NA-name>","mtsig","Tuple{Any}"
"src/quad_expr.jl","<NA-name>","mtsig","Tuple{Any}"
"src/quad_expr.jl","moi_function","mtsig","Tuple{Vector{<:GenericQuadExpr}}"
"src/quad_expr.jl","moi_function_type","mtsig","Tuple{Type{<:Vector{<:GenericQuadExpr{T}}}} where T"
"src/quad_expr.jl","value","mtsig","(Tuple{Function, GenericQuadExpr{CoefType, VarType}} where VarType) where CoefType"
"src/quad_expr.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"src/quad_expr.jl","value","mtsig","Tuple{GenericQuadExpr, Int}"
"src/quad_expr.jl","<NA-name>","mtsig","Tuple{Any}"
"src/sd.jl","build_constraint","mtsig","Tuple{Function, AbstractMatrix{<:AbstractJuMPScalar}, MOI.GreaterThan, PSDCone}"
"src/sd.jl","build_constraint","mtsig","Tuple{Function, AbstractMatrix{<:AbstractJuMPScalar}, MOI.LessThan, PSDCone}"
"src/sd.jl","reshape_vector","mtsig","Tuple{Vector{T}, SymmetricMatrixShape} where T"
"src/sd.jl","reshape_set","mtsig","Tuple{MOI.PositiveSemidefiniteConeTriangle, SymmetricMatrixShape}"
"src/sd.jl","vectorize","mtsig","Tuple{Matrix, SymmetricMatrixShape}"
"src/sd.jl","reshape_vector","mtsig","Tuple{Vector{T}, SkewSymmetricMatrixShape} where T"
"src/sd.jl","vectorize","mtsig","Tuple{Matrix, SkewSymmetricMatrixShape}"
"src/sd.jl","reshape_vector","mtsig","Tuple{Vector{T}, SquareMatrixShape} where T"
"src/sd.jl","reshape_set","mtsig","Tuple{MOI.PositiveSemidefiniteConeSquare, SquareMatrixShape}"
"src/sd.jl","vectorize","mtsig","Tuple{Matrix, SquareMatrixShape}"
"src/sd.jl","vectorize","mtsig","Tuple{Any, Union{SymmetricMatrixShape, SquareMatrixShape}}"
"src/sd.jl","vectorize","mtsig","Tuple{UpperTriangular, SquareMatrixShape}"
"src/sd.jl","vectorize","mtsig","Tuple{LowerTriangular, SquareMatrixShape}"
"src/sd.jl","_square_side","mtsig","Tuple{Function, Containers.SparseAxisArray}"
"src/sd.jl","_square_side","mtsig","Tuple{Function, Containers.DenseAxisArray}"
"src/sd.jl","_square_side","mtsig","Tuple{Function, Array}"
"src/sd.jl","_square_side","mtsig","Tuple{Function, Matrix}"
"src/sd.jl","_vectorize_variables","mtsig","Tuple{Function, Matrix}"
"src/sd.jl","build_variable","mtsig","Tuple{Function, Matrix{<:AbstractVariable}, SymmetricMatrixSpace}"
"src/sd.jl","build_variable","mtsig","Tuple{Function, Matrix{<:AbstractVariable}, SkewSymmetricMatrixSpace}"
"src/sd.jl","build_variable","mtsig","Tuple{Function, Matrix{<:AbstractVariable}, PSDCone}"
"src/sd.jl","value","mtsig","Tuple{LinearAlgebra.Symmetric{V, Matrix{V}}} where V <: AbstractVariableRef"
"src/sd.jl","build_constraint","mtsig","(Tuple{Function, Symmetric{V, M}, PSDCone} where M <: AbstractMatrix{V}) where V <: AbstractJuMPScalar"
"src/sd.jl","build_constraint","mtsig","Tuple{Function, AbstractMatrix{<:AbstractJuMPScalar}, PSDCone}"
"src/sets.jl","build_variable","mtsig","Tuple{Function, Vector{<:AbstractVariable}, AbstractVectorSet}"
"src/sets.jl","build_constraint","mtsig","Tuple{Function, AbstractVector, AbstractVectorSet}"
"src/sets.jl","build_constraint","mtsig","Tuple{Function, AbstractVector{<:AbstractJuMPScalar}, MOI.GreaterThan, Union{MOI.AbstractVectorSet, AbstractVectorSet}}"
"src/sets.jl","build_constraint","mtsig","Tuple{Function, AbstractVector{<:AbstractJuMPScalar}, MOI.LessThan, Union{MOI.AbstractVectorSet, AbstractVectorSet}}"
"src/sets.jl","_MA.operate!!","mtsig","Tuple{typeof(_MA.sub_mul), AbstractArray{<:AbstractJuMPScalar}, Int}"
"src/sets.jl","_MA.operate!!","mtsig","Tuple{typeof(_MA.sub_mul), Int, AbstractArray{<:AbstractJuMPScalar}}"
"src/sets.jl","moi_set","mtsig","Tuple{SecondOrderCone, Int}"
"src/sets.jl","moi_set","mtsig","Tuple{RotatedSecondOrderCone, Int}"
"src/sets.jl","SOS1","mtsig","Tuple{AbstractVector}"
"src/sets.jl","moi_set","mtsig","Tuple{SOS1, Int}"
"src/sets.jl","SOS2","mtsig","Tuple{AbstractVector}"
"src/sets.jl","moi_set","mtsig","Tuple{SOS2, Int}"
"src/shapes.jl","dual_shape","mtsig","Tuple{AbstractShape}"
"src/shapes.jl","reshape_vector","mtsig","Tuple{Any, ScalarShape}"
"src/shapes.jl","reshape_vector","mtsig","Tuple{Any, VectorShape}"
"src/shapes.jl","vectorize","mtsig","Tuple{Any, VectorShape}"
"src/solution_summary.jl","solution_summary","mtsig","Tuple{Model, Bool}"
"src/solution_summary.jl","Base.show","mtsig","Tuple{IO, _SolutionSummary}"
"src/solution_summary.jl","_show_status_summary","mtsig","Tuple{IO, _SolutionSummary}"
"src/solution_summary.jl","_show_candidate_solution_summary","mtsig","Tuple{IO, _SolutionSummary}"
"src/solution_summary.jl","_show_work_counters_summary","mtsig","Tuple{IO, _SolutionSummary}"
"src/solution_summary.jl","_get_solution_dict","mtsig","Tuple{Any}"
"src/solution_summary.jl","_get_constraint_dict","mtsig","Tuple{Any}"
"src/solution_summary.jl","_try_get","mtsig","Tuple{Any, Any}"
"src/solution_summary.jl","_print_if_not_missing","mtsig","Tuple{Any, Any, Missing}"
"src/solution_summary.jl","_print_if_not_missing","mtsig","Tuple{Any, Any, Int}"
"src/solution_summary.jl","_print_if_not_missing","mtsig","Tuple{Any, Any, Real}"
"src/utils.jl","Base.getindex","mtsig","Tuple{_VectorView, Integer}"
"src/utils.jl","Base.setindex!","mtsig","Tuple{_VectorView, Any, Integer}"
"src/utils.jl","Base.setindex!","mtsig","Tuple{_VectorView{T}, T, Vector{Int}} where T"
"src/utils.jl","Base.length","mtsig","Tuple{_VectorView}"
"src/utils.jl","Base.fill!","mtsig","Tuple{_VectorView{T}, Any} where T"
"src/utils.jl","_rmul!","mtsig","Tuple{_VectorView{T}, T} where T <: Number"
"src/utils.jl","_reinterpret_unsafe","mtsig","(Tuple{Type{T}, Vector{R}} where R) where T"
"src/variables.jl","_set_lower_bound_or_error","mtsig","Tuple{Function, _VariableInfoExpr, Any}"
"src/variables.jl","_set_upper_bound_or_error","mtsig","Tuple{Function, _VariableInfoExpr, Any}"
"src/variables.jl","_fix_or_error","mtsig","Tuple{Function, _VariableInfoExpr, Any}"
"src/variables.jl","_set_binary_or_error","mtsig","Tuple{Function, _VariableInfoExpr}"
"src/variables.jl","_set_integer_or_error","mtsig","Tuple{Function, _VariableInfoExpr}"
"src/variables.jl","_is_info_keyword","mtsig","Tuple{Expr}"
"src/variables.jl","_keywordify","mtsig","Tuple{Expr}"
"src/variables.jl","_VariableInfoExpr","mtsig","Tuple{Any, Any, Any, Any, Any}"
"src/variables.jl","_isfinite","mtsig","Tuple{Number}"
"src/variables.jl","_isfinite","mtsig","Tuple{Any}"
"src/variables.jl","VariableInfo","mtsig","(((Tuple{Bool, S, Bool, T, Bool, U, Bool, V, Bool, Bool} where V) where U) where T) where S"
"src/variables.jl","_constructor_expr","mtsig","Tuple{_VariableInfoExpr}"
"src/variables.jl","variable_ref_type","mtsig","Tuple{AbstractVariableRef}"
"src/variables.jl","Base.conj","mtsig","Tuple{AbstractVariableRef}"
"src/variables.jl","Base.real","mtsig","Tuple{AbstractVariableRef}"
"src/variables.jl","Base.imag","mtsig","Tuple{AbstractVariableRef}"
"src/variables.jl","Base.abs2","mtsig","Tuple{AbstractVariableRef}"
"src/variables.jl","owner_model","mtsig","Tuple{AbstractVariableRef}"
"src/variables.jl","check_belongs_to_model","mtsig","Tuple{AbstractVariableRef, AbstractModel}"
"src/variables.jl","Base.iszero","mtsig","Tuple{VariableRef}"
"src/variables.jl","Base.copy","mtsig","Tuple{VariableRef}"
"src/variables.jl","Base.broadcastable","mtsig","Tuple{VariableRef}"
"src/variables.jl","coefficient","mtsig","Tuple{VariableRef, VariableRef}"
"src/variables.jl","coefficient","mtsig","Tuple{VariableRef, VariableRef, VariableRef}"
"src/variables.jl","isequal_canonical","mtsig","Tuple{VariableRef, VariableRef}"
"src/variables.jl","delete","mtsig","Tuple{Model, VariableRef}"
"src/variables.jl","delete","mtsig","Tuple{Model, Vector{VariableRef}}"
"src/variables.jl","is_valid","mtsig","Tuple{Model, VariableRef}"
"src/variables.jl","Base.hash","mtsig","Tuple{VariableRef, UInt}"
"src/variables.jl","Base.isequal","mtsig","Tuple{VariableRef, VariableRef}"
"src/variables.jl","index","mtsig","Tuple{VariableRef}"
"src/variables.jl","VariableRef","mtsig","Tuple{Model}"
"src/variables.jl","VariableRef","mtsig","Tuple{ConstraintRef{<:AbstractModel, <:MOI.ConstraintIndex{MOI.VariableIndex}}}"
"src/variables.jl","name","mtsig","Tuple{VariableRef}"
"src/variables.jl","set_name","mtsig","Tuple{VariableRef, String}"
"src/variables.jl","variable_by_name","mtsig","Tuple{Model, String}"
"src/variables.jl","MOI.VariableIndex","mtsig","Tuple{VariableRef}"
"src/variables.jl","moi_function","mtsig","Tuple{AbstractVariableRef}"
"src/variables.jl","moi_function_type","mtsig","Tuple{Type{<:AbstractVariableRef}}"
"src/variables.jl","MOI.VectorOfVariables","mtsig","Tuple{Vector{VariableRef}}"
"src/variables.jl","moi_function","mtsig","Tuple{Vector{<:AbstractVariableRef}}"
"src/variables.jl","moi_function_type","mtsig","Tuple{Type{<:Vector{<:AbstractVariableRef}}}"
"src/variables.jl","jump_function_type","mtsig","Tuple{Model, Type{MOI.VectorOfVariables}}"
"src/variables.jl","jump_function","mtsig","Tuple{Model, MOI.VectorOfVariables}"
"src/variables.jl","jump_function_type","mtsig","Tuple{Model, Type{MOI.VariableIndex}}"
"src/variables.jl","jump_function","mtsig","Tuple{Model, MOI.VariableIndex}"
"src/variables.jl","has_lower_bound","mtsig","Tuple{VariableRef}"
"src/variables.jl","_moi_has_lower_bound","mtsig","Tuple{Any, VariableRef}"
"src/variables.jl","_lower_bound_index","mtsig","Tuple{VariableRef}"
"src/variables.jl","set_lower_bound","mtsig","Tuple{VariableRef, Number}"
"src/variables.jl","_moi_set_lower_bound","mtsig","Tuple{Any, VariableRef, Number}"
"src/variables.jl","LowerBoundRef","mtsig","Tuple{VariableRef}"
"src/variables.jl","delete_lower_bound","mtsig","Tuple{VariableRef}"
"src/variables.jl","lower_bound","mtsig","Tuple{VariableRef}"
"src/variables.jl","has_upper_bound","mtsig","Tuple{VariableRef}"
"src/variables.jl","_moi_has_upper_bound","mtsig","Tuple{Any, VariableRef}"
"src/variables.jl","_upper_bound_index","mtsig","Tuple{VariableRef}"
"src/variables.jl","set_upper_bound","mtsig","Tuple{VariableRef, Number}"
"src/variables.jl","_moi_set_upper_bound","mtsig","Tuple{Any, VariableRef, Number}"
"src/variables.jl","UpperBoundRef","mtsig","Tuple{VariableRef}"
"src/variables.jl","delete_upper_bound","mtsig","Tuple{VariableRef}"
"src/variables.jl","upper_bound","mtsig","Tuple{VariableRef}"
"src/variables.jl","is_fixed","mtsig","Tuple{VariableRef}"
"src/variables.jl","_moi_is_fixed","mtsig","Tuple{Any, VariableRef}"
"src/variables.jl","_fix_index","mtsig","Tuple{VariableRef}"
"src/variables.jl","fix","mtsig","Tuple{VariableRef, Number, Bool}"
"src/variables.jl","_moi_fix","mtsig","Tuple{Any, VariableRef, Number, Bool}"
"src/variables.jl","unfix","mtsig","Tuple{VariableRef}"
"src/variables.jl","fix_value","mtsig","Tuple{VariableRef}"
"src/variables.jl","FixRef","mtsig","Tuple{VariableRef}"
"src/variables.jl","is_integer","mtsig","Tuple{VariableRef}"
"src/variables.jl","_moi_is_integer","mtsig","Tuple{Any, VariableRef}"
"src/variables.jl","_integer_index","mtsig","Tuple{VariableRef}"
"src/variables.jl","set_integer","mtsig","Tuple{VariableRef}"
"src/variables.jl","_moi_set_integer","mtsig","Tuple{Any, VariableRef}"
"src/variables.jl","unset_integer","mtsig","Tuple{VariableRef}"
"src/variables.jl","IntegerRef","mtsig","Tuple{VariableRef}"
"src/variables.jl","is_binary","mtsig","Tuple{VariableRef}"
"src/variables.jl","_moi_is_binary","mtsig","Tuple{Any, VariableRef}"
"src/variables.jl","_binary_index","mtsig","Tuple{VariableRef}"
"src/variables.jl","set_binary","mtsig","Tuple{VariableRef}"
"src/variables.jl","_moi_set_binary","mtsig","Tuple{Any, Any}"
"src/variables.jl","unset_binary","mtsig","Tuple{VariableRef}"
"src/variables.jl","BinaryRef","mtsig","Tuple{VariableRef}"
"src/variables.jl","start_value","mtsig","Tuple{VariableRef}"
"src/variables.jl","set_start_value","mtsig","Tuple{VariableRef, Union{Nothing, Float64}}"
"src/variables.jl","set_start_value","mtsig","Tuple{VariableRef, Number}"
"src/variables.jl","value","mtsig","Tuple{VariableRef, Int}"
"src/variables.jl","value","mtsig","Tuple{Function, VariableRef}"
"src/variables.jl","has_values","mtsig","Tuple{Model, Int}"
"src/variables.jl","add_variable","mtsig","Tuple{Model, ScalarVariable, String}"
"src/variables.jl","_moi_add_variable","mtsig","Tuple{Any, Any, ScalarVariable, String}"
"src/variables.jl","_moi_constrain_variable","mtsig","Tuple{MOI.ModelLike, Any, Any}"
"src/variables.jl","add_variable","mtsig","Tuple{Model, VariableConstrainedOnCreation, String}"
"src/variables.jl","add_variable","mtsig","Tuple{Model, AbstractArray{<:VariableConstrainedOnCreation}, AbstractArray{<:String}}"
"src/variables.jl","_moi_add_constrained_variable","mtsig","Tuple{MOI.ModelLike, ScalarVariable, MOI.AbstractScalarSet, String}"
"src/variables.jl","VariablesConstrainedOnCreation","mtsig","Tuple{Vector{<:AbstractVariable}, MOI.AbstractVectorSet}"
"src/variables.jl","add_variable","mtsig","Tuple{Model, VariablesConstrainedOnCreation, Any}"
"src/variables.jl","_moi_add_constrained_variables","mtsig","Tuple{MOI.ModelLike, Vector{<:ScalarVariable}, MOI.AbstractVectorSet, Vector{String}}"
"src/variables.jl","reduced_cost","mtsig","Tuple{VariableRef}"
"src/variables.jl","all_variables","mtsig","Tuple{Model}"
"src/variables.jl","dual","mtsig","Tuple{VariableRef}"
"src/variables.jl","value","mtsig","Tuple{AbstractArray{<:AbstractJuMPScalar}}"
"src/variables.jl","value","mtsig","Tuple{_MA.Zero}"
"src/variables.jl","value","mtsig","Tuple{Number}"
"src/variables.jl","_info_from_variable","mtsig","Tuple{VariableRef}"
"src/variables.jl","relax_integrality","mtsig","Tuple{Model}"
"src/variables.jl","<NA-name>","mtsig","Tuple{Any}"
"src/variables.jl","unrelax","mtsig","Tuple{}"
"src/variables.jl","Base.:(\$sym)","mtsig","Tuple{VariableRef, Number}"
"src/variables.jl","Base.:(\$sym)","mtsig","Tuple{Number, VariableRef}"
"src/Containers/Containers.jl","Base.IndexStyle","mtsig","Tuple{IndexAnyCartesian, IndexAnyCartesian}"
"src/Containers/Containers.jl","Base.eachindex","mtsig","Tuple{Base.Generator{<:Union{DenseAxisArray, SparseAxisArray}}}"
"src/Containers/Containers.jl","Base.collect_to_with_first!","mtsig","Tuple{Union{DenseAxisArray, SparseAxisArray}, Any, Any, Any}"
"src/Containers/DenseAxisArray.jl","Base.:(==)","mtsig","Tuple{_AxisLookup{D}, _AxisLookup{D}} where D"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","Tuple{_AxisLookup, Any}"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","Tuple{_AxisLookup, Colon}"
"src/Containers/DenseAxisArray.jl","Base.Array","mtsig","(Tuple{DenseAxisArray} where N) where T"
"src/Containers/DenseAxisArray.jl","Base.hash","mtsig","Tuple{DenseAxisArray, UInt}"
"src/Containers/DenseAxisArray.jl","build_lookup","mtsig","Tuple{Any}"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","Tuple{_AxisLookup{Dict{K, Int}}, K} where K"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","Tuple{_AxisLookup{Dict{K, Int}}, Colon} where K"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","Tuple{_AxisLookup{Dict{K, Int}}, AbstractVector{<:K}} where K"
"src/Containers/DenseAxisArray.jl","Base.get","mtsig","Tuple{_AxisLookup{Dict{K, Int}}, K, Any} where K"
"src/Containers/DenseAxisArray.jl","build_lookup","mtsig","Tuple{Base.OneTo}"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","Tuple{_AxisLookup{<:Base.OneTo}, Integer}"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","Tuple{_AxisLookup{<:Base.OneTo}, AbstractVector{<:Integer}}"
"src/Containers/DenseAxisArray.jl","Base.get","mtsig","Tuple{_AxisLookup{<:Base.OneTo}, Integer, Any}"
"src/Containers/DenseAxisArray.jl","build_lookup","mtsig","Tuple{AbstractUnitRange{<:Integer}}"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","Tuple{_AxisLookup{Tuple{T, T}}, Integer} where T <: Integer"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","Tuple{_AxisLookup{Tuple{T, T}}, AbstractVector{<:Integer}} where T <: Integer"
"src/Containers/DenseAxisArray.jl","Base.get","mtsig","Tuple{_AxisLookup{Tuple{T, T}}, Integer, Any} where T <: Integer"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","(Tuple{_AxisLookup{Dict{Pair{A, B}, Int}}, Tuple{A, B}} where B) where A"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","(Tuple{_AxisLookup{Dict{Pair{A, B}, Int}}, AbstractVector{<:Tuple{A, B}}} where B) where A"
"src/Containers/DenseAxisArray.jl","Base.get","mtsig","(Tuple{_AxisLookup{Dict{Pair{A, B}, Int}}, Tuple{A, B}, Any} where B) where A"
"src/Containers/DenseAxisArray.jl","_abstract_vector","mtsig","Tuple{AbstractVector}"
"src/Containers/DenseAxisArray.jl","_abstract_vector","mtsig","Tuple{AbstractVector{<:CartesianIndex}}"
"src/Containers/DenseAxisArray.jl","_abstract_vector","mtsig","Tuple{Any}"
"src/Containers/DenseAxisArray.jl","_abstract_vector","mtsig","Tuple{AbstractArray}"
"src/Containers/DenseAxisArray.jl","_abstract_vector","mtsig","Tuple{Number}"
"src/Containers/DenseAxisArray.jl","DenseAxisArray","mtsig","(Tuple{Array{T, N}, Vararg{Any}} where N) where T"
"src/Containers/DenseAxisArray.jl","DenseAxisArray","mtsig","Tuple{AbstractArray, Vararg{Any}}"
"src/Containers/DenseAxisArray.jl","DenseAxisArray","mtsig","Tuple{UndefInitializer, Vararg{Any}} where T"
"src/Containers/DenseAxisArray.jl","construct_undef_array","mtsig","(Tuple{Type{T}, Tuple{Vararg{Any, N}}} where N) where T"
"src/Containers/DenseAxisArray.jl","Base.isempty","mtsig","Tuple{DenseAxisArray}"
"src/Containers/DenseAxisArray.jl","Base.similar","mtsig","(((Tuple{DenseAxisArray{T, N, Ax}, Type{S}, Ax} where S) where Ax) where N) where T"
"src/Containers/DenseAxisArray.jl","Base.similar","mtsig","(((Tuple{DenseAxisArray{T, N, Ax}, Type{S}, Ax} where S) where Ax <: Tuple{Base.OneTo, Vararg{Base.OneTo}}) where N) where T"
"src/Containers/DenseAxisArray.jl","Base.size","mtsig","Tuple{DenseAxisArray}"
"src/Containers/DenseAxisArray.jl","Base.LinearIndices","mtsig","Tuple{DenseAxisArray}"
"src/Containers/DenseAxisArray.jl","Base.axes","mtsig","Tuple{DenseAxisArray}"
"src/Containers/DenseAxisArray.jl","Base.CartesianIndices","mtsig","Tuple{DenseAxisArray}"
"src/Containers/DenseAxisArray.jl","_is_assigned","mtsig","(Tuple{DenseAxisArray{T, N}, Vararg{Any}} where N) where T"
"src/Containers/DenseAxisArray.jl","Base.isassigned","mtsig","(Tuple{DenseAxisArray{T, N}, Vararg{Any}} where N) where T"
"src/Containers/DenseAxisArray.jl","Base.isassigned","mtsig","(Tuple{DenseAxisArray{T, N}, Vararg{Int}} where N) where T"
"src/Containers/DenseAxisArray.jl","Base.eachindex","mtsig","Tuple{DenseAxisArray}"
"src/Containers/DenseAxisArray.jl","_getindex_recurse","mtsig","Tuple{NTuple{0}, Tuple, Function}"
"src/Containers/DenseAxisArray.jl","_getindex_recurse","mtsig","Tuple{Tuple, Tuple, Function}"
"src/Containers/DenseAxisArray.jl","Base.to_index","mtsig","(Tuple{DenseAxisArray{T, N}, Any} where N) where T"
"src/Containers/DenseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"src/Containers/DenseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"src/Containers/DenseAxisArray.jl","_is_range","mtsig","Tuple{Any}"
"src/Containers/DenseAxisArray.jl","_is_range","mtsig","Tuple{Union{Vector{Int}, Colon}}"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","(Tuple{DenseAxisArray{T, N}, Vararg{Any}} where N) where T"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","Tuple{DenseAxisArray, CartesianIndex}"
"src/Containers/DenseAxisArray.jl","Base.setindex!","mtsig","(Tuple{DenseAxisArray{T, N}, Any, Vararg{Any}} where N) where T"
"src/Containers/DenseAxisArray.jl","Base.setindex!","mtsig","Tuple{DenseAxisArray, Any, CartesianIndex}"
"src/Containers/DenseAxisArray.jl","Base.IndexStyle","mtsig","((Tuple{Type{DenseAxisArray{T, N, Ax}}} where Ax) where N) where T"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","Tuple{DenseAxisArrayKey, Vararg{Any}}"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","Tuple{DenseAxisArray, DenseAxisArrayKey}"
"src/Containers/DenseAxisArray.jl","DenseAxisArrayKeys","mtsig","((Tuple{DenseAxisArray{TT, N, Ax}} where Ax) where N) where TT"
"src/Containers/DenseAxisArray.jl","Base.size","mtsig","Tuple{DenseAxisArrayKeys}"
"src/Containers/DenseAxisArray.jl","Base.eltype","mtsig","Tuple{DenseAxisArrayKeys}"
"src/Containers/DenseAxisArray.jl","Base.iterate","mtsig","Tuple{DenseAxisArrayKeys}"
"src/Containers/DenseAxisArray.jl","Base.iterate","mtsig","Tuple{DenseAxisArrayKeys, Any}"
"src/Containers/DenseAxisArray.jl","Base.keys","mtsig","Tuple{DenseAxisArray}"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","Tuple{DenseAxisArrayKeys, CartesianIndex}"
"src/Containers/DenseAxisArray.jl","Base.getindex","mtsig","((Tuple{DenseAxisArrayKeys{T, S, N}, Vararg{Int, N}} where N) where S) where T"
"src/Containers/DenseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"src/Containers/DenseAxisArray.jl","Base.IndexStyle","mtsig","((Tuple{Type{DenseAxisArrayKeys{T, N, Ax}}} where Ax) where N) where T"
"src/Containers/DenseAxisArray.jl","Base.BroadcastStyle","mtsig","Tuple{Type{<:DenseAxisArray}}"
"src/Containers/DenseAxisArray.jl","_broadcast_axes_check","mtsig","Tuple{NTuple{N}} where N"
"src/Containers/DenseAxisArray.jl","_broadcast_axes","mtsig","Tuple{Tuple}"
"src/Containers/DenseAxisArray.jl","_broadcast_axes","mtsig","Tuple{Tuple{}}"
"src/Containers/DenseAxisArray.jl","_broadcast_axes","mtsig","Tuple{Any, Any}"
"src/Containers/DenseAxisArray.jl","_broadcast_axes","mtsig","Tuple{DenseAxisArray, Any}"
"src/Containers/DenseAxisArray.jl","_broadcast_args","mtsig","Tuple{Tuple}"
"src/Containers/DenseAxisArray.jl","_broadcast_args","mtsig","Tuple{Tuple{}}"
"src/Containers/DenseAxisArray.jl","_broadcast_args","mtsig","Tuple{Any, Any}"
"src/Containers/DenseAxisArray.jl","_broadcast_args","mtsig","Tuple{DenseAxisArray, Any}"
"src/Containers/DenseAxisArray.jl","Base.Broadcast.broadcasted","mtsig","Tuple{Broadcast.ArrayStyle{DenseAxisArray}, Any, Vararg{Any}}"
"src/Containers/DenseAxisArray.jl","Base.summary","mtsig","Tuple{IO, DenseAxisArray}"
"src/Containers/DenseAxisArray.jl","_summary","mtsig","(Tuple{Any, DenseAxisArray{T, N}} where N) where T"
"src/Containers/DenseAxisArray.jl","Base.print_array","mtsig","Tuple{IO, DenseAxisArray{T, 1}} where T"
"src/Containers/DenseAxisArray.jl","Base.print_array","mtsig","Tuple{IO, DenseAxisArray{T, 2}} where T"
"src/Containers/DenseAxisArray.jl","Base.show_nd","mtsig","Tuple{IO, DenseAxisArray, Function, Bool}"
"src/Containers/DenseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"src/Containers/DenseAxisArray.jl","Base.show","mtsig","Tuple{IO, DenseAxisArray}"
"src/Containers/DenseAxisArray.jl","Base.repeat","mtsig","Tuple{DenseAxisArray, Vararg{Any}}"
"src/Containers/SparseAxisArray.jl","Base.length","mtsig","Tuple{SparseAxisArray}"
"src/Containers/SparseAxisArray.jl","Base.IteratorSize","mtsig","Tuple{Type{<:SparseAxisArray}}"
"src/Containers/SparseAxisArray.jl","Base.iterate","mtsig","Tuple{SparseAxisArray, Vararg{Any}}"
"src/Containers/SparseAxisArray.jl","Base.hash","mtsig","Tuple{SparseAxisArray, UInt}"
"src/Containers/SparseAxisArray.jl","Base.size","mtsig","Tuple{SparseAxisArray}"
"src/Containers/SparseAxisArray.jl","Base.similar","mtsig","(((Tuple{SparseAxisArray{S, N, K}, Type{T}, Integer} where K) where N) where T) where S"
"src/Containers/SparseAxisArray.jl","Base.mapreduce","mtsig","Tuple{Any, Any, SparseAxisArray}"
"src/Containers/SparseAxisArray.jl","Base.:(==)","mtsig","Tuple{SparseAxisArray, SparseAxisArray}"
"src/Containers/SparseAxisArray.jl","Base.haskey","mtsig","Tuple{SparseAxisArray, Any}"
"src/Containers/SparseAxisArray.jl","Base.haskey","mtsig","(Tuple{SparseAxisArray{T, 1, Tuple{I}}, I} where I) where T"
"src/Containers/SparseAxisArray.jl","_colon_error","mtsig","Tuple{}"
"src/Containers/SparseAxisArray.jl","_colon_error","mtsig","Tuple{Any, Vararg{Any}}"
"src/Containers/SparseAxisArray.jl","_colon_error","mtsig","Tuple{Colon, Vararg{Any}}"
"src/Containers/SparseAxisArray.jl","Base.setindex!","mtsig","((Tuple{SparseAxisArray{T, N, K}, Any, K} where K <: NTuple{N, Any}) where N) where T"
"src/Containers/SparseAxisArray.jl","Base.setindex!","mtsig","(Tuple{SparseAxisArray{T, N}, Any, Vararg{Any}} where N) where T"
"src/Containers/SparseAxisArray.jl","Base.getindex","mtsig","((Tuple{SparseAxisArray{T, N, K}, K} where K <: NTuple{N, Any}) where N) where T"
"src/Containers/SparseAxisArray.jl","Base.getindex","mtsig","(Tuple{SparseAxisArray{T, N}, Vararg{Any}} where N) where T"
"src/Containers/SparseAxisArray.jl","Base.eachindex","mtsig","Tuple{SparseAxisArray}"
"src/Containers/SparseAxisArray.jl","Base.BroadcastStyle","mtsig","((Tuple{Type{<:SparseAxisArray{T, N, K}}} where K) where N) where T"
"src/Containers/SparseAxisArray.jl","Base.BroadcastStyle","mtsig","Tuple{BroadcastStyle, Base.BroadcastStyle}"
"src/Containers/SparseAxisArray.jl","Base.BroadcastStyle","mtsig","Tuple{BroadcastStyle, Base.Broadcast.DefaultArrayStyle{0}}"
"src/Containers/SparseAxisArray.jl","Base.Broadcast.instantiate","mtsig","Tuple{Base.Broadcast.Broadcasted{<:BroadcastStyle}}"
"src/Containers/SparseAxisArray.jl","Base.copy","mtsig","(Tuple{Base.Broadcast.Broadcasted{BroadcastStyle{N, K}}} where K) where N"
"src/Containers/SparseAxisArray.jl","_check_same_indices","mtsig","Tuple{Any}"
"src/Containers/SparseAxisArray.jl","_check_same_indices","mtsig","Tuple{Any, Any, Vararg{Any}}"
"src/Containers/SparseAxisArray.jl","_check_same_indices","mtsig","Tuple{Any, SparseAxisArray, Vararg{Any}}"
"src/Containers/SparseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"src/Containers/SparseAxisArray.jl","_indices","mtsig","Tuple{Any, Vararg{Any}}"
"src/Containers/SparseAxisArray.jl","_indices","mtsig","Tuple{SparseAxisArray, Vararg{Any}}"
"src/Containers/SparseAxisArray.jl","_indices","mtsig","(Tuple{Base.Broadcast.Broadcasted{BroadcastStyle{N, K}}, Vararg{Any}} where K) where N"
"src/Containers/SparseAxisArray.jl","_get_arg","mtsig","Tuple{Tuple, Tuple}"
"src/Containers/SparseAxisArray.jl","_get_arg","mtsig","Tuple{Tuple{}, Tuple}"
"src/Containers/SparseAxisArray.jl","_getindex","mtsig","Tuple{SparseAxisArray, Any}"
"src/Containers/SparseAxisArray.jl","_getindex","mtsig","Tuple{Any, Any}"
"src/Containers/SparseAxisArray.jl","_getindex","mtsig","Tuple{Ref, Any}"
"src/Containers/SparseAxisArray.jl","_getindex","mtsig","(Tuple{Base.Broadcast.Broadcasted{BroadcastStyle{N, K}}, Any} where K) where N"
"src/Containers/SparseAxisArray.jl","Base.Broadcast.broadcast_preserving_zero_d","mtsig","Tuple{Any, SparseAxisArray, Vararg{Any}}"
"src/Containers/SparseAxisArray.jl","Base.Broadcast.broadcast_preserving_zero_d","mtsig","Tuple{Any, Any, SparseAxisArray, Vararg{Any}}"
"src/Containers/SparseAxisArray.jl","Base.summary","mtsig","Tuple{IO, SparseAxisArray}"
"src/Containers/SparseAxisArray.jl","Base.show","mtsig","Tuple{IO, MIME\"text/plain\", SparseAxisArray}"
"src/Containers/SparseAxisArray.jl","Base.show","mtsig","Tuple{IO, SparseAxisArray}"
"src/Containers/SparseAxisArray.jl","Base.show","mtsig","Tuple{IOContext, SparseAxisArray}"
"src/Containers/SparseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"src/Containers/container.jl","container","mtsig","Tuple{Function, Any}"
"src/Containers/container.jl","default_container","mtsig","Tuple{ArrayIndices}"
"src/Containers/container.jl","container","mtsig","Tuple{Function, ArrayIndices, Type{Array}}"
"src/Containers/container.jl","<NA-name>","mtsig","Tuple{Any}"
"src/Containers/container.jl","_oneto","mtsig","Tuple{AbstractVector{<:Integer}}"
"src/Containers/container.jl","_oneto","mtsig","Tuple{Any}"
"src/Containers/container.jl","_oneto","mtsig","Tuple{Base.OneTo}"
"src/Containers/container.jl","container","mtsig","Tuple{Function, VectorizedProductIterator, Type{Array}}"
"src/Containers/container.jl","default_container","mtsig","Tuple{VectorizedProductIterator}"
"src/Containers/container.jl","container","mtsig","Tuple{Function, VectorizedProductIterator, Type{DenseAxisArray}}"
"src/Containers/container.jl","<NA-name>","mtsig","Tuple{Any}"
"src/Containers/container.jl","default_container","mtsig","Tuple{NestedIterator}"
"src/Containers/container.jl","_eltype_or_any","mtsig","Tuple{Array}"
"src/Containers/container.jl","container","mtsig","Tuple{Function, Any, Type{SparseAxisArray}}"
"src/Containers/container.jl","<NA-name>","mtsig","Tuple{Any}"
"src/Containers/container.jl","_sparseaxisarray","mtsig","Tuple{Dict, Any, Any}"
"src/Containers/container.jl","_container_dict","mtsig","Tuple{Type{<:NTuple{N, Any}}, Function, Type{<:NTuple{N, Any}}} where N"
"src/Containers/container.jl","_container_dict","mtsig","Tuple{Any, Any, Type{<:NTuple{N, Any}}} where N"
"src/Containers/container.jl","_container_dict","mtsig","Tuple{Type{Union{}}, Function, Type{<:NTuple{N, Any}}} where N"
"src/Containers/container.jl","_default_eltype","mtsig","Tuple{NestedIterator}"
"src/Containers/container.jl","_default_eltype","mtsig","Tuple{Any}"
"src/Containers/container.jl","_sparseaxisarray","mtsig","Tuple{Dict{Any, Any}, Any, Any}"
"src/Containers/container.jl","_container_key","mtsig","Tuple{Tuple}"
"src/Containers/container.jl","_container_key","mtsig","Tuple{Tuple{T}} where T"
"src/Containers/container.jl","container","mtsig","Tuple{Function, Any, Type{<:AbstractDict}}"
"src/Containers/container.jl","container","mtsig","Tuple{Function, Any, Type}"
"src/Containers/macro.jl","_get_name","mtsig","Tuple{Union{Symbol, AbstractString}}"
"src/Containers/macro.jl","_get_name","mtsig","Tuple{Expr}"
"src/Containers/macro.jl","_extract_kw_args","mtsig","Tuple{Any}"
"src/Containers/macro.jl","_explicit_oneto","mtsig","Tuple{Any}"
"src/Containers/macro.jl","_expr_is_splat","mtsig","Tuple{Any}"
"src/Containers/macro.jl","_parse_index_sets","mtsig","Tuple{Function, Any, Any, Expr}"
"src/Containers/macro.jl","_parse_index_sets","mtsig","Tuple{Function, Any, Any, Any}"
"src/Containers/macro.jl","_parse_ref_sets","mtsig","Tuple{Function, Expr}"
"src/Containers/macro.jl","_parse_ref_sets","mtsig","Tuple{Function, Symbol}"
"src/Containers/macro.jl","_depends_on","mtsig","Tuple{Expr, Symbol}"
"src/Containers/macro.jl","<NA-name>","mtsig","Tuple{Any}"
"src/Containers/macro.jl","_depends_on","mtsig","Tuple{Symbol, Symbol}"
"src/Containers/macro.jl","_depends_on","mtsig","Tuple{Any, Symbol}"
"src/Containers/macro.jl","_depends_on","mtsig","Tuple{Any, Expr}"
"src/Containers/macro.jl","<NA-name>","mtsig","Tuple{Any}"
"src/Containers/macro.jl","_has_dependent_sets","mtsig","Tuple{Vector{Any}, Vector{Any}}"
"src/Containers/macro.jl","build_ref_sets","mtsig","Tuple{Function, Any}"
"src/Containers/macro.jl","container_code","mtsig","Tuple{Vector{Any}, Expr, Any, Union{Symbol, Expr}}"
"src/Containers/nested_iterator.jl","nested","mtsig","Tuple{Vararg{Any}, Any}"
"src/Containers/nested_iterator.jl","Base.IteratorSize","mtsig","Tuple{Type{<:NestedIterator}}"
"src/Containers/nested_iterator.jl","Base.IteratorEltype","mtsig","Tuple{Type{<:NestedIterator}}"
"src/Containers/nested_iterator.jl","_next_iterate","mtsig","Tuple{Any, Any, Any, Any, Any, Any}"
"src/Containers/nested_iterator.jl","_first_iterate","mtsig","Tuple{Tuple{}, Any, Any, Any}"
"src/Containers/nested_iterator.jl","_first_iterate","mtsig","Tuple{Any, Any, Any, Any}"
"src/Containers/nested_iterator.jl","_tail_iterate","mtsig","Tuple{Tuple{}, Any, Any, Any, Any}"
"src/Containers/nested_iterator.jl","_tail_iterate","mtsig","Tuple{Any, Any, Any, Any, Any}"
"src/Containers/nested_iterator.jl","Base.iterate","mtsig","Tuple{NestedIterator}"
"src/Containers/nested_iterator.jl","Base.iterate","mtsig","Tuple{NestedIterator, Any}"
"src/Containers/nested_iterator.jl","_eltype_or_any","mtsig","Tuple{NestedIterator{<:Tuple{Vararg{Any, N}}}} where N"
"src/Containers/no_duplicate_dict.jl","NoDuplicateDict","mtsig","(Tuple{} where V) where K"
"src/Containers/no_duplicate_dict.jl","Base.empty","mtsig","(Tuple{NoDuplicateDict, Type{K}, Type{V}} where V) where K"
"src/Containers/no_duplicate_dict.jl","Base.iterate","mtsig","Tuple{NoDuplicateDict, Vararg{Any}}"
"src/Containers/no_duplicate_dict.jl","Base.length","mtsig","Tuple{NoDuplicateDict}"
"src/Containers/no_duplicate_dict.jl","Base.haskey","mtsig","Tuple{NoDuplicateDict, Any}"
"src/Containers/no_duplicate_dict.jl","Base.getindex","mtsig","Tuple{NoDuplicateDict, Any}"
"src/Containers/no_duplicate_dict.jl","Base.setindex!","mtsig","Tuple{NoDuplicateDict, Any, Any}"
"src/Containers/no_duplicate_dict.jl","NoDuplicateDict","mtsig","(Tuple{Any} where V) where K"
"src/Containers/no_duplicate_dict.jl","NoDuplicateDict","mtsig","Tuple{Any}"
"src/Containers/no_duplicate_dict.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"src/Containers/vectorized_product_iterator.jl","_collect","mtsig","Tuple{Base.SizeUnknown, Any}"
"src/Containers/vectorized_product_iterator.jl","_collect","mtsig","Tuple{Any, Any}"
"src/Containers/vectorized_product_iterator.jl","_collect","mtsig","Tuple{Base.IsInfinite, Any}"
"src/Containers/vectorized_product_iterator.jl","_collect","mtsig","Tuple{Any}"
"src/Containers/vectorized_product_iterator.jl","vectorized_product","mtsig","Tuple{Vararg{Any}}"
"src/Containers/vectorized_product_iterator.jl","Base.IteratorSize","mtsig","Tuple{Type{<:VectorizedProductIterator{<:Tuple{Vararg{Any, N}}}}} where N"
"src/Containers/vectorized_product_iterator.jl","Base.IteratorEltype","mtsig","Tuple{Type{<:VectorizedProductIterator}}"
"src/Containers/vectorized_product_iterator.jl","Base.size","mtsig","Tuple{VectorizedProductIterator}"
"src/Containers/vectorized_product_iterator.jl","_prod_size","mtsig","Tuple{Tuple{}}"
"src/Containers/vectorized_product_iterator.jl","_prod_size","mtsig","Tuple{Tuple}"
"src/Containers/vectorized_product_iterator.jl","Base.axes","mtsig","Tuple{VectorizedProductIterator}"
"src/Containers/vectorized_product_iterator.jl","_prod_indices","mtsig","Tuple{Tuple{}}"
"src/Containers/vectorized_product_iterator.jl","_prod_indices","mtsig","Tuple{Tuple}"
"src/Containers/vectorized_product_iterator.jl","Base.ndims","mtsig","Tuple{VectorizedProductIterator}"
"src/Containers/vectorized_product_iterator.jl","Base.length","mtsig","Tuple{VectorizedProductIterator}"
"src/Containers/vectorized_product_iterator.jl","Base.iterate","mtsig","Tuple{VectorizedProductIterator, Vararg{Any}}"
"src/Containers/vectorized_product_iterator.jl","_eltype_or_any","mtsig","Tuple{VectorizedProductIterator}"
"src/_Derivatives/coloring.jl","Base.hash","mtsig","Tuple{MyPair{Int}, UInt}"
"src/_Derivatives/coloring.jl","IndexedSet","mtsig","Tuple{Integer}"
"src/_Derivatives/coloring.jl","Base.push!","mtsig","Tuple{IndexedSet, Integer}"
"src/_Derivatives/coloring.jl","Base.empty!","mtsig","Tuple{IndexedSet}"
"src/_Derivatives/coloring.jl","Base.length","mtsig","Tuple{IndexedSet}"
"src/_Derivatives/coloring.jl","Base.resize!","mtsig","Tuple{IndexedSet, Integer}"
"src/_Derivatives/coloring.jl","Base.collect","mtsig","Tuple{IndexedSet}"
"src/_Derivatives/coloring.jl","Base.union!","mtsig","Tuple{IndexedSet, Any}"
"src/_Derivatives/coloring.jl","num_vertices","mtsig","Tuple{UndirectedGraph}"
"src/_Derivatives/coloring.jl","num_edges","mtsig","Tuple{UndirectedGraph}"
"src/_Derivatives/coloring.jl","num_neighbors","mtsig","Tuple{Int, UndirectedGraph}"
"src/_Derivatives/coloring.jl","start_neighbors","mtsig","Tuple{Int, UndirectedGraph}"
"src/_Derivatives/coloring.jl","gen_adjlist","mtsig","Tuple{Any, Any, Any}"
"src/_Derivatives/coloring.jl","normalize","mtsig","Tuple{Any, Any}"
"src/_Derivatives/coloring.jl","normalize_p","mtsig","Tuple{MyPair}"
"src/_Derivatives/coloring.jl","normalize_p","mtsig","Tuple{Any, Any}"
"src/_Derivatives/coloring.jl","prevent_cycle","mtsig","Tuple{Any, Any, Any, Any, Any, Any, Any, Any, Any}"
"src/_Derivatives/coloring.jl","grow_star","mtsig","Tuple{Any, Any, Any, Any, Any, Any}"
"src/_Derivatives/coloring.jl","merge_trees","mtsig","Tuple{Any, Any, Any}"
"src/_Derivatives/coloring.jl","acyclic_coloring","mtsig","Tuple{UndirectedGraph}"
"src/_Derivatives/coloring.jl","RecoveryInfo","mtsig","Tuple{}"
"src/_Derivatives/coloring.jl","recovery_preprocess","mtsig","Tuple{UndirectedGraph, Any, Any, Any}"
"src/_Derivatives/coloring.jl","indirect_recover_structure","mtsig","Tuple{RecoveryInfo}"
"src/_Derivatives/coloring.jl","hessian_color_preprocess","mtsig","Tuple{Any, Any, Any}"
"src/_Derivatives/coloring.jl","seed_matrix","mtsig","Tuple{RecoveryInfo}"
"src/_Derivatives/coloring.jl","prepare_seed_matrix!","mtsig","Tuple{Any, RecoveryInfo}"
"src/_Derivatives/coloring.jl","recover_from_matmat!","mtsig","Tuple{Any, Any, RecoveryInfo, Any}"
"src/_Derivatives/conversion.jl","expr_to_nodedata","mtsig","Tuple{Expr, UserOperatorRegistry}"
"src/_Derivatives/conversion.jl","expr_to_nodedata","mtsig","Tuple{Expr, Vector{NodeData}, Vector{Float64}, Any, UserOperatorRegistry}"
"src/_Derivatives/conversion.jl","expr_to_nodedata","mtsig","Tuple{Number, Vector{NodeData}, Vector{Float64}, Any, UserOperatorRegistry}"
"src/_Derivatives/conversion.jl","adjmat","mtsig","Tuple{Vector{NodeData}}"
"src/_Derivatives/forward.jl","eval_and_check_return_type","mtsig","Tuple{Function, Any, Vararg{Any}}"
"src/_Derivatives/forward.jl","forward_eval","mtsig","Tuple{AbstractVector{T}, AbstractVector{T}, AbstractVector{NodeData}, Any, Any, Any, Any, Any, Any, Any, UserOperatorRegistry} where T"
"src/_Derivatives/forward.jl","forward_eval_ϵ","mtsig","(Tuple{AbstractVector{T}, AbstractVector{ForwardDiff.Partials{N, T}}, AbstractVector{T}, AbstractVector{ForwardDiff.Partials{N, T}}, Vector{NodeData}, Any, Any, Any, UserOperatorRegistry} where T) where N"
"src/_Derivatives/forward.jl","binaryswitch","mtsig","Tuple{Any, Any}"
"src/_Derivatives/forward.jl","eval_univariate","mtsig","Tuple{Any, T} where T"
"src/_Derivatives/forward.jl","eval_univariate_2nd_deriv","mtsig","Tuple{Any, T, T} where T"
"src/_Derivatives/linearity.jl","classify_linearity","mtsig","Tuple{Vector{NodeData}, Any, Any}"
"src/_Derivatives/reverse.jl","reverse_eval","mtsig","Tuple{AbstractVector{T}, AbstractVector{T}, Vector{NodeData}, Any} where T"
"src/_Derivatives/reverse.jl","reverse_extract","mtsig","Tuple{AbstractVector{T}, AbstractVector{T}, Vector{NodeData}, Any, Any, T} where T"
"src/_Derivatives/reverse.jl","reverse_eval_ϵ","mtsig","(Tuple{AbstractVector{ForwardDiff.Partials{N, T}}, AbstractVector{T}, Any, AbstractVector{T}, Any, Vector{NodeData}, Any, Any, Any, T, ForwardDiff.Partials{N, T}} where T) where N"
"src/_Derivatives/sparsity.jl","compute_gradient_sparsity","mtsig","Tuple{Vector{NodeData}}"
"src/_Derivatives/sparsity.jl","compute_gradient_sparsity!","mtsig","Tuple{Coloring.IndexedSet, Vector{NodeData}}"
"src/_Derivatives/sparsity.jl","compute_hessian_sparsity","mtsig","Tuple{Vector{NodeData}, Any, Vector{Linearity}, Coloring.IndexedSet, Vector{Set{Tuple{Int, Int}}}, Vector{Vector{Int}}}"
"src/_Derivatives/sparsity.jl","<NA-name>","mtsig","Tuple{Any}"
"src/_Derivatives/subexpressions.jl","list_subexpressions","mtsig","Tuple{Vector{NodeData}}"
"src/_Derivatives/subexpressions.jl","_topological_sort","mtsig","Tuple{Any, Vector{Vector{NodeData}}, Vector{Vector{Int}}}"
"src/_Derivatives/subexpressions.jl","order_subexpressions","mtsig","Tuple{Vector{Vector{NodeData}}, Vector{Vector{NodeData}}}"
"src/_Derivatives/subexpressions.jl","order_subexpressions","mtsig","Tuple{Vector{NodeData}, Vector{Vector{NodeData}}}"
"src/_Derivatives/topological_sort.jl","TopologicalSortVisitor","mtsig","Tuple{Int}"
"src/_Derivatives/topological_sort.jl","depth_first_visit_impl!","mtsig","Tuple{Any, Any, Any, Any, Vector{Int}, TopologicalSortVisitor}"
"src/_Derivatives/topological_sort.jl","traverse_graph","mtsig","Tuple{Any, Any, Any, TopologicalSortVisitor, Any, Any, Any}"
"src/_Derivatives/topological_sort.jl","close_vertex!","mtsig","Tuple{TopologicalSortVisitor, Int}"
"src/_Derivatives/topological_sort.jl","reverse_topological_sort_by_dfs","mtsig","Tuple{Any, Any, Any, Vector{Int}, Vector{Int}, Vector{Int}}"
"src/_Derivatives/types.jl","UserOperatorRegistry","mtsig","Tuple{}"
"src/_Derivatives/types.jl","register_multivariate_operator!","mtsig","Tuple{UserOperatorRegistry, Symbol, MOI.AbstractNLPEvaluator}"
"src/_Derivatives/types.jl","register_univariate_operator!","mtsig","Tuple{UserOperatorRegistry, Symbol, Any, Any, Any}"
"src/_Derivatives/types.jl","has_user_multivariate_operators","mtsig","Tuple{Vector{NodeData}}"
"test/JuMPExtension.jl","MyModel","mtsig","Tuple{}"
"test/JuMPExtension.jl","Base.broadcastable","mtsig","Tuple{MyModel}"
"test/JuMPExtension.jl","JuMP.object_dictionary","mtsig","Tuple{MyModel}"
"test/JuMPExtension.jl","Base.copy","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","Base.:(==)","mtsig","Tuple{MyVariableRef, MyVariableRef}"
"test/JuMPExtension.jl","Base.broadcastable","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.isequal_canonical","mtsig","Tuple{MyVariableRef, MyVariableRef}"
"test/JuMPExtension.jl","JuMP.add_variable","mtsig","Tuple{MyModel, JuMP.AbstractVariable, String}"
"test/JuMPExtension.jl","JuMP.add_variable","mtsig","Tuple{MyModel, JuMP.VariableConstrainedOnCreation, String}"
"test/JuMPExtension.jl","JuMP.add_variable","mtsig","Tuple{MyModel, JuMP.VariablesConstrainedOnCreation, Any}"
"test/JuMPExtension.jl","JuMP.delete","mtsig","Tuple{MyModel, MyVariableRef}"
"test/JuMPExtension.jl","JuMP.delete","mtsig","Tuple{MyModel, Vector{MyVariableRef}}"
"test/JuMPExtension.jl","JuMP.is_valid","mtsig","Tuple{MyModel, MyVariableRef}"
"test/JuMPExtension.jl","JuMP.num_variables","mtsig","Tuple{MyModel}"
"test/JuMPExtension.jl","variable_info","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","update_variable_info","mtsig","Tuple{MyVariableRef, JuMP.VariableInfo}"
"test/JuMPExtension.jl","JuMP.has_lower_bound","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.lower_bound","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.set_lower_bound","mtsig","Tuple{MyVariableRef, Any}"
"test/JuMPExtension.jl","JuMP.delete_lower_bound","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.has_upper_bound","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.upper_bound","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.set_upper_bound","mtsig","Tuple{MyVariableRef, Any}"
"test/JuMPExtension.jl","JuMP.delete_upper_bound","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.is_fixed","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.fix_value","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.fix","mtsig","Tuple{MyVariableRef, Any, Bool}"
"test/JuMPExtension.jl","JuMP.unfix","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.start_value","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.set_start_value","mtsig","Tuple{MyVariableRef, Any}"
"test/JuMPExtension.jl","JuMP.is_binary","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.set_binary","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.unset_binary","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.is_integer","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.set_integer","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.unset_integer","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.add_constraint","mtsig","Tuple{MyModel, JuMP.AbstractConstraint, String}"
"test/JuMPExtension.jl","JuMP.delete","mtsig","Tuple{MyModel, MyConstraintRef}"
"test/JuMPExtension.jl","JuMP.delete","mtsig","Tuple{MyModel, Vector{<:MyConstraintRef}}"
"test/JuMPExtension.jl","JuMP.is_valid","mtsig","Tuple{MyModel, MyConstraintRef}"
"test/JuMPExtension.jl","JuMP.constraint_object","mtsig","Tuple{MyConstraintRef}"
"test/JuMPExtension.jl","JuMP.num_constraints","mtsig","Tuple{MyModel, Type{<:JuMP.AbstractJuMPScalar}, Type{<:MOI.AbstractSet}}"
"test/JuMPExtension.jl","<NA-name>","mtsig","Tuple{Any}"
"test/JuMPExtension.jl","JuMP.num_constraints","mtsig","Tuple{MyModel, Type{<:Vector{F}}, Type{<:MOI.AbstractSet}} where F <: JuMP.AbstractJuMPScalar"
"test/JuMPExtension.jl","<NA-name>","mtsig","Tuple{Any}"
"test/JuMPExtension.jl","JuMP.set_objective_function","mtsig","Tuple{MyModel, JuMP.AbstractJuMPScalar}"
"test/JuMPExtension.jl","JuMP.set_objective_function","mtsig","Tuple{MyModel, Real}"
"test/JuMPExtension.jl","JuMP.objective_sense","mtsig","Tuple{MyModel}"
"test/JuMPExtension.jl","JuMP.set_objective_sense","mtsig","Tuple{MyModel, Any}"
"test/JuMPExtension.jl","JuMP.objective_function_type","mtsig","Tuple{MyModel}"
"test/JuMPExtension.jl","JuMP.objective_function","mtsig","Tuple{MyModel}"
"test/JuMPExtension.jl","JuMP.objective_function","mtsig","Tuple{MyModel, Type}"
"test/JuMPExtension.jl","JuMP.name","mtsig","Tuple{MyVariableRef}"
"test/JuMPExtension.jl","JuMP.set_name","mtsig","Tuple{MyVariableRef, String}"
"test/JuMPExtension.jl","JuMP.variable_by_name","mtsig","Tuple{MyModel, String}"
"test/JuMPExtension.jl","JuMP.name","mtsig","Tuple{MyConstraintRef}"
"test/JuMPExtension.jl","JuMP.set_name","mtsig","Tuple{MyConstraintRef, String}"
"test/JuMPExtension.jl","JuMP.constraint_by_name","mtsig","Tuple{MyModel, String}"
"test/JuMPExtension.jl","JuMP.show_backend_summary","mtsig","Tuple{IO, MyModel}"
"test/JuMPExtension.jl","JuMP.show_objective_function_summary","mtsig","Tuple{IO, MyModel}"
"test/JuMPExtension.jl","JuMP.objective_function_string","mtsig","Tuple{Any, MyModel}"
"test/JuMPExtension.jl","_plural","mtsig","Tuple{Any}"
"test/JuMPExtension.jl","JuMP.show_constraints_summary","mtsig","Tuple{IO, MyModel}"
"test/JuMPExtension.jl","JuMP.constraints_string","mtsig","Tuple{Any, MyModel}"
"test/JuMPExtension.jl","<NA-name>","mtsig","Tuple{Any}"
"test/callbacks.jl","<NA-name>","mtsig","Tuple{}"
"test/callbacks.jl","<NA-name>","mtsig","Tuple{Any}"
"test/callbacks.jl","<NA-name>","mtsig","Tuple{Any}"
"test/complex.jl","runtests","mtsig","Tuple{}"
"test/complex.jl","test_complex_aff_expr","mtsig","Tuple{}"
"test/complex.jl","test_complex_quad_expr","mtsig","Tuple{}"
"test/complex.jl","test_complex_plus_variable","mtsig","Tuple{}"
"test/complex.jl","test_complex_minus_variable","mtsig","Tuple{}"
"test/complex.jl","test_complex_aff_expr_convert","mtsig","Tuple{}"
"test/complex.jl","test_complex_add_aff","mtsig","Tuple{}"
"test/complex.jl","test_complex_vector_constraint","mtsig","Tuple{}"
"test/complex.jl","test_complex_vector_constraint","mtsig","Tuple{}"
"test/complex.jl","test_complex_scalar_affine_constraint","mtsig","Tuple{}"
"test/complex.jl","test_complex_scalar_quadratic_constraint","mtsig","Tuple{}"
"test/complex.jl","test_complex_print","mtsig","Tuple{}"
"test/complex.jl","test_complex_conj","mtsig","Tuple{}"
"test/complex.jl","test_complex_abs2","mtsig","Tuple{}"
"test/constraint.jl","_test_constraint_name_util","mtsig","Tuple{Any, Any, Type, Type}"
"test/constraint.jl","test_VariableIndex_constraints","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Container_constraints","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_VectorOfVariables_constraints","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_AffExpr_scalar_constraints","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_AffExpr_vectorized_constraints","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_AffExpr_vector_constraints","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_delete_constraints","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_batch_delete_constraints","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_two_sided_constraints","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_broadcasted_constraint_eq","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_broadcasted_constraint_leq","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_broadcasted_two_sided_constraint","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_broadcasted_constraint_with_indices","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_quadexpr_constraints","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_syntax_error_constraint","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_indicator_constraint","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_SDP_constraint","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_SDP_errors","mtsig","Tuple{Any, Any}"
"test/constraint.jl","_test_constraint_name_util","mtsig","Tuple{Any, Any}"
"test/constraint.jl","err","mtsig","Tuple{Any}"
"test/constraint.jl","test_PSD_constraint_errors","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_matrix_constraint_errors","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_nonsensical_SDP_constraint","mtsig","Tuple{Any, Any}"
"test/constraint.jl","_ErrorException","mtsig","Tuple{Any}"
"test/constraint.jl","test_sum_constraint","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Model_all_constraints_scalar","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Model_all_constraints_vector","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Model_list_of_constraint_types","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Model_dual_start","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Model_dual_start_vector","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Model_primal_start","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Model_primal_start_vector","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Model_change_coefficient","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Model_change_coefficients","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Model_change_rhs","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Model_add_to_function_constant_scalar","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Model_add_to_function_constant_vector","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_Model_value_constraint_var","mtsig","Tuple{Any, Any}"
"test/constraint.jl","<NA-name>","mtsig","Tuple{Any}"
"test/constraint.jl","_test_shadow_price_util","mtsig","Tuple{Any, Any, Any}"
"test/constraint.jl","<NA-name>","mtsig","Tuple{}"
"test/constraint.jl","test_Model_shadow_price","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_abstractarray_vector_constraint","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_constraint_inference","mtsig","Tuple{Any, Any}"
"test/constraint.jl","foo","mtsig","Tuple{Any, Any}"
"test/constraint.jl","MOI.add_variable","mtsig","Tuple{_UnsupportedConstraintName}"
"test/constraint.jl","MOI.supports_constraint","mtsig","Tuple{_UnsupportedConstraintName, Type{MOI.VectorOfVariables}, Type{MOI.SOS1{Float64}}}"
"test/constraint.jl","MOI.add_constraint","mtsig","Tuple{_UnsupportedConstraintName, MOI.VectorOfVariables, MOI.SOS1{Float64}}"
"test/constraint.jl","MOI.is_empty","mtsig","Tuple{_UnsupportedConstraintName}"
"test/constraint.jl","test_Model_unsupported_ConstraintName","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_PSDCone_constraints","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_PSDCone_Symmetric_constraints","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_set_inequalities","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_num_constraints","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_num_constraints_UndefKeywordError","mtsig","Tuple{Any, Any}"
"test/constraint.jl","test_num_constraints_nonlinear","mtsig","Tuple{Any, Any}"
"test/constraint.jl","runtests","mtsig","Tuple{}"
"test/derivatives.jl","test_linearity","mtsig","Tuple{Any, Any, Any, Any}"
"test/derivatives.jl","test_registered_function_linearity","mtsig","Tuple{}"
"test/derivatives.jl","foo","mtsig","Tuple{Any, Any}"
"test/derivatives.jl","MOI.eval_objective","mtsig","Tuple{ΦEvaluator, Any}"
"test/derivatives.jl","MOI.eval_objective_gradient","mtsig","Tuple{ΦEvaluator, Any, Any}"
"test/derivatives.jl","<NA-name>","mtsig","Tuple{Any}"
"test/derivatives.jl","<NA-name>","mtsig","Tuple{Any}"
"test/derivatives.jl","Φ","mtsig","Tuple{Any, Any}"
"test/derivatives.jl","dualforward","mtsig","Tuple{Any, Any, Any}"
"test/derivatives.jl","_epsilon","mtsig","Tuple{ForwardDiff.Dual{Nothing, Float64, 1}}"
"test/derivatives_coloring.jl","to_adjlist","mtsig","Tuple{Graph}"
"test/expr.jl","Base.:^","mtsig","Tuple{PowVariable, Int}"
"test/expr.jl","Base.:*","mtsig","Tuple{PowVariable, PowVariable}"
"test/expr.jl","Base.copy","mtsig","Tuple{PowVariable}"
"test/expr.jl","expressions_test","mtsig","Tuple{Type{<:JuMP.AbstractModel}, Type{<:JuMP.AbstractVariableRef}}"
"test/expr.jl","<NA-name>","mtsig","Tuple{Any}"
"test/expr.jl","<NA-name>","mtsig","Tuple{Any}"
"test/expr.jl","<NA-name>","mtsig","Tuple{Any}"
"test/expr.jl","<NA-name>","mtsig","Tuple{Any}"
"test/expr.jl","<NA-name>","mtsig","Tuple{Any}"
"test/feasibility_checker.jl","test_unsupported","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_lessthan","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_greaterthan","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_equalto","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_interval","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_zeroone","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_integer","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_semicontinuous","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_semiintger","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_nonnegatives","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_nonpositives","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_reals","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_zeros","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_no_solution","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_primal_solution","mtsig","Tuple{}"
"test/feasibility_checker.jl","<NA-name>","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_primal_solution_func","mtsig","Tuple{}"
"test/feasibility_checker.jl","<NA-name>","mtsig","Tuple{}"
"test/feasibility_checker.jl","<NA-name>","mtsig","Tuple{Any}"
"test/feasibility_checker.jl","test_feasible","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_missing","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_missing_error","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_bounds","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_scalar_affine","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_scalar_affine_func","mtsig","Tuple{}"
"test/feasibility_checker.jl","<NA-name>","mtsig","Tuple{Any}"
"test/feasibility_checker.jl","test_scalar_quadratic","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_vector","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_vector_affine","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_nonlinear","mtsig","Tuple{}"
"test/feasibility_checker.jl","test_nonlinear_missing","mtsig","Tuple{}"
"test/feasibility_checker.jl","runtests","mtsig","Tuple{}"
"test/file_formats.jl","test_mof_file","mtsig","Tuple{}"
"test/file_formats.jl","test_mof_io","mtsig","Tuple{}"
"test/file_formats.jl","test_mof_nlp","mtsig","Tuple{}"
"test/file_formats.jl","test_nl_nlp","mtsig","Tuple{}"
"test/file_formats.jl","test_unsupported_constraint","mtsig","Tuple{}"
"test/file_formats.jl","test_unsupported_objective","mtsig","Tuple{}"
"test/file_formats.jl","test_unsupported_attribute","mtsig","Tuple{}"
"test/file_formats.jl","runtests","mtsig","Tuple{}"
"test/generate_and_solve.jl","<NA-name>","mtsig","Tuple{}"
"test/generate_and_solve.jl","<NA-name>","mtsig","Tuple{}"
"test/generate_and_solve.jl","<NA-name>","mtsig","Tuple{}"
"test/generate_and_solve.jl","<NA-name>","mtsig","Tuple{}"
"test/generate_and_solve.jl","<NA-name>","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","runtests","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","_test_sensitivity","mtsig","Tuple{Any, Any}"
"test/lp_sensitivity2.jl","test_Error_handling","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","test_Degeneracy","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","test_Simple_bounds_Min","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","test_Simple_bounds_Max","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","test_Max_I","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","test_Min_I","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","test_Max_II","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","test_Min_II","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","test_Max_III","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","test_Min_III","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","test_Max_IV","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","test_Min_IV","mtsig","Tuple{}"
"test/lp_sensitivity2.jl","test_Free_variable","mtsig","Tuple{}"
"test/macros.jl","runtests","mtsig","Tuple{}"
"test/macros.jl","JuMP.build_variable","mtsig","Tuple{Function, JuMP.VariableInfo, Type{NewVariable}}"
"test/macros.jl","JuMP.add_variable","mtsig","Tuple{Model, NewVariable, String}"
"test/macros.jl","JuMP.add_variable","mtsig","Tuple{Model, VariablesConstrainedOnCreation{MOI.SecondOrderCone, VectorShape, NewVariable}, Any}"
"test/macros.jl","<NA-name>","mtsig","Tuple{Any}"
"test/macros.jl","JuMP.build_constraint","mtsig","Tuple{Function, Any, PowerCone, Any}"
"test/macros.jl","JuMP.build_constraint","mtsig","Tuple{Function, GenericAffExpr, MOI.EqualTo, Type{MyConstrType}, Any}"
"test/macros.jl","JuMP.parse_constraint_head","mtsig","Tuple{Function, Val{:(:=)}, Any, Any}"
"test/macros.jl","Base.copy","mtsig","Tuple{CustomSet}"
"test/macros.jl","JuMP.build_constraint","mtsig","Tuple{Function, Any, CustomType}"
"test/macros.jl","JuMP.parse_constraint_call","mtsig","Tuple{Function, Bool, Val{:f}, Any}"
"test/macros.jl","JuMP.add_variable","mtsig","Tuple{Model, MyVariableTuple, String}"
"test/macros.jl","JuMP.build_variable","mtsig","Tuple{Function, JuMP.VariableInfo, Type{MyVariableTuple}, Int}"
"test/macros.jl","JuMP.build_variable","mtsig","Tuple{Function, JuMP.VariableInfo, Type{MyVariableTuple}, Int}"
"test/macros.jl","test_Check_Julia_generator_expression_parsing","mtsig","Tuple{}"
"test/macros.jl","test_Check_Julia_condition_expression_parsing","mtsig","Tuple{}"
"test/macros.jl","test_add_positional_args","mtsig","Tuple{}"
"test/macros.jl","test_MutableArithmetics_Zero_Issue_2187","mtsig","Tuple{}"
"test/macros.jl","test_MutableArithmetics_Zero_Issue_2087","mtsig","Tuple{}"
"test/macros.jl","test_Extension_variables_constrained_on_creation_2594","mtsig","Tuple{}"
"test/macros.jl","test_Extension_of_variable_with_build_variable_1029","mtsig","Tuple{}"
"test/macros.jl","test_build_constraint_keyword_test","mtsig","Tuple{Any}"
"test/macros.jl","test_MyModel_build_constraint_keyword_test","mtsig","Tuple{}"
"test/macros.jl","test_build_constraint_extra_arg_test","mtsig","Tuple{Any}"
"test/macros.jl","test_MyModel_build_constraint_extra_arg_test","mtsig","Tuple{}"
"test/macros.jl","test_custom_expression_test","mtsig","Tuple{Any}"
"test/macros.jl","test_MyModel_custom_expression_test","mtsig","Tuple{}"
"test/macros.jl","test_custom_function_test","mtsig","Tuple{Any}"
"test/macros.jl","test_MyModel_custom_function_test","mtsig","Tuple{}"
"test/macros.jl","test_build_constraint_on_variable","mtsig","Tuple{Any, Any}"
"test/macros.jl","test_MyModel_build_constraint_on_variable","mtsig","Tuple{}"
"test/macros.jl","test_Check_constraint_basics","mtsig","Tuple{Any}"
"test/macros.jl","test_MyModel_Check_constraint_basics","mtsig","Tuple{}"
"test/macros.jl","test_Unicode_comparison_operators","mtsig","Tuple{Any}"
"test/macros.jl","test_MyModel_Unicode_comparison_operators","mtsig","Tuple{}"
"test/macros.jl","test_constraint_naming","mtsig","Tuple{Any}"
"test/macros.jl","test_MyModel_constraint_naming","mtsig","Tuple{}"
"test/macros.jl","test_build_constraint_scalar_inequality","mtsig","Tuple{Any}"
"test/macros.jl","test_MyModel_build_constraint_scalar_inequality","mtsig","Tuple{}"
"test/macros.jl","test_build_constraint_function_in_set","mtsig","Tuple{Any}"
"test/macros.jl","test_MyModel_build_constraint_function_in_set","mtsig","Tuple{}"
"test/macros.jl","test_build_constraint_SOS1","mtsig","Tuple{Any}"
"test/macros.jl","test_MyModel_build_constraint_SOS1","mtsig","Tuple{}"
"test/macros.jl","test_build_constraint_SOS2","mtsig","Tuple{Any}"
"test/macros.jl","test_MyModel_build_constraint_SOS2","mtsig","Tuple{}"
"test/macros.jl","test_build_constraint_broadcast","mtsig","Tuple{Any}"
"test/macros.jl","test_MyModel_build_constraint_broadcast","mtsig","Tuple{}"
"test/macros.jl","test_build_constraint_error","mtsig","Tuple{Any}"
"test/macros.jl","test_MyModel_build_constraint_error","mtsig","Tuple{}"
"test/macros.jl","test_Promotion_of_SOS_sets","mtsig","Tuple{}"
"test/macros.jl","test_Adding_anonymous_variable_and_specify_required_constraint_on_it","mtsig","Tuple{}"
"test/macros.jl","test_Nested_tuple_destructuring","mtsig","Tuple{}"
"test/macros.jl","test_Error_on_unexpected_comparison","mtsig","Tuple{}"
"test/macros.jl","test_Warn_on_unexpected_assignment","mtsig","Tuple{}"
"test/macros.jl","test_Lookup_in_model_scope_variable","mtsig","Tuple{}"
"test/macros.jl","test_Lookup_in_model_scope_constraint","mtsig","Tuple{}"
"test/macros.jl","test_Lookup_in_model_scope_expression","mtsig","Tuple{}"
"test/macros.jl","test_Lookup_in_model_scope_NLexpression","mtsig","Tuple{}"
"test/macros.jl","test_Lookup_in_model_scope_NLconstraint","mtsig","Tuple{}"
"test/macros.jl","test_Error_on_duplicate_names_in_model_scope","mtsig","Tuple{}"
"test/macros.jl","test_Duplicate_variables_are_never_created","mtsig","Tuple{}"
"test/macros.jl","test_Anonymous_expressions_arent_registered","mtsig","Tuple{}"
"test/macros.jl","test_Anonymous_NLexpressions_arent_registered","mtsig","Tuple{}"
"test/macros.jl","test_Adjoints","mtsig","Tuple{}"
"test/macros.jl","test_Nonliteral_exponents_in_constraint","mtsig","Tuple{}"
"test/macros.jl","foo","mtsig","Tuple{}"
"test/macros.jl","test_AffExpr_in_macros","mtsig","Tuple{}"
"test/macros.jl","test_constraints","mtsig","Tuple{}"
"test/macros.jl","test_NLparameters","mtsig","Tuple{}"
"test/macros.jl","test_Index_variables_dont_leak_out_of_macros","mtsig","Tuple{}"
"test/macros.jl","test_Plural_failures","mtsig","Tuple{}"
"test/macros.jl","test_Plural_returns","mtsig","Tuple{}"
"test/macros.jl","test_Empty_summation_in_constraints","mtsig","Tuple{}"
"test/macros.jl","test_Empty_summation_in_NLconstraints","mtsig","Tuple{}"
"test/macros.jl","test_Splatting_error","mtsig","Tuple{}"
"test/macros.jl","f","mtsig","Tuple{Any, Any}"
"test/macros.jl","test_NaN_in_constraints","mtsig","Tuple{}"
"test/macros.jl","test_unregister","mtsig","Tuple{}"
"test/macros.jl","test_unrecognized_variable_type","mtsig","Tuple{}"
"test/macros.jl","test_unrecognized_kwarg","mtsig","Tuple{}"
"test/macros.jl","test_kwargs","mtsig","Tuple{}"
"test/macros.jl","test_Model_as_index","mtsig","Tuple{}"
"test/macros.jl","test_Broadcasting_sparse_arrays","mtsig","Tuple{}"
"test/macros.jl","test_singular_plural_error","mtsig","Tuple{}"
"test/macros.jl","test_supports_shift_constant","mtsig","Tuple{}"
"test/macros.jl","test_Interval_errors","mtsig","Tuple{}"
"test/macros.jl","test_Interval_errors_lhs","mtsig","Tuple{}"
"test/macros.jl","test_Interval_errors_rhs","mtsig","Tuple{}"
"test/macros.jl","test_Interval_errors_lhs_and_rhs","mtsig","Tuple{}"
"test/macros.jl","test_nlparameter_basic","mtsig","Tuple{}"
"test/macros.jl","test_nlparameter_Vector","mtsig","Tuple{}"
"test/macros.jl","test_nlparameter_DenseAxisArray","mtsig","Tuple{}"
"test/macros.jl","test_nlparameter_SparseAxisArray","mtsig","Tuple{}"
"test/macros.jl","test_nlparameter_requested_container","mtsig","Tuple{}"
"test/macros.jl","test_nlparameter_too_many_positional_args","mtsig","Tuple{}"
"test/macros.jl","test_nlparameter_unsupported_keyword_args","mtsig","Tuple{}"
"test/macros.jl","test_nlparameter_invalid_syntax","mtsig","Tuple{}"
"test/macros.jl","test_nlparameter_anonymous","mtsig","Tuple{}"
"test/macros.jl","test_nlparameter_anonymous_error","mtsig","Tuple{}"
"test/macros.jl","test_nlparameter_invalid_number","mtsig","Tuple{}"
"test/macros.jl","test_nlparameter_register","mtsig","Tuple{}"
"test/macros.jl","test_variable_vector_lowerbound","mtsig","Tuple{}"
"test/macros.jl","test_variable_vector_upperbound","mtsig","Tuple{}"
"test/macros.jl","test_variable_vector_fixed","mtsig","Tuple{}"
"test/macros.jl","test_variable_vector_start","mtsig","Tuple{}"
"test/macros.jl","test_variable_vector_interval","mtsig","Tuple{}"
"test/macros.jl","test_invalid_name_errors","mtsig","Tuple{}"
"test/macros.jl","test_invalid_name_errors_denseaxisarray","mtsig","Tuple{}"
"test/macros.jl","test_invalid_name_errors_sparseaxisarray","mtsig","Tuple{}"
"test/macros.jl","test_invalid_variable_syntax","mtsig","Tuple{}"
"test/macros.jl","test_broadcasting_variable_in_set","mtsig","Tuple{}"
"test/macros.jl","test_parse_constraint_head_error","mtsig","Tuple{}"
"test/macros.jl","test_parse_constraint_head_inconsistent_vectorize","mtsig","Tuple{}"
"test/macros.jl","test_parse_constraint_head_inconsistent_signs","mtsig","Tuple{}"
"test/macros.jl","test_MA_Zero_objective","mtsig","Tuple{}"
"test/macros.jl","test_MA_Zero_expression","mtsig","Tuple{}"
"test/macros.jl","test_reorder_keyword_arguments","mtsig","Tuple{}"
"test/macros.jl","test_vectorized_constraint_name","mtsig","Tuple{}"
"test/macros.jl","test_expr_index_vars","mtsig","Tuple{}"
"test/macros.jl","test_broadcasted_SparseAxisArray_constraint","mtsig","Tuple{}"
"test/macros.jl","test_broadcasted_DenseAxisArray_constraint","mtsig","Tuple{}"
"test/macros.jl","test_set_string_name_variables","mtsig","Tuple{}"
"test/macros.jl","test_set_string_name_constraints","mtsig","Tuple{}"
"test/macros.jl","test_set_string_name_model","mtsig","Tuple{}"
"test/model.jl","opt_build","mtsig","Tuple{Int, Int}"
"test/model.jl","_test_result_attributes","mtsig","Tuple{Any}"
"test/model.jl","<NA-name>","mtsig","Tuple{}"
"test/model.jl","test_result_attributes","mtsig","Tuple{}"
"test/model.jl","test_result_attributes_after_empty","mtsig","Tuple{}"
"test/model.jl","fill_small_test_model!","mtsig","Tuple{Any}"
"test/model.jl","test_nooptimizer","mtsig","Tuple{}"
"test/model.jl","test_empty!_model","mtsig","Tuple{}"
"test/model.jl","hook","mtsig","Tuple{Any}"
"test/model.jl","test_innermost_error","mtsig","Tuple{}"
"test/model.jl","test_innermost","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{}"
"test/model.jl","test_hygiene_variable","mtsig","Tuple{}"
"test/model.jl","test_hygiene_linear","mtsig","Tuple{}"
"test/model.jl","test_hygiene_quadratic","mtsig","Tuple{}"
"test/model.jl","test_hygiene_attribute","mtsig","Tuple{}"
"test/model.jl","test_optimize_hook","mtsig","Tuple{}"
"test/model.jl","hook","mtsig","Tuple{Any}"
"test/model.jl","test_universal_fallback","mtsig","Tuple{}"
"test/model.jl","test_bridges_automatic","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{}"
"test/model.jl","test_bridges_automatic_disabled","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{}"
"test/model.jl","test_bridges_direct","mtsig","Tuple{}"
"test/model.jl","mock_factory","mtsig","Tuple{}"
"test/model.jl","optimize!","mtsig","Tuple{Any}"
"test/model.jl","test_bridges_add_before_con_model_optimizer","mtsig","Tuple{}"
"test/model.jl","test_bridges_add_before_con_set_optimizer","mtsig","Tuple{}"
"test/model.jl","test_bridges_add_after_con_model_optimizer","mtsig","Tuple{}"
"test/model.jl","test_bridges_add_after_con_set_optimizer","mtsig","Tuple{}"
"test/model.jl","test_bridges_add_bridgeable_con_model_optimizer","mtsig","Tuple{}"
"test/model.jl","test_bridges_add_bridgeable_con_set_optimizer","mtsig","Tuple{}"
"test/model.jl","test_bridge_graph_false","mtsig","Tuple{}"
"test/model.jl","test_bridge_graph_true","mtsig","Tuple{}"
"test/model.jl","test_solve_time","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{}"
"test/model.jl","test_solver_name","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{}"
"test/model.jl","test_set_silent","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{}"
"test/model.jl","test_set_optimizer_attribute","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{}"
"test/model.jl","test_set_optimizer_attributes","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{}"
"test/model.jl","test_get_optimizer_attribute","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{}"
"test/model.jl","test_set_retrieve_time_limit","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{}"
"test/model.jl","JuMP.copy_extension_data","mtsig","Tuple{DummyExtensionData, JuMP.AbstractModel, JuMP.AbstractModel}"
"test/model.jl","dummy_optimizer_hook","mtsig","Tuple{JuMP.AbstractModel}"
"test/model.jl","copy_model_style_mode","mtsig","Tuple{Any, Any}"
"test/model.jl","<NA-name>","mtsig","Tuple{Any}"
"test/model.jl","test_copy_model_jump_auto","mtsig","Tuple{}"
"test/model.jl","test_compute_conflict","mtsig","Tuple{}"
"test/model.jl","test_copy_model_base_auto","mtsig","Tuple{}"
"test/model.jl","test_copy_direct_mode","mtsig","Tuple{}"
"test/model.jl","test_direct_mode_using_OptimizerWithAttributes","mtsig","Tuple{}"
"test/model.jl","fake_optimizer","mtsig","Tuple{}"
"test/model.jl","test_copy_expr_aff","mtsig","Tuple{}"
"test/model.jl","test_copy_expr_quad","mtsig","Tuple{}"
"test/model.jl","test_copy_dense","mtsig","Tuple{}"
"test/model.jl","test_copy_sparse","mtsig","Tuple{}"
"test/model.jl","test_copy_object_fail","mtsig","Tuple{}"
"test/model.jl","test_copy_extension","mtsig","Tuple{}"
"test/model.jl","test_haskey","mtsig","Tuple{}"
"test/model.jl","test_copy_refmap_expr","mtsig","Tuple{}"
"test/model.jl","test_copy_dict_expr","mtsig","Tuple{}"
"test/model.jl","test_copy_filter","mtsig","Tuple{}"
"test/model.jl","test_copy_filter_array","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{Any}"
"test/model.jl","test_copy_filter_denseaxisarray","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{Any}"
"test/model.jl","test_copy_filter_sparseaxisarray","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{Any}"
"test/model.jl","test_copy_conflict","mtsig","Tuple{}"
"test/model.jl","<NA-name>","mtsig","Tuple{}"
"test/model.jl","runtests","mtsig","Tuple{}"
"test/modifications.jl","runtests","mtsig","Tuple{}"
"test/modifications.jl","test_variable_add_delete","mtsig","Tuple{}"
"test/modifications.jl","test_variable_integer","mtsig","Tuple{}"
"test/modifications.jl","test_variable_binary","mtsig","Tuple{}"
"test/modifications.jl","test_variable_lower","mtsig","Tuple{}"
"test/modifications.jl","test_variable_upper","mtsig","Tuple{}"
"test/modifications.jl","test_variable_fix","mtsig","Tuple{}"
"test/modifications.jl","test_constraint_add_delete","mtsig","Tuple{}"
"test/modifications.jl","test_constraint_rhs","mtsig","Tuple{}"
"test/modifications.jl","test_constraint_coef","mtsig","Tuple{}"
"test/modifications.jl","test_objective","mtsig","Tuple{}"
"test/modifications.jl","test_objective_sense","mtsig","Tuple{}"
"test/modifications.jl","test_objective_function","mtsig","Tuple{}"
"test/modifications.jl","test_objective_modify","mtsig","Tuple{}"
"test/modifications.jl","test_status_caching","mtsig","Tuple{}"
"test/modifications.jl","<NA-name>","mtsig","Tuple{}"
"test/modifications.jl","test_status_direct","mtsig","Tuple{}"
"test/mutable_arithmetics.jl","JuMP.name","mtsig","Tuple{DummyVariableRef}"
"test/mutable_arithmetics.jl","Base.:+","mtsig","Tuple{GenericAffExpr{Float64, DummyVariableRef}, JuMP.AbstractJuMPScalar}"
"test/mutable_arithmetics.jl","Base.:+","mtsig","Tuple{JuMP.AbstractJuMPScalar, JuMP.GenericAffExpr{Float64, DummyVariableRef}}"
"test/mutable_arithmetics.jl","Base.:-","mtsig","Tuple{GenericAffExpr{Float64, DummyVariableRef}, JuMP.AbstractJuMPScalar}"
"test/mutable_arithmetics.jl","Base.:-","mtsig","Tuple{JuMP.AbstractJuMPScalar, JuMP.GenericAffExpr{Float64, DummyVariableRef}}"
"test/mutable_arithmetics.jl","promote_operation_test","mtsig","Tuple{Function, Type, Type}"
"test/mutable_arithmetics.jl","f","mtsig","Tuple{}"
"test/mutable_arithmetics.jl","test_promote_operation","mtsig","Tuple{Any, Any}"
"test/mutable_arithmetics.jl","test_int","mtsig","Tuple{Any, Any}"
"test/mutable_arithmetics.jl","test_scalar","mtsig","Tuple{Any, Any}"
"test/mutable_arithmetics.jl","test_quadratic","mtsig","Tuple{Any, Any}"
"test/mutable_arithmetics.jl","test_sparse","mtsig","Tuple{Any, Any}"
"test/mutable_arithmetics.jl","test_vector","mtsig","Tuple{Any, Any}"
"test/mutable_arithmetics.jl","test_symmetric_matrix","mtsig","Tuple{Any, Any}"
"test/mutable_arithmetics.jl","test_nonsquare_matrix","mtsig","Tuple{Any, Any}"
"test/mutable_arithmetics.jl","test_DenseAxisVector","mtsig","Tuple{Any, Any}"
"test/mutable_arithmetics.jl","test_different_variables","mtsig","Tuple{Any, Any}"
"test/mutable_arithmetics.jl","_promote_test","mtsig","Tuple{Any, Any}"
"test/mutable_arithmetics.jl","runtests","mtsig","Tuple{}"
"test/nlp.jl","runtests","mtsig","Tuple{}"
"test/nlp.jl","test_univariate_error","mtsig","Tuple{}"
"test/nlp.jl","test_univariate_error_existing","mtsig","Tuple{}"
"test/nlp.jl","test_univariate","mtsig","Tuple{}"
"test/nlp.jl","g","mtsig","Tuple{Any}"
"test/nlp.jl","test_univariate_register_twice","mtsig","Tuple{}"
"test/nlp.jl","g","mtsig","Tuple{Any}"
"test/nlp.jl","test_univariate_register_twice_error","mtsig","Tuple{}"
"test/nlp.jl","g","mtsig","Tuple{Any}"
"test/nlp.jl","g","mtsig","Tuple{Any, Any}"
"test/nlp.jl","test_univariate_existing_nlpdata","mtsig","Tuple{}"
"test/nlp.jl","g","mtsig","Tuple{Any}"
"test/nlp.jl","test_univariate_redefine","mtsig","Tuple{}"
"test/nlp.jl","<NA-name>","mtsig","Tuple{Any}"
"test/nlp.jl","<NA-name>","mtsig","Tuple{Any}"
"test/nlp.jl","test_multivariate_error","mtsig","Tuple{}"
"test/nlp.jl","test_multivariate_error_existing","mtsig","Tuple{}"
"test/nlp.jl","test_multivariate","mtsig","Tuple{}"
"test/nlp.jl","g","mtsig","Tuple{Any, Any}"
"test/nlp.jl","test_multivariate_register_warn","mtsig","Tuple{}"
"test/nlp.jl","g","mtsig","Tuple{Any, Any}"
"test/nlp.jl","∇g","mtsig","Tuple{Vector{T}, T, T} where T <: Real"
"test/nlp.jl","test_multivariate_existing_nlpdata","mtsig","Tuple{}"
"test/nlp.jl","g","mtsig","Tuple{Any, Any}"
"test/nlp.jl","test_multivariate_redefine","mtsig","Tuple{}"
"test/nlp.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/nlp.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/nlp.jl","test_multivariate_register_splat","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Any, Any}"
"test/nlp.jl","test_multivariate_register_splat_existing","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Any, Any}"
"test/nlp.jl","test_multivariate_max","mtsig","Tuple{}"
"test/nlp.jl","test_multivariate_min","mtsig","Tuple{}"
"test/nlp.jl","test_register_check_forwarddiff_univariate_f","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Float64}"
"test/nlp.jl","test_register_check_forwarddiff_univariate_gradf","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Any}"
"test/nlp.jl","∇f","mtsig","Tuple{Float64}"
"test/nlp.jl","test_register_check_forwarddiff_multivariate","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Vararg{Any}}"
"test/nlp.jl","test_register_check_forwarddiff_multivariate_gradf","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Vararg{Any}}"
"test/nlp.jl","∇f","mtsig","Tuple{Vararg{Any}}"
"test/nlp.jl","_test_expressions_equal","mtsig","Tuple{JuMP._NonlinearExprData, JuMP._NonlinearExprData}"
"test/nlp.jl","test_all_nonlinear_constraints","mtsig","Tuple{}"
"test/nlp.jl","test_parse_plus_binary","mtsig","Tuple{}"
"test/nlp.jl","test_parse_plus_ternary","mtsig","Tuple{}"
"test/nlp.jl","test_parse_mult_binary","mtsig","Tuple{}"
"test/nlp.jl","test_parse_mult_ternary","mtsig","Tuple{}"
"test/nlp.jl","test_parse_exp_binary","mtsig","Tuple{}"
"test/nlp.jl","test_parse_sin","mtsig","Tuple{}"
"test/nlp.jl","test_parse_ifelse","mtsig","Tuple{}"
"test/nlp.jl","test_parse_ifelse_comparison","mtsig","Tuple{}"
"test/nlp.jl","test_parse_sum","mtsig","Tuple{}"
"test/nlp.jl","test_parse_prod","mtsig","Tuple{}"
"test/nlp.jl","test_parse_subexpressions","mtsig","Tuple{}"
"test/nlp.jl","test_parse_parameters","mtsig","Tuple{}"
"test/nlp.jl","test_parse_user_defined_function_univariate","mtsig","Tuple{}"
"test/nlp.jl","<NA-name>","mtsig","Tuple{Any}"
"test/nlp.jl","test_parse_user_defined_function_multivariate","mtsig","Tuple{}"
"test/nlp.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/nlp.jl","test_parse_splatting","mtsig","Tuple{}"
"test/nlp.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/nlp.jl","test_parse_mixed_splatting","mtsig","Tuple{}"
"test/nlp.jl","test_error_splatting_non_symbols","mtsig","Tuple{}"
"test/nlp.jl","test_error_on_begin_end","mtsig","Tuple{}"
"test/nlp.jl","test_error_on_unexpected_splatting","mtsig","Tuple{}"
"test/nlp.jl","test_error_on_getfield_in_expression","mtsig","Tuple{}"
"test/nlp.jl","test_error_on_sum","mtsig","Tuple{}"
"test/nlp.jl","test_error_on_non_scalar_expression","mtsig","Tuple{}"
"test/nlp.jl","_dense_hessian","mtsig","Tuple{Any, Any, Any}"
"test/nlp.jl","_dense_jacobian","mtsig","Tuple{Any, Any, Any, Any}"
"test/nlp.jl","test_hessian_evaluation_issue_435","mtsig","Tuple{}"
"test/nlp.jl","test_NaN_corner_case_issue_695","mtsig","Tuple{}"
"test/nlp.jl","test_NaN_corner_case_issue_1205","mtsig","Tuple{}"
"test/nlp.jl","test_NaN_corner_case_ifelse_issue_1205","mtsig","Tuple{}"
"test/nlp.jl","test_prod_corner_case_issue_1181","mtsig","Tuple{}"
"test/nlp.jl","test_constant_ifelse_issue_2115","mtsig","Tuple{}"
"test/nlp.jl","test_hessians_and_hessvec","mtsig","Tuple{}"
"test/nlp.jl","test_hessians_and_hessvec_with_subexpressions","mtsig","Tuple{}"
"test/nlp.jl","test_jacobians_and_jacvec","mtsig","Tuple{}"
"test/nlp.jl","test_jacobians_and_jacvec_with_subexpressions","mtsig","Tuple{}"
"test/nlp.jl","test_expression_graphs","mtsig","Tuple{}"
"test/nlp.jl","test_more_expression_graphs","mtsig","Tuple{}"
"test/nlp.jl","ψ","mtsig","Tuple{Any}"
"test/nlp.jl","t","mtsig","Tuple{Any, Any}"
"test/nlp.jl","test_expression_graph_for_ifelse","mtsig","Tuple{}"
"test/nlp.jl","test_expression_graph_for_empty_sum_and_prod","mtsig","Tuple{}"
"test/nlp.jl","test_NLparameter","mtsig","Tuple{}"
"test/nlp.jl","test_NLparameter_set_value","mtsig","Tuple{}"
"test/nlp.jl","test_NLconstraints","mtsig","Tuple{}"
"test/nlp.jl","test_dense_Hessian","mtsig","Tuple{}"
"test/nlp.jl","test_eval_objective_and_eval_objective_gradient","mtsig","Tuple{}"
"test/nlp.jl","ψ","mtsig","Tuple{Any}"
"test/nlp.jl","t","mtsig","Tuple{Any, Any}"
"test/nlp.jl","test_eval_constraint_and_jacobians","mtsig","Tuple{}"
"test/nlp.jl","ψ","mtsig","Tuple{Any}"
"test/nlp.jl","t","mtsig","Tuple{Any, Any}"
"test/nlp.jl","test_non_macro_nonlinear_functions","mtsig","Tuple{}"
"test/nlp.jl","test_views_on_Hessian_functions","mtsig","Tuple{}"
"test/nlp.jl","test_constant_expressions","mtsig","Tuple{}"
"test/nlp.jl","test_user_defined_function_with_variable_closure","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Any}"
"test/nlp.jl","test_user_defined_function_with_variable_closure_after_register","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Any}"
"test/nlp.jl","test_user_defined_function_returning_bad_type_after_register","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Any}"
"test/nlp.jl","test_user_defined_function_returning_bad_type","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Any}"
"test/nlp.jl","test_value_on_NonlinearExpressions","mtsig","Tuple{}"
"test/nlp.jl","test_hessians_disabled_with_user_defined_multivariate_functions","mtsig","Tuple{}"
"test/nlp.jl","my_f","mtsig","Tuple{Any, Any}"
"test/nlp.jl","test_AffExpr_in_nonlinear","mtsig","Tuple{}"
"test/nlp.jl","test_QuadExpr_in_nonlinear","mtsig","Tuple{}"
"test/nlp.jl","test_error_on_complex_values","mtsig","Tuple{}"
"test/nlp.jl","test_SpecialFunctions","mtsig","Tuple{}"
"test/nlp.jl","test_JuMP_extensions","mtsig","Tuple{}"
"test/nlp.jl","test_rad2deg_and_deg2rad","mtsig","Tuple{}"
"test/nlp.jl","test_reregister_univariate","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Any}"
"test/nlp.jl","test_reregister_multivariate","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Any, Any}"
"test/nlp.jl","test_univariate_NLconstraint_is_valid","mtsig","Tuple{}"
"test/nlp.jl","test_multivariate_NLconstraint_is_valid","mtsig","Tuple{}"
"test/nlp.jl","test_broadcast_error_NLexpression","mtsig","Tuple{}"
"test/nlp.jl","test_interval_errors","mtsig","Tuple{}"
"test/nlp.jl","test_dual_start_value","mtsig","Tuple{}"
"test/nlp.jl","test_user_defined_function_checked_error_univariate","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Any}"
"test/nlp.jl","test_user_defined_function_checked_error_univariate_other_error","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Any}"
"test/nlp.jl","test_user_defined_function_checked_error_univariate","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Any}"
"test/nlp.jl","∇f","mtsig","Tuple{Any}"
"test/nlp.jl","test_user_defined_function_checked_error_multivariate","mtsig","Tuple{}"
"test/nlp.jl","f","mtsig","Tuple{Vararg{Any}}"
"test/nlp_solver.jl","test_result","mtsig","Tuple{}"
"test/nlp_solver.jl","my_square","mtsig","Tuple{Any}"
"test/nlp_solver.jl","my_f","mtsig","Tuple{Any, Any}"
"test/nonnegative_bridge.jl","MOI.copy","mtsig","Tuple{Nonnegative}"
"test/nonnegative_bridge.jl","MOIBC.bridge_constraint","mtsig","(Tuple{Type{NonnegativeBridge{T, F}}, Any, F, Nonnegative} where F) where T"
"test/nonnegative_bridge.jl","MOI.supports_constraint","mtsig","Tuple{Type{NonnegativeBridge{T}}, Type{<:MOI.AbstractScalarFunction}, Type{Nonnegative}} where T"
"test/nonnegative_bridge.jl","MOIB.added_constrained_variable_types","mtsig","Tuple{Type{<:NonnegativeBridge}}"
"test/nonnegative_bridge.jl","MOIB.added_constraint_types","mtsig","(Tuple{Type{NonnegativeBridge{T, F}}} where F) where T"
"test/nonnegative_bridge.jl","MOIBC.concrete_bridge_type","mtsig","Tuple{Type{NonnegativeBridge{T}}, Type{<:MOI.AbstractScalarFunction}, Type{Nonnegative}} where T"
"test/nonnegative_bridge.jl","MOI.get","mtsig","(Tuple{NonnegativeBridge{T, F}, MOI.NumberOfConstraints{F, MOI.GreaterThan{T}}} where F) where T"
"test/nonnegative_bridge.jl","MOI.get","mtsig","(Tuple{NonnegativeBridge{T, F}, MOI.ListOfConstraintIndices{F, MOI.GreaterThan{T}}} where F) where T"
"test/nonnegative_bridge.jl","MOI.delete","mtsig","Tuple{MOI.ModelLike, NonnegativeBridge}"
"test/nonnegative_bridge.jl","MOI.get","mtsig","Tuple{MOI.ModelLike, Union{MOI.ConstraintPrimal, MOI.ConstraintDual}, NonnegativeBridge}"
"test/objective.jl","runtests","mtsig","Tuple{}"
"test/objective.jl","MOI.is_empty","mtsig","Tuple{DummyOptimizer}"
"test/objective.jl","test_unsupported_objective_function","mtsig","Tuple{}"
"test/objective.jl","test_unsupported_function_in_macro","mtsig","Tuple{}"
"test/objective.jl","objectives_test","mtsig","Tuple{Type{<:JuMP.AbstractModel}, Type{<:JuMP.AbstractVariableRef}}"
"test/objective.jl","objective_coeff_update_test","mtsig","Tuple{Type{<:JuMP.AbstractModel}, Type{<:JuMP.AbstractVariableRef}}"
"test/operator.jl","Base.copy","mtsig","Tuple{MyType}"
"test/operator.jl","Base.zero","mtsig","Tuple{Type{MyType{T}}} where T"
"test/operator.jl","Base.one","mtsig","Tuple{Type{MyType{T}}} where T"
"test/operator.jl","Base.zero","mtsig","Tuple{Type{MySumType{T}}} where T"
"test/operator.jl","Base.zero","mtsig","Tuple{MySumType{T}} where T"
"test/operator.jl","Base.transpose","mtsig","Tuple{MyType}"
"test/operator.jl","Base.transpose","mtsig","Tuple{MySumType}"
"test/operator.jl","LinearAlgebra.adjoint","mtsig","Tuple{Union{MyType, MySumType}}"
"test/operator.jl","+","mtsig","(Tuple{MyT, MyS} where MyS <: Union{MyType, MySumType}) where MyT <: Union{MyType, MySumType}"
"test/operator.jl","*","mtsig","(Tuple{MyType{S}, T} where T) where S"
"test/operator.jl","*","mtsig","(Tuple{S, MyType{T}} where T) where S"
"test/operator.jl","*","mtsig","(Tuple{MyType{S}, MyType{T}} where T) where S"
"test/operator.jl","JuMP.isequal_canonical","mtsig","Tuple{MySumType, MySumType}"
"test/operator.jl","JuMP.isequal_canonical","mtsig","Tuple{AbstractArray{<:MySumType}, AbstractArray{<:MySumType}}"
"test/operator.jl","test_promotion","mtsig","Tuple{Any, Any}"
"test/operator.jl","test_broadcast_division_error","mtsig","Tuple{Any, Any}"
"test/operator.jl","test_vectorized_comparisons","mtsig","Tuple{Any, Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/operator.jl","test_custom_dimension_mismatch","mtsig","Tuple{Any, Any}"
"test/operator.jl","test_matrix_multiplication","mtsig","Tuple{Any, Any}"
"test/operator.jl","test_operator_warn","mtsig","Tuple{Any, Any}"
"test/operator.jl","test_uniform_scaling","mtsig","Tuple{Any, Any}"
"test/operator.jl","test_basic_operators","mtsig","Tuple{Any, Any}"
"test/operator.jl","test_basic_operators_number","mtsig","Tuple{Any, Any}"
"test/operator.jl","test_basic_operators_variable","mtsig","Tuple{Any, Any}"
"test/operator.jl","test_basic_operators_affexpr","mtsig","Tuple{Any, Any}"
"test/operator.jl","test_basic_operators_quadexpr","mtsig","Tuple{Any, Any}"
"test/operator.jl","test_dot","mtsig","Tuple{Any, Any}"
"test/operator.jl","test_higher_level","mtsig","Tuple{Any, Any}"
"test/operator.jl","runtests","mtsig","Tuple{}"
"test/print.jl","runtests","mtsig","Tuple{}"
"test/print.jl","_io_test_show","mtsig","Tuple{MIME\"text/plain\", Any, Any}"
"test/print.jl","_io_test_show","mtsig","Tuple{MIME\"text/latex\", Any, Any}"
"test/print.jl","_io_test_print","mtsig","Tuple{MIME\"text/plain\", Any, Any}"
"test/print.jl","_io_test_print","mtsig","Tuple{MIME\"text/latex\", Any, Any}"
"test/print.jl","_io_test_print","mtsig","Tuple{MIME\"text/plain\", AbstractModel, Any}"
"test/print.jl","_io_test_print","mtsig","Tuple{MIME\"text/latex\", AbstractModel, Any}"
"test/print.jl","<NA-name>","mtsig","Tuple{Any}"
"test/print.jl","io_test","mtsig","Tuple{Any, Any, Any, Any}"
"test/print.jl","Base.zero","mtsig","Tuple{Union{UnitNumber, Type{UnitNumber}}}"
"test/print.jl","Base.oneunit","mtsig","Tuple{Union{UnitNumber, Type{UnitNumber}}}"
"test/print.jl","Base.:+","mtsig","Tuple{UnitNumber, UnitNumber}"
"test/print.jl","Base.:-","mtsig","Tuple{UnitNumber, UnitNumber}"
"test/print.jl","Base.:*","mtsig","Tuple{Float64, UnitNumber}"
"test/print.jl","Base.abs","mtsig","Tuple{UnitNumber}"
"test/print.jl","Base.isless","mtsig","Tuple{UnitNumber, UnitNumber}"
"test/print.jl","JuMP.function_string","mtsig","Tuple{Any, CustomConstraint}"
"test/print.jl","JuMP.in_set_string","mtsig","Tuple{Any, CustomConstraint}"
"test/print.jl","JuMP.add_constraint","mtsig","Tuple{JuMP.Model, CustomConstraint, String}"
"test/print.jl","JuMP.constraint_object","mtsig","Tuple{JuMP.ConstraintRef{JuMP.Model, CustomIndex}}"
"test/print.jl","JuMP.name","mtsig","Tuple{JuMP.ConstraintRef{JuMP.Model, CustomIndex}}"
"test/print.jl","test_printing_expressions","mtsig","Tuple{}"
"test/print.jl","test_printing_expression_unit_coefficient_type","mtsig","Tuple{}"
"test/print.jl","test_nonlinear_expressions","mtsig","Tuple{}"
"test/print.jl","test_nonlinear_parameters","mtsig","Tuple{}"
"test/print.jl","test_registered_nonlinear_parameters","mtsig","Tuple{}"
"test/print.jl","test_printing_NLPEvaluator","mtsig","Tuple{}"
"test/print.jl","test_nonlinear_constraints","mtsig","Tuple{}"
"test/print.jl","test_nonlinear_constraint_with_anon_param_and_subexpression","mtsig","Tuple{}"
"test/print.jl","test_nonlinear_constraint_with_named_param_and_subexpression","mtsig","Tuple{}"
"test/print.jl","test_printing_custom_constraint","mtsig","Tuple{}"
"test/print.jl","test_constraint","mtsig","Tuple{Any, Any, Any}"
"test/print.jl","_test_printing","mtsig","Tuple{Type{<:JuMP.AbstractModel}}"
"test/print.jl","test_printing_Model","mtsig","Tuple{}"
"test/print.jl","test_printing_MyModel","mtsig","Tuple{}"
"test/print.jl","test_model_printing","mtsig","Tuple{}"
"test/print.jl","repl","mtsig","Tuple{Any}"
"test/print.jl","test_model_extension_printing","mtsig","Tuple{}"
"test/print.jl","repl","mtsig","Tuple{Any}"
"test/print.jl","test_printing_model_with_nonlinear","mtsig","Tuple{}"
"test/print.jl","test_SingleVariable_constraints","mtsig","Tuple{}"
"test/print.jl","test_latex_feasibility","mtsig","Tuple{}"
"test/print.jl","test_latex_min","mtsig","Tuple{}"
"test/print.jl","test_print_IJulia_with_math_operators","mtsig","Tuple{}"
"test/runtests.jl","<NA-name>","mtsig","Tuple{Any}"
"test/solution_summary.jl","runtests","mtsig","Tuple{}"
"test/solution_summary.jl","test_empty_model","mtsig","Tuple{}"
"test/solution_summary.jl","test_solution_summary","mtsig","Tuple{}"
"test/solution_summary.jl","<NA-name>","mtsig","Tuple{}"
"test/solution_summary.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/utilities.jl","_strip_line_from_error","mtsig","Tuple{ErrorException}"
"test/utilities.jl","_strip_line_from_error","mtsig","Tuple{LoadError}"
"test/utilities.jl","_strip_line_from_error","mtsig","Tuple{Any}"
"test/variable.jl","_test_variable_name_util","mtsig","Tuple{Any, Any}"
"test/variable.jl","_sliceof_util","mtsig","Tuple{Any, Any, Any, Any, Any}"
"test/variable.jl","test_variable_no_bound","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_lower_bound_rhs","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_lower_bound_lhs","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_upper_bound_rhs","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_upper_bound_lhs","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_interval","mtsig","Tuple{Any, Any}"
"test/variable.jl","has_bounds","mtsig","Tuple{Any, Any, Any}"
"test/variable.jl","test_variable_fix","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_custom_index_sets","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_anonymous","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_is_valid_delete","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_bounds_set_get","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_starts_set_get","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_integrality_set_get","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_repeated_elements","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_oneto_index_set","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_base_name_in_macro","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_name","mtsig","Tuple{Any, Any}"
"test/variable.jl","err","mtsig","Tuple{Any}"
"test/variable.jl","test_variable_condition_in_indexing","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_one_dim","mtsig","Tuple{Any}"
"test/variable.jl","test_two_dim","mtsig","Tuple{Any}"
"test/variable.jl","test_variable_macro_return_type","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_start_value_on_empty","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_denseaxisarray_slices","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_end_indexing","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_unsigned_index","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_symmetric","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variable_skewsymmetric","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_variables_constrained_on_creation","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_batch_delete_variables","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_Model_all_variable","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_Model_macro_variables","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_Model_dual_variable","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_Model_value_containers","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_Model_get_variable_coefficient","mtsig","Tuple{Any, Any}"
"test/variable.jl","_mock_reduced_cost_util","mtsig","Tuple{OptimizationSense, Float64, Symbol, Any, Bool}"
"test/variable.jl","test_Model_reduced_cost","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_Model_value","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_Model_value_var","mtsig","Tuple{Any, Any}"
"test/variable.jl","<NA-name>","mtsig","Tuple{Any}"
"test/variable.jl","test_Model_relax_integrality","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_Model_relax_integrality_error_cases","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_unknown_size_dense","mtsig","Tuple{Any, Any}"
"test/variable.jl","<NA-name>","mtsig","Tuple{Any}"
"test/variable.jl","test_unknown_size_sparse","mtsig","Tuple{Any, Any}"
"test/variable.jl","<NA-name>","mtsig","Tuple{Any}"
"test/variable.jl","test_start_value","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_Model_inf_lower_bound","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_Model_inf_upper_bound","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_Model_inf_fixed","mtsig","Tuple{Any, Any}"
"test/variable.jl","MOI.add_variable","mtsig","Tuple{_UnsupportedVariableName}"
"test/variable.jl","MOI.is_empty","mtsig","Tuple{_UnsupportedVariableName}"
"test/variable.jl","test_Model_unsupported_VariableName","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_Model_error_messages","mtsig","Tuple{Any, Any}"
"test/variable.jl","f","mtsig","Tuple{Any}"
"test/variable.jl","test_rational_inf_bounds","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_Model_ConstraintRef","mtsig","Tuple{Any, Any}"
"test/variable.jl","test_start_value_nothing","mtsig","Tuple{Any, Any}"
"test/variable.jl","runtests","mtsig","Tuple{}"
"test/Containers/Containers.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/DenseAxisArray.jl","plus1","mtsig","Tuple{Any}"
"test/Containers/DenseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/DenseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/DenseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/DenseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/DenseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/DenseAxisArray.jl","plus1","mtsig","Tuple{Any}"
"test/Containers/DenseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/DenseAxisArray.jl","foo","mtsig","Tuple{Any, Any}"
"test/Containers/DenseAxisArray.jl","foo_b","mtsig","Tuple{Any, Any}"
"test/Containers/DenseAxisArray.jl","bar","mtsig","Tuple{Any, Any}"
"test/Containers/DenseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/DenseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/SparseAxisArray.jl","sparse_test","mtsig","Tuple{Any, Any, Any, Any, Any, Any}"
"test/Containers/SparseAxisArray.jl","sqr","mtsig","Tuple{Any}"
"test/Containers/SparseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/SparseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/SparseAxisArray.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/SparseAxisArray.jl","f","mtsig","Tuple{Any}"
"test/Containers/SparseAxisArray.jl","g","mtsig","Tuple{Any, Any}"
"test/Containers/SparseAxisArray.jl","f","mtsig","Tuple{Any}"
"test/Containers/macro.jl","Containers.container","mtsig","Tuple{Function, Any, Type{_MyContainer}}"
"test/Containers/macro.jl","key","mtsig","Tuple{Tuple}"
"test/Containers/macro.jl","key","mtsig","Tuple{Tuple{T}} where T"
"test/Containers/nested_iterator.jl","<NA-name>","mtsig","Tuple{}"
"test/Containers/nested_iterator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/nested_iterator.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/Containers/nested_iterator.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/Containers/nested_iterator.jl","<NA-name>","mtsig","Tuple{}"
"test/Containers/nested_iterator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/Containers/no_duplicate_dict.jl","f","mtsig","Tuple{Any}"
"test/Containers/no_duplicate_dict.jl","f","mtsig","Tuple{Any}"
"test/Containers/vectorized_product_iterator.jl","<NA-name>","mtsig","Tuple{Any}"
"test/perf/JuMPBenchmarks.jl","benchmark","mtsig","Tuple{String, Bool, String, String, Vararg{Any}}"
"test/perf/JuMPBenchmarks.jl","run_microbenchmark","mtsig","Tuple{Int}"
"test/perf/JuMPBenchmarks.jl","run_examples","mtsig","Tuple{Any}"
"test/perf/JuMPBenchmarks.jl","<NA-name>","mtsig","Tuple{}"
"test/perf/JuMPBenchmarks.jl","<NA-name>","mtsig","Tuple{}"
"test/perf/JuMPBenchmarks.jl","_matrix_affine_product","mtsig","Tuple{Int}"
"test/perf/JuMPBenchmarks.jl","_matrix_quadratic_product","mtsig","Tuple{Int}"
"test/perf/JuMPBenchmarks.jl","\$new_name","mtsig","Tuple{}"
"test/perf/JuMPBenchmarks.jl","_vector_sum","mtsig","Tuple{Int}"
"test/perf/JuMPBenchmarks.jl","_vector_dot","mtsig","Tuple{Int}"
"test/perf/JuMPBenchmarks.jl","_matrix_sum","mtsig","Tuple{Int}"
"test/perf/JuMPBenchmarks.jl","_matrix_dot","mtsig","Tuple{Int}"
"test/perf/JuMPBenchmarks.jl","_array_sum","mtsig","Tuple{Int}"
"test/perf/JuMPBenchmarks.jl","_array_dot","mtsig","Tuple{Int}"
"test/perf/JuMPBenchmarks.jl","\$new_name","mtsig","Tuple{}"
"test/perf/JuMPBenchmarks.jl","_macro_linear","mtsig","Tuple{Int}"
"test/perf/JuMPBenchmarks.jl","_macro_quad","mtsig","Tuple{Int}"
"test/perf/JuMPBenchmarks.jl","\$new_name","mtsig","Tuple{}"
"test/perf/JuMPBenchmarks.jl","benchmark_print_AffExpr","mtsig","Tuple{}"
"test/perf/JuMPBenchmarks.jl","benchmark_print_model","mtsig","Tuple{}"
"test/perf/JuMPBenchmarks.jl","benchmark_print_model_10000","mtsig","Tuple{}"
"test/perf/JuMPBenchmarks.jl","benchmark_print_small_model","mtsig","Tuple{}"
"test/perf/JuMPBenchmarks.jl","_sum_iterate","mtsig","Tuple{Any}"
"test/perf/JuMPBenchmarks.jl","_sum_index","mtsig","Tuple{Any}"
"test/perf/JuMPBenchmarks.jl","_dense_axis_constraints","mtsig","Tuple{Any}"
"test/perf/JuMPBenchmarks.jl","<NA-name>","mtsig","Tuple{Any}"
"test/perf/JuMPBenchmarks.jl","_sparse_axis_constraints","mtsig","Tuple{Any}"
"test/perf/JuMPBenchmarks.jl","<NA-name>","mtsig","Tuple{Any}"
"test/perf/JuMPBenchmarks.jl","\$new_name","mtsig","Tuple{}"
"test/perf/JuMPBenchmarks.jl","benchmark_p_median","mtsig","Tuple{Any, Any, Any}"
"test/perf/JuMPBenchmarks.jl","benchmark_cont5","mtsig","Tuple{Any}"
"test/perf/JuMPBenchmarks.jl","_print_help","mtsig","Tuple{}"
"test/perf/JuMPBenchmarks.jl","_run","mtsig","Tuple{Any, Any}"
"test/perf/JuMPBenchmarks.jl","<NA-name>","mtsig","Tuple{Any}"
"test/perf/JuMPBenchmarks.jl","<NA-name>","mtsig","Tuple{Any}"
"test/perf/JuMPBenchmarks.jl","<NA-name>","mtsig","Tuple{Any}"
