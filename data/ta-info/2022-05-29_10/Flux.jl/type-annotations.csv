File,Function,Kind,TypeAnnotation
"perf/bench_utils.jl","fw","mtsig","Tuple{Any, Any}"
"perf/bench_utils.jl","bw","mtsig","Tuple{Any}"
"perf/bench_utils.jl","fwbw","mtsig","Tuple{Any, Any, Any}"
"perf/bench_utils.jl","<NA-name>","mtsig","Tuple{}"
"perf/bench_utils.jl","pb","mtsig","Tuple{Any, Any, Any}"
"perf/bench_utils.jl","<NA-name>","mtsig","Tuple{}"
"perf/bench_utils.jl","run_benchmark","mtsig","Tuple{Any, Any, Any}"
"perf/recurrent.jl","fw","mtsig","Tuple{RNNWrapper, Vector{<:AbstractArray}}"
"perf/recurrent.jl","fw","mtsig","Tuple{RNNWrapper, Any}"
"perf/recurrent.jl","fwbw","mtsig","Tuple{RNNWrapper, Any, Vector{<:AbstractArray}}"
"perf/recurrent.jl","<NA-name>","mtsig","Tuple{}"
"perf/recurrent.jl","pb","mtsig","Tuple{RNNWrapper, Any, Vector{<:AbstractArray}}"
"perf/recurrent.jl","<NA-name>","mtsig","Tuple{}"
"perf/recurrent.jl","rnn_benchmark_sweep","mtsig","Tuple{Function, Any}"
"perf/recurrent.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"perf/recurrent.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"perf/vgg.jl","vgg16","mtsig","Tuple{}"
"src/deprecations.jl","ones","mtsig","Tuple{Vararg{Any}}"
"src/deprecations.jl","ones","mtsig","Tuple{Type, Vararg{Any}}"
"src/deprecations.jl","zeros","mtsig","Tuple{Vararg{Any}}"
"src/deprecations.jl","zeros","mtsig","Tuple{Type, Vararg{Any}}"
"src/deprecations.jl","ones32","mtsig","Tuple{Type, Vararg{Any}}"
"src/deprecations.jl","zeros32","mtsig","Tuple{Type, Vararg{Any}}"
"src/deprecations.jl","Broadcast.broadcasted","mtsig","Tuple{Recur, Vararg{Any}}"
"src/deprecations.jl","Zeros","mtsig","Tuple{}"
"src/deprecations.jl","Zeros","mtsig","Tuple{}"
"src/deprecations.jl","Zeros","mtsig","Tuple{Vararg{Any}}"
"src/deprecations.jl","Optimise.update!","mtsig","Tuple{AbstractArray, Any}"
"src/deprecations.jl","Diagonal","mtsig","Tuple{Vararg{Integer}, Vararg{Any}}"
"src/deprecations.jl","Diagonal","mtsig","Tuple{Tuple, Vararg{Any}}"
"src/deprecations.jl","loadparams!","mtsig","Tuple{Any, Any}"
"src/deprecations.jl","Dense","mtsig","Tuple{Integer, Integer, Any, Vararg{Any}}"
"src/deprecations.jl","Bilinear","mtsig","Tuple{Integer, Integer, Integer, Any, Vararg{Any}}"
"src/deprecations.jl","Embedding","mtsig","Tuple{Integer, Integer, Vararg{Any}}"
"src/deprecations.jl","RNNCell","mtsig","Tuple{Integer, Integer, Any, Vararg{Any}}"
"src/deprecations.jl","LSTMCell","mtsig","Tuple{Integer, Integer, Vararg{Any}}"
"src/deprecations.jl","GRUCell","mtsig","Tuple{Integer, Integer, Vararg{Any}}"
"src/deprecations.jl","GRUv3Cell","mtsig","Tuple{Integer, Integer, Vararg{Any}}"
"src/functor.jl","testmode!","mtsig","Tuple{Any, Any}"
"src/functor.jl","<NA-name>","mtsig","Tuple{Any}"
"src/functor.jl","trainmode!","mtsig","Tuple{Any, Any}"
"src/functor.jl","params!","mtsig","Tuple{Params, AbstractArray{<:Number}, Any}"
"src/functor.jl","params!","mtsig","Tuple{Params, Any, Any}"
"src/functor.jl","params","mtsig","Tuple{Vararg{Any}}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCUDAAdaptor, Any}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCUDAAdaptor, Zygote.FillArrays.AbstractFill}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCUDAAdaptor, Random.TaskLocalRNG}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCUDAAdaptor, Random.TaskLocalRNG}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCUDAAdaptor, Random._GLOBAL_RNG}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCUDAAdaptor, Random._GLOBAL_RNG}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCUDAAdaptor, CUDA.RNG}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCUDAAdaptor, AbstractRNG}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCUDAAdaptor, Zygote.OneElement}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCPUAdaptor, AbstractArray}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCPUAdaptor, AbstractRange}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCPUAdaptor, Zygote.FillArrays.AbstractFill}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCPUAdaptor, T} where T <: CUDA.CUSPARSE.CUDA.CUSPARSE.AbstractCuSparseMatrix"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCPUAdaptor, Zygote.OneElement}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCPUAdaptor, AbstractSparseArray}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCPUAdaptor, CUDA.RNG}"
"src/functor.jl","adapt_storage","mtsig","Tuple{FluxCPUAdaptor, AbstractRNG}"
"src/functor.jl","ChainRulesCore.rrule","mtsig","Tuple{typeof(Array), CUDA.CuArray}"
"src/functor.jl","<NA-name>","mtsig","Tuple{Any}"
"src/functor.jl","ChainRulesCore.rrule","mtsig","Tuple{typeof(Adapt.adapt_storage), FluxCPUAdaptor, CUDA.AbstractGPUArray}"
"src/functor.jl","<NA-name>","mtsig","Tuple{Any}"
"src/functor.jl","cpu","mtsig","Tuple{Any}"
"src/functor.jl","<NA-name>","mtsig","Tuple{Any}"
"src/functor.jl","_isbitsarray","mtsig","Tuple{AbstractArray{<:Number}}"
"src/functor.jl","_isbitsarray","mtsig","Tuple{AbstractArray{T}} where T"
"src/functor.jl","_isbitsarray","mtsig","Tuple{Any}"
"src/functor.jl","_isleaf","mtsig","Tuple{AbstractRNG}"
"src/functor.jl","_isleaf","mtsig","Tuple{Any}"
"src/functor.jl","gpu","mtsig","Tuple{Any}"
"src/functor.jl","<NA-name>","mtsig","Tuple{Any}"
"src/functor.jl","check_use_cuda","mtsig","Tuple{}"
"src/functor.jl","adapt_storage","mtsig","Tuple{Type{<:Real}, AbstractArray{<:Real}}"
"src/functor.jl","paramtype","mtsig","Tuple{Type{<:Real}, Any}"
"src/functor.jl","<NA-name>","mtsig","Tuple{Any}"
"src/functor.jl","f32","mtsig","Tuple{Any}"
"src/functor.jl","f64","mtsig","Tuple{Any}"
"src/functor.jl","trainable","mtsig","Tuple{Cholesky}"
"src/loading.jl","loadleaf!","mtsig","Tuple{Any, Any, Any}"
"src/loading.jl","loadleaf!","mtsig","Tuple{AbstractArray, Any, Any}"
"src/loading.jl","loadleaf!","mtsig","Tuple{Any, AbstractArray, Any}"
"src/loading.jl","loadleaf!","mtsig","Tuple{AbstractArray, Bool, Any}"
"src/loading.jl","loadleaf!","mtsig","Tuple{Bool, AbstractArray, Any}"
"src/loading.jl","loadleaf!","mtsig","Tuple{AbstractArray, AbstractArray, Any}"
"src/loading.jl","_tie_check","mtsig","Tuple{Bool, AbstractArray}"
"src/loading.jl","_tie_check","mtsig","Tuple{AbstractArray, Bool}"
"src/loading.jl","_tie_check","mtsig","Tuple{AbstractArray, AbstractArray}"
"src/loading.jl","_tie_check","mtsig","Tuple{Any, Any}"
"src/loading.jl","_bool_tie_check","mtsig","Tuple{Any, Any}"
"src/loading.jl","loadmodel!","mtsig","Tuple{Any, Any, Any}"
"src/loading.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"src/onehot.jl","OneHotArray","mtsig","(((Tuple{Any} where I) where N) where L) where T"
"src/onehot.jl","OneHotArray","mtsig","Tuple{T, Integer} where T <: Integer"
"src/onehot.jl","OneHotArray","mtsig","((Tuple{I, Integer} where I <: AbstractArray{T, N}) where N) where T"
"src/onehot.jl","_indices","mtsig","Tuple{OneHotArray}"
"src/onehot.jl","_indices","mtsig","Tuple{Base.ReshapedArray{<:Any, <:Any, <:OneHotArray}}"
"src/onehot.jl","OneHotVector","mtsig","Tuple{Any, Any}"
"src/onehot.jl","OneHotMatrix","mtsig","Tuple{Any, Any}"
"src/onehot.jl","_isonehot","mtsig","Tuple{OneHotArray}"
"src/onehot.jl","_isonehot","mtsig","Tuple{Base.ReshapedArray{<:Any, <:Any, <:OneHotArray{<:Any, L}}} where L"
"src/onehot.jl","Base.size","mtsig","Tuple{OneHotArray{<:Any, L}} where L"
"src/onehot.jl","_onehotindex","mtsig","Tuple{Any, Any}"
"src/onehot.jl","Base.getindex","mtsig","Tuple{OneHotVector, Integer}"
"src/onehot.jl","Base.getindex","mtsig","(Tuple{OneHotVector{T, L}, Colon} where L) where T"
"src/onehot.jl","Base.getindex","mtsig","Tuple{OneHotArray, Integer, Vararg{Any}}"
"src/onehot.jl","Base.getindex","mtsig","Tuple{OneHotArray{<:Any, L}, Colon, Vararg{Any}} where L"
"src/onehot.jl","Base.getindex","mtsig","Tuple{OneHotArray{<:Any, <:Any, <:Any, N}, Vararg{Colon, N}} where N"
"src/onehot.jl","Base.getindex","mtsig","Tuple{OneHotArray, CartesianIndex{N}} where N"
"src/onehot.jl","Base.showarg","mtsig","Tuple{IO, OneHotArray, Any}"
"src/onehot.jl","Base.replace_in_print_matrix","mtsig","Tuple{OneHotLike, Integer, Integer, AbstractString}"
"src/onehot.jl","Base.print_array","mtsig","(((Tuple{IO, OneHotLike{T, L, N, var\"N+1\", <:CuArray}} where var\"N+1\") where N) where L) where T"
"src/onehot.jl","Base.print_array","mtsig","(((Tuple{IO, LinearAlgebra.AdjOrTrans{Bool, <:OneHotLike{T, L, N, var\"N+1\", <:CuArray}}} where var\"N+1\") where N) where L) where T"
"src/onehot.jl","_onehot_bool_type","mtsig","Tuple{OneHotLike{<:Any, <:Any, <:Any, N, <:Union{Integer, AbstractArray}}} where N"
"src/onehot.jl","_onehot_bool_type","mtsig","Tuple{OneHotLike{<:Any, <:Any, <:Any, N, <:CuArray}} where N"
"src/onehot.jl","Base.cat","mtsig","Tuple{OneHotLike{<:Any, L}, Vararg{OneHotLike{<:Any, L}}, Int} where L"
"src/onehot.jl","<NA-name>","mtsig","Tuple{Any}"
"src/onehot.jl","<NA-name>","mtsig","Tuple{Any}"
"src/onehot.jl","Base.hcat","mtsig","Tuple{OneHotLike, Vararg{OneHotLike}}"
"src/onehot.jl","Base.vcat","mtsig","Tuple{OneHotLike, Vararg{OneHotLike}}"
"src/onehot.jl","Base.hcat","mtsig","(Tuple{T, Vararg{T}} where T <: OneHotLike{<:Any, L, <:Any, 2}) where L"
"src/onehot.jl","Base.hcat","mtsig","(Tuple{T, Vararg{T}} where T <: OneHotLike{<:Any, L, <:Any, 1}) where L"
"src/onehot.jl","MLUtils.batch","mtsig","Tuple{AbstractArray{<:OneHotVector{<:Any, L}}} where L"
"src/onehot.jl","Adapt.adapt_structure","mtsig","Tuple{Any, OneHotArray{<:Any, L}} where L"
"src/onehot.jl","Base.BroadcastStyle","mtsig","Tuple{Type{<:OneHotArray{<:Any, <:Any, <:Any, N, <:CuArray}}} where N"
"src/onehot.jl","Base.map","mtsig","Tuple{Any, OneHotLike}"
"src/onehot.jl","Base.argmax","mtsig","Tuple{OneHotLike, Any}"
"src/onehot.jl","onehot","mtsig","Tuple{Any, Any}"
"src/onehot.jl","onehot","mtsig","Tuple{Any, Any, Any}"
"src/onehot.jl","_findval","mtsig","Tuple{Any, Any}"
"src/onehot.jl","_findval","mtsig","Tuple{Any, Tuple, Integer}"
"src/onehot.jl","_findval","mtsig","Tuple{Any, Tuple{}, Integer}"
"src/onehot.jl","onehotbatch","mtsig","Tuple{Any, Any, Vararg{Any}}"
"src/onehot.jl","_onehotbatch","mtsig","Tuple{CuArray, Any}"
"src/onehot.jl","_onehotbatch","mtsig","Tuple{Any, Any}"
"src/onehot.jl","_onehotbatch","mtsig","Tuple{Any, Any, Any}"
"src/onehot.jl","onecold","mtsig","Tuple{AbstractVector, Any}"
"src/onehot.jl","onecold","mtsig","Tuple{AbstractArray, Any}"
"src/onehot.jl","<NA-name>","mtsig","Tuple{Any}"
"src/onehot.jl","_fast_argmax","mtsig","Tuple{AbstractArray}"
"src/onehot.jl","_fast_argmax","mtsig","Tuple{OneHotLike}"
"src/onehot.jl","Base.:*","mtsig","Tuple{AbstractMatrix, OneHotLike{<:Any, L}} where L"
"src/onehot.jl","Base.:*","mtsig","Tuple{AbstractMatrix, OneHotLike{<:Any, L, 1}} where L"
"src/onehot.jl","Base.:*","mtsig","Tuple{AbstractMatrix, Adjoint{Bool, <:OneHotMatrix}}"
"src/onehot.jl","Base.:*","mtsig","(Tuple{(\$wrapper){<:Any, <:AbstractMatrix{T}}, OneHotVector{<:Any, L}} where T) where L"
"src/onehot.jl","Base.:*","mtsig","(Tuple{(\$wrapper){<:Number, <:AbstractVector{T}}, OneHotVector{<:Any, L}} where T) where L"
"src/outputsize.jl","Nil","mtsig","Tuple{T} where T <: Number"
"src/outputsize.jl","::Type{T}","mtsig","Tuple{Nil} where T <: Number"
"src/outputsize.jl","Base.convert","mtsig","Tuple{Type{Nil}, Number}"
"src/outputsize.jl","Base.float","mtsig","Tuple{Type{Nil}}"
"src/outputsize.jl","Base.:(\$f)","mtsig","Tuple{Nil}"
"src/outputsize.jl","Base.:(\$f)","mtsig","Tuple{Nil, Nil}"
"src/outputsize.jl","Base.:<","mtsig","Tuple{Nil, Nil}"
"src/outputsize.jl","Base.:<=","mtsig","Tuple{Nil, Nil}"
"src/outputsize.jl","Base.isnan","mtsig","Tuple{Nil}"
"src/outputsize.jl","Base.isfinite","mtsig","Tuple{Nil}"
"src/outputsize.jl","Base.typemin","mtsig","Tuple{Type{Nil}}"
"src/outputsize.jl","Base.typemax","mtsig","Tuple{Type{Nil}}"
"src/outputsize.jl","Base.promote_rule","mtsig","Tuple{Type{Nil}, Type{<:Number}}"
"src/outputsize.jl","Random.rand","mtsig","Tuple{Random.AbstractRNG, Random.SamplerType{Nil}}"
"src/outputsize.jl","outputsize","mtsig","Tuple{Any, Vararg{Tuple}, Any}"
"src/outputsize.jl","nil_input","mtsig","Tuple{Bool, Tuple{Vararg{Integer}}}"
"src/outputsize.jl","nil_input","mtsig","Tuple{Bool, Vararg{Tuple{Vararg{Integer}}}}"
"src/outputsize.jl","nil_input","mtsig","Tuple{Bool, Tuple{Vararg{Tuple}}}"
"src/outputsize.jl","outputsize","mtsig","Tuple{Chain, Vararg{Tuple{Vararg{Integer}}}, Any}"
"src/outputsize.jl","outputsize","mtsig","Tuple{Tuple, Vararg{Tuple}, Any}"
"src/outputsize.jl","outputsize","mtsig","Tuple{AbstractVector, Vararg{Tuple}, Any}"
"src/outputsize.jl","l::\$layer","mtsig","Tuple{AbstractArray{Nil}}"
"src/outputsize.jl","NNlib.:(\$fn)","mtsig","Tuple{AbstractArray{Nil}, AbstractArray{Nil}, \$Dims}"
"src/outputsize.jl","NNlib.:(\$fn)","mtsig","Tuple{AbstractArray{<:Real}, AbstractArray{Nil}, \$Dims}"
"src/outputsize.jl","NNlib.:(\$fn)","mtsig","Tuple{AbstractArray{Nil}, AbstractArray{<:Real}, \$Dims}"
"src/utils.jl","nfan","mtsig","Tuple{}"
"src/utils.jl","nfan","mtsig","Tuple{Any}"
"src/utils.jl","nfan","mtsig","Tuple{Any, Any}"
"src/utils.jl","nfan","mtsig","Tuple{Tuple}"
"src/utils.jl","nfan","mtsig","Tuple{Vararg{Any}}"
"src/utils.jl","ofeltype","mtsig","Tuple{Any, Any}"
"src/utils.jl","epseltype","mtsig","Tuple{Any}"
"src/utils.jl","rng_from_array","mtsig","Tuple{AbstractArray}"
"src/utils.jl","rng_from_array","mtsig","Tuple{CuArray}"
"src/utils.jl","rng_from_array","mtsig","Tuple{}"
"src/utils.jl","rng_from_array","mtsig","Tuple{}"
"src/utils.jl","rng_from_array","mtsig","Tuple{}"
"src/utils.jl","rng_from_array","mtsig","Tuple{}"
"src/utils.jl","glorot_uniform","mtsig","Tuple{AbstractRNG, Vararg{Integer}, Real}"
"src/utils.jl","glorot_uniform","mtsig","Tuple{Vararg{Integer}, Vararg{Any}}"
"src/utils.jl","glorot_uniform","mtsig","Tuple{AbstractRNG, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","glorot_normal","mtsig","Tuple{AbstractRNG, Vararg{Integer}, Real}"
"src/utils.jl","glorot_normal","mtsig","Tuple{Vararg{Integer}, Vararg{Any}}"
"src/utils.jl","glorot_normal","mtsig","Tuple{AbstractRNG, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","kaiming_uniform","mtsig","Tuple{AbstractRNG, Vararg{Integer}, Real}"
"src/utils.jl","kaiming_uniform","mtsig","Tuple{Vararg{Integer}, Vararg{Any}}"
"src/utils.jl","kaiming_uniform","mtsig","Tuple{AbstractRNG, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","kaiming_normal","mtsig","Tuple{AbstractRNG, Vararg{Integer}, Real}"
"src/utils.jl","kaiming_normal","mtsig","Tuple{Vararg{Integer}, Vararg{Any}}"
"src/utils.jl","kaiming_normal","mtsig","Tuple{AbstractRNG, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","truncated_normal","mtsig","Tuple{AbstractRNG, Vararg{Integer}, Any, Any, Any, Any}"
"src/utils.jl","norm_cdf","mtsig","Tuple{Any}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"src/utils.jl","truncated_normal","mtsig","Tuple{Vararg{Integer}, Vararg{Any}}"
"src/utils.jl","truncated_normal","mtsig","Tuple{AbstractRNG, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","orthogonal","mtsig","Tuple{AbstractRNG, Integer, Integer, Real}"
"src/utils.jl","orthogonal","mtsig","Tuple{AbstractRNG, Integer, Vararg{Integer}, Vararg{Any}}"
"src/utils.jl","orthogonal","mtsig","Tuple{Vararg{Integer}, Vararg{Any}}"
"src/utils.jl","orthogonal","mtsig","Tuple{AbstractRNG, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Integer}, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Integer}, Vararg{Any}}"
"src/utils.jl","sparse_init","mtsig","Tuple{AbstractRNG, Vararg{Integer}, Any, Any}"
"src/utils.jl","sparse_init","mtsig","Tuple{Vararg{Integer}, Vararg{Any}}"
"src/utils.jl","sparse_init","mtsig","Tuple{AbstractRNG, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","identity_init","mtsig","Tuple{Integer, Real, Any}"
"src/utils.jl","identity_init","mtsig","Tuple{Integer, Integer, Real, Any}"
"src/utils.jl","identity_init","mtsig","Tuple{Vararg{Integer}, Real, Any}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"src/utils.jl","identity_init","mtsig","Tuple{AbstractRNG, Vararg{Integer}, Vararg{Any}}"
"src/utils.jl","identity_init","mtsig","Tuple{AbstractRNG, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","ones32","mtsig","Tuple{Vararg{Integer}}"
"src/utils.jl","zeros32","mtsig","Tuple{Vararg{Integer}}"
"src/utils.jl","ones32","mtsig","Tuple{Vararg{Any}}"
"src/utils.jl","zeros32","mtsig","Tuple{Vararg{Any}}"
"src/utils.jl","rand32","mtsig","Tuple{Vararg{Integer}}"
"src/utils.jl","rand32","mtsig","Tuple{AbstractRNG, Vararg{Integer}}"
"src/utils.jl","rand32","mtsig","Tuple{AbstractRNG}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}}"
"src/utils.jl","randn32","mtsig","Tuple{Vararg{Integer}}"
"src/utils.jl","randn32","mtsig","Tuple{AbstractRNG, Vararg{Integer}}"
"src/utils.jl","randn32","mtsig","Tuple{AbstractRNG}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}}"
"src/utils.jl","create_bias","mtsig","Tuple{AbstractArray, Bool, Vararg{Integer}}"
"src/utils.jl","create_bias","mtsig","Tuple{AbstractArray, AbstractArray, Vararg{Integer}}"
"src/utils.jl","throttle","mtsig","Tuple{Any, Any, Any, Any}"
"src/utils.jl","throttled","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{}"
"src/utils.jl","<NA-name>","mtsig","Tuple{}"
"src/utils.jl","modules","mtsig","Tuple{Any}"
"src/utils.jl","ChainRulesCore.rrule","mtsig","Tuple{typeof(modules), Any}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"src/utils.jl","isleaflike","mtsig","Tuple{Any}"
"src/utils.jl","isleaflike","mtsig","Tuple{Tuple{Vararg{<:Number}}}"
"src/utils.jl","isleaflike","mtsig","Tuple{Tuple{Vararg{<:AbstractArray{<:Number}}}}"
"src/utils.jl","patience","mtsig","Tuple{Any, Any}"
"src/utils.jl","on_trigger","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","on_trigger","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","early_stopping","mtsig","Tuple{Any, Any, Any, Any, Any}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","plateau","mtsig","Tuple{Any, Any, Any, Any, Any}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/utils.jl","<NA-name>","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/cuda/cudnn.jl","BN::Flux.BatchNorm","mtsig","Tuple{Union{CuArray{T, 2}, CuArray{T, 4}, CuArray{T, 5}}, Any} where T <: Union{Float32, Float64}"
"src/cuda/cudnn.jl","ChainRulesCore.rrule","mtsig","Tuple{typeof(batchnorm), Any, Any, Any, Any, Any, Any, Vararg{Any}}"
"src/cuda/cudnn.jl","batchnorm_pullback","mtsig","Tuple{Any}"
"src/layers/basic.jl","Chain","mtsig","Tuple{Vararg{Any}}"
"src/layers/basic.jl","Chain","mtsig","Tuple{Vararg{Any}}"
"src/layers/basic.jl","c::Chain","mtsig","Tuple{Any}"
"src/layers/basic.jl","applychain","mtsig","Tuple{Tuple{Vararg{<:Any, N}}, Any} where N"
"src/layers/basic.jl","applychain","mtsig","Tuple{NamedTuple, Any}"
"src/layers/basic.jl","applychain","mtsig","Tuple{AbstractVector, Any}"
"src/layers/basic.jl","Base.getindex","mtsig","Tuple{Chain, AbstractArray}"
"src/layers/basic.jl","Base.getindex","mtsig","Tuple{Chain{<:NamedTuple}, AbstractArray}"
"src/layers/basic.jl","Base.show","mtsig","Tuple{IO, Chain}"
"src/layers/basic.jl","_show_layers","mtsig","Tuple{Any, Tuple}"
"src/layers/basic.jl","_show_layers","mtsig","Tuple{Any, NamedTuple}"
"src/layers/basic.jl","_show_layers","mtsig","Tuple{Any, AbstractVector}"
"src/layers/basic.jl","activations","mtsig","Tuple{Chain, Any}"
"src/layers/basic.jl","extraChain","mtsig","Tuple{Tuple, Any}"
"src/layers/basic.jl","extraChain","mtsig","Tuple{Tuple{}, Any}"
"src/layers/basic.jl","Dense","mtsig","(Tuple{M, Any, F} where F) where M <: AbstractMatrix"
"src/layers/basic.jl","Dense","mtsig","Tuple{Pair{<:Integer, <:Integer}, Any, Any, Any}"
"src/layers/basic.jl","a::Dense","mtsig","Tuple{AbstractVecOrMat}"
"src/layers/basic.jl","a::Dense","mtsig","Tuple{AbstractArray}"
"src/layers/basic.jl","Base.show","mtsig","Tuple{IO, Dense}"
"src/layers/basic.jl","Scale","mtsig","((Tuple{A, B, F} where F) where B <: Union{Bool, AbstractArray}) where A <: AbstractArray"
"src/layers/basic.jl","Scale","mtsig","Tuple{Integer, Vararg{Integer}, Any, Any, Any}"
"src/layers/basic.jl","Scale","mtsig","Tuple{Vararg{Any}, Any, Any}"
"src/layers/basic.jl","a::Scale","mtsig","Tuple{AbstractArray}"
"src/layers/basic.jl","Base.show","mtsig","Tuple{IO, Scale}"
"src/layers/basic.jl","Maxout","mtsig","Tuple{Vararg{Any}}"
"src/layers/basic.jl","Maxout","mtsig","Tuple{Function, Integer}"
"src/layers/basic.jl","mo::Maxout","mtsig","Tuple{AbstractArray}"
"src/layers/basic.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/basic.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"src/layers/basic.jl","Base.show","mtsig","Tuple{IO, Maxout}"
"src/layers/basic.jl","skip::SkipConnection","mtsig","Tuple{Any}"
"src/layers/basic.jl","Base.show","mtsig","Tuple{IO, SkipConnection}"
"src/layers/basic.jl","Bilinear","mtsig","(Tuple{A, Any, F} where F) where A <: AbstractArray"
"src/layers/basic.jl","Bilinear","mtsig","Tuple{Pair{<:Tuple, <:Integer}, Any, Any, Any}"
"src/layers/basic.jl","Bilinear","mtsig","Tuple{Pair{<:Integer, <:Integer}, Any, Vararg{Any}}"
"src/layers/basic.jl","a::Bilinear","mtsig","Tuple{AbstractMatrix, AbstractMatrix}"
"src/layers/basic.jl","a::Bilinear","mtsig","Tuple{AbstractVecOrMat}"
"src/layers/basic.jl","a::Bilinear","mtsig","Tuple{AbstractVector, AbstractVector}"
"src/layers/basic.jl","a::Bilinear","mtsig","Tuple{NTuple{2, AbstractArray}}"
"src/layers/basic.jl","Base.show","mtsig","Tuple{IO, Bilinear}"
"src/layers/basic.jl","Parallel","mtsig","Tuple{Any, Vararg{Any}}"
"src/layers/basic.jl","Parallel","mtsig","Tuple{Any, Vararg{Any}}"
"src/layers/basic.jl","m::Parallel","mtsig","Tuple{Any}"
"src/layers/basic.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/basic.jl","m::Parallel","mtsig","Tuple{Tuple}"
"src/layers/basic.jl","m::Parallel","mtsig","Tuple{Vararg{Any}}"
"src/layers/basic.jl","Base.getindex","mtsig","Tuple{Parallel, Any}"
"src/layers/basic.jl","Base.getindex","mtsig","Tuple{Parallel, AbstractVector}"
"src/layers/basic.jl","Base.getindex","mtsig","Tuple{Parallel{<:Any, <:NamedTuple}, AbstractVector}"
"src/layers/basic.jl","Base.keys","mtsig","Tuple{Parallel}"
"src/layers/basic.jl","Base.show","mtsig","Tuple{IO, Parallel}"
"src/layers/basic.jl","Embedding","mtsig","Tuple{Pair{<:Integer, <:Integer}, Any}"
"src/layers/basic.jl","m::Embedding","mtsig","Tuple{Integer}"
"src/layers/basic.jl","m::Embedding","mtsig","Tuple{AbstractVector}"
"src/layers/basic.jl","m::Embedding","mtsig","Tuple{AbstractArray}"
"src/layers/basic.jl","m::Embedding","mtsig","(Tuple{Union{OneHotVector{T, L}, OneHotMatrix{T, L}}} where L) where T"
"src/layers/basic.jl","Base.show","mtsig","Tuple{IO, Embedding}"
"src/layers/conv.jl","_paddims","mtsig","Tuple{Tuple, Tuple}"
"src/layers/conv.jl","expand","mtsig","Tuple{Any, Tuple}"
"src/layers/conv.jl","expand","mtsig","Tuple{Any, Integer}"
"src/layers/conv.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/conv.jl","conv_reshape_bias","mtsig","Tuple{Any}"
"src/layers/conv.jl","conv_reshape_bias","mtsig","Tuple{MACROCALL, Any}"
"src/layers/conv.jl","conv_reshape_bias","mtsig","Tuple{AbstractVector, Any}"
"src/layers/conv.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/conv.jl","calc_padding","mtsig","(Tuple{Any, Any, NTuple{N, T}, Any, Any} where N) where T"
"src/layers/conv.jl","calc_padding","mtsig","(Tuple{Any, SamePad, NTuple{N, T}, Any, Any} where T) where N"
"src/layers/conv.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/conv.jl","Conv","mtsig","(Tuple{AbstractArray{T, N}, Any, Any, Any, Any, Any, Any} where N) where T"
"src/layers/conv.jl","Conv","mtsig","Tuple{NTuple{N, Integer}, Pair{<:Integer, <:Integer}, Any, Any, Any, Any, Any, Any, Any} where N"
"src/layers/conv.jl","convfilter","mtsig","Tuple{NTuple{N, Integer}, Pair{<:Integer, <:Integer}, Any, Any} where N"
"src/layers/conv.jl","conv_dims","mtsig","Tuple{Conv, AbstractArray}"
"src/layers/conv.jl","c::Conv","mtsig","Tuple{AbstractArray}"
"src/layers/conv.jl","_channels_in","mtsig","Tuple{Conv}"
"src/layers/conv.jl","_channels_out","mtsig","Tuple{Conv}"
"src/layers/conv.jl","Base.show","mtsig","Tuple{IO, Conv}"
"src/layers/conv.jl","_print_conv_opt","mtsig","Tuple{IO, Any}"
"src/layers/conv.jl","_channels_in","mtsig","Tuple{ConvTranspose}"
"src/layers/conv.jl","_channels_out","mtsig","Tuple{ConvTranspose}"
"src/layers/conv.jl","ConvTranspose","mtsig","(Tuple{AbstractArray{T, N}, Any, Any, Any, Any, Any, Any} where N) where T"
"src/layers/conv.jl","ConvTranspose","mtsig","Tuple{NTuple{N, Integer}, Pair{<:Integer, <:Integer}, Any, Any, Any, Any, Any, Any, Any} where N"
"src/layers/conv.jl","conv_transpose_dims","mtsig","Tuple{ConvTranspose, AbstractArray}"
"src/layers/conv.jl","c::ConvTranspose","mtsig","Tuple{AbstractArray}"
"src/layers/conv.jl","Base.show","mtsig","Tuple{IO, ConvTranspose}"
"src/layers/conv.jl","calc_padding","mtsig","(Tuple{Type{ConvTranspose}, SamePad, NTuple{N, T}, Any, Any} where T) where N"
"src/layers/conv.jl","DepthwiseConv","mtsig","Tuple{NTuple{<:Any, Integer}, Pair{<:Integer, <:Integer}, Any, Any, Any, Any, Any, Any}"
"src/layers/conv.jl","DepthwiseConv","mtsig","(Tuple{AbstractArray{T, N}, Any, Any, Any, Any, Any} where N) where T"
"src/layers/conv.jl","CrossCor","mtsig","(Tuple{AbstractArray{T, N}, Any, Any, Any, Any, Any} where N) where T"
"src/layers/conv.jl","CrossCor","mtsig","Tuple{NTuple{N, Integer}, Pair{<:Integer, <:Integer}, Any, Any, Any, Any, Any, Any} where N"
"src/layers/conv.jl","crosscor","mtsig","Tuple{Any, Any, DenseConvDims}"
"src/layers/conv.jl","crosscor_dims","mtsig","Tuple{CrossCor, AbstractArray}"
"src/layers/conv.jl","c::CrossCor","mtsig","Tuple{AbstractArray}"
"src/layers/conv.jl","Base.show","mtsig","Tuple{IO, CrossCor}"
"src/layers/conv.jl","AdaptiveMaxPool","mtsig","Tuple{NTuple{O, Int}} where O"
"src/layers/conv.jl","a::AdaptiveMaxPool{S}","mtsig","(Tuple{AbstractArray{T, S}} where T) where S"
"src/layers/conv.jl","Base.show","mtsig","Tuple{IO, AdaptiveMaxPool}"
"src/layers/conv.jl","AdaptiveMeanPool","mtsig","Tuple{NTuple{O, Int}} where O"
"src/layers/conv.jl","a::AdaptiveMeanPool{S}","mtsig","(Tuple{AbstractArray{T, S}} where T) where S"
"src/layers/conv.jl","Base.show","mtsig","Tuple{IO, AdaptiveMeanPool}"
"src/layers/conv.jl","g::GlobalMaxPool","mtsig","Tuple{Any}"
"src/layers/conv.jl","Base.show","mtsig","Tuple{IO, GlobalMaxPool}"
"src/layers/conv.jl","g::GlobalMeanPool","mtsig","Tuple{Any}"
"src/layers/conv.jl","Base.show","mtsig","Tuple{IO, GlobalMeanPool}"
"src/layers/conv.jl","MaxPool","mtsig","Tuple{NTuple{N, Integer}, Any, Any} where N"
"src/layers/conv.jl","m::MaxPool","mtsig","Tuple{Any}"
"src/layers/conv.jl","Base.show","mtsig","Tuple{IO, MaxPool}"
"src/layers/conv.jl","_maybetuple_string","mtsig","Tuple{Any}"
"src/layers/conv.jl","_maybetuple_string","mtsig","Tuple{Tuple}"
"src/layers/conv.jl","MeanPool","mtsig","Tuple{NTuple{N, Integer}, Any, Any} where N"
"src/layers/conv.jl","m::MeanPool","mtsig","Tuple{Any}"
"src/layers/conv.jl","Base.show","mtsig","Tuple{IO, MeanPool}"
"src/layers/normalise.jl","istraining","mtsig","Tuple{}"
"src/layers/normalise.jl","ChainRulesCore.rrule","mtsig","Tuple{typeof(istraining)}"
"src/layers/normalise.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/normalise.jl","_isactive","mtsig","Tuple{Any}"
"src/layers/normalise.jl","_dropout_shape","mtsig","Tuple{Any, Colon}"
"src/layers/normalise.jl","_dropout_shape","mtsig","Tuple{Any, Any}"
"src/layers/normalise.jl","_dropout_kernel","mtsig","Tuple{T, Any, Any} where T"
"src/layers/normalise.jl","dropout","mtsig","Tuple{Any, Any, Any, Any, Bool}"
"src/layers/normalise.jl","dropout","mtsig","Tuple{Any, Any, Vararg{Any}}"
"src/layers/normalise.jl","dropout_mask","mtsig","Tuple{CUDA.RNG, CuArray, Any, Vararg{Any}}"
"src/layers/normalise.jl","dropout_mask","mtsig","Tuple{Any, CuArray, Any, Vararg{Any}}"
"src/layers/normalise.jl","dropout_mask","mtsig","Tuple{Any, Any, Any, Vararg{Any}}"
"src/layers/normalise.jl","_dropout_mask","mtsig","Tuple{Any, Any, Any, Any}"
"src/layers/normalise.jl","Dropout","mtsig","Tuple{Any, Any, Any}"
"src/layers/normalise.jl","Dropout","mtsig","Tuple{Any, Any, Any}"
"src/layers/normalise.jl","trainable","mtsig","Tuple{Dropout}"
"src/layers/normalise.jl","a::Dropout","mtsig","Tuple{Any}"
"src/layers/normalise.jl","testmode!","mtsig","Tuple{Dropout, Any}"
"src/layers/normalise.jl","Base.show","mtsig","Tuple{IO, Dropout}"
"src/layers/normalise.jl","AlphaDropout","mtsig","Tuple{Any, Any, Any}"
"src/layers/normalise.jl","AlphaDropout","mtsig","Tuple{Any, Any}"
"src/layers/normalise.jl","AlphaDropout","mtsig","Tuple{Any, Any}"
"src/layers/normalise.jl","trainable","mtsig","Tuple{AlphaDropout}"
"src/layers/normalise.jl","a::AlphaDropout","mtsig","Tuple{AbstractArray{T}} where T"
"src/layers/normalise.jl","testmode!","mtsig","Tuple{AlphaDropout, Any}"
"src/layers/normalise.jl","LayerNorm","mtsig","Tuple{Tuple{Vararg{Int}}, Any, Bool, Real}"
"src/layers/normalise.jl","LayerNorm","mtsig","Tuple{Vararg{Integer}, Vararg{Any}}"
"src/layers/normalise.jl","LayerNorm","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/layers/normalise.jl","a::LayerNorm","mtsig","Tuple{Any}"
"src/layers/normalise.jl","Base.show","mtsig","Tuple{IO, LayerNorm}"
"src/layers/normalise.jl","_norm_layer_forward","mtsig","(Tuple{Any, AbstractArray{T, N}, Any, Any} where N) where T"
"src/layers/normalise.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/normalise.jl","_norm_layer_forward","mtsig","Tuple{Any, Any, Any, Any}"
"src/layers/normalise.jl","_track_stats!","mtsig","(Tuple{Any, AbstractArray{T, N}, Any, Any, Any} where N) where T"
"src/layers/normalise.jl","BatchNorm","mtsig","Tuple{Int, Any, Any, Any, Any, Any, Any, Any}"
"src/layers/normalise.jl","trainable","mtsig","Tuple{BatchNorm}"
"src/layers/normalise.jl","BN::BatchNorm","mtsig","Tuple{Any}"
"src/layers/normalise.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/normalise.jl","testmode!","mtsig","Tuple{BatchNorm, Any}"
"src/layers/normalise.jl","Base.show","mtsig","Tuple{IO, BatchNorm}"
"src/layers/normalise.jl","InstanceNorm","mtsig","Tuple{Int, Any, Any, Any, Any, Any, Any, Any}"
"src/layers/normalise.jl","trainable","mtsig","Tuple{InstanceNorm}"
"src/layers/normalise.jl","l::InstanceNorm","mtsig","Tuple{Any}"
"src/layers/normalise.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/normalise.jl","testmode!","mtsig","Tuple{InstanceNorm, Any}"
"src/layers/normalise.jl","Base.show","mtsig","Tuple{IO, InstanceNorm}"
"src/layers/normalise.jl","trainable","mtsig","Tuple{GroupNorm}"
"src/layers/normalise.jl","GroupNorm","mtsig","Tuple{Int, Int, Any, Any, Any, Any, Any, Any, Any}"
"src/layers/normalise.jl","gn::GroupNorm","mtsig","Tuple{Any}"
"src/layers/normalise.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/normalise.jl","testmode!","mtsig","Tuple{GroupNorm, Any}"
"src/layers/normalise.jl","Base.show","mtsig","Tuple{IO, GroupNorm}"
"src/layers/normalise.jl","hasaffine","mtsig","Tuple{Union{BatchNorm, InstanceNorm, LayerNorm, GroupNorm}}"
"src/layers/recurrent.jl","gate","mtsig","Tuple{Any, Any}"
"src/layers/recurrent.jl","gate","mtsig","Tuple{AbstractVector, Any, Any}"
"src/layers/recurrent.jl","gate","mtsig","Tuple{AbstractMatrix, Any, Any}"
"src/layers/recurrent.jl","multigate","mtsig","Tuple{AbstractArray, Any, Val{N}} where N"
"src/layers/recurrent.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/recurrent.jl","ChainRulesCore.rrule","mtsig","Tuple{typeof(multigate), AbstractArray, Any, Any}"
"src/layers/recurrent.jl","multigate_pullback","mtsig","Tuple{Any}"
"src/layers/recurrent.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"src/layers/recurrent.jl","eachlastdim","mtsig","(Tuple{AbstractArray{T, N}} where N) where T"
"src/layers/recurrent.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/recurrent.jl","∇eachlastdim","mtsig","(Tuple{Any, AbstractArray{T, N}} where N) where T"
"src/layers/recurrent.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/recurrent.jl","ChainRulesCore.rrule","mtsig","(Tuple{typeof(eachlastdim), AbstractArray{T, N}} where N) where T"
"src/layers/recurrent.jl","lastdims","mtsig","Tuple{Any}"
"src/layers/recurrent.jl","reshape_cell_output","mtsig","Tuple{Any, Any}"
"src/layers/recurrent.jl","m::Recur","mtsig","Tuple{Any}"
"src/layers/recurrent.jl","trainable","mtsig","Tuple{Recur}"
"src/layers/recurrent.jl","Base.show","mtsig","Tuple{IO, Recur}"
"src/layers/recurrent.jl","reset!","mtsig","Tuple{Recur}"
"src/layers/recurrent.jl","reset!","mtsig","Tuple{Any}"
"src/layers/recurrent.jl","flip","mtsig","Tuple{Any, Any}"
"src/layers/recurrent.jl","m::Recur","mtsig","Tuple{AbstractArray{T, 3}} where T"
"src/layers/recurrent.jl","RNNCell","mtsig","Tuple{Pair, Any, Any, Any, Any}"
"src/layers/recurrent.jl","m::RNNCell{F, A, V, <:AbstractMatrix{T}}","mtsig","(((Tuple{Any, Union{AbstractVecOrMat{T}, OneHotArray}} where T) where V) where A) where F"
"src/layers/recurrent.jl","Base.show","mtsig","Tuple{IO, RNNCell}"
"src/layers/recurrent.jl","RNN","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/layers/recurrent.jl","Recur","mtsig","Tuple{RNNCell}"
"src/layers/recurrent.jl","LSTMCell","mtsig","Tuple{Pair, Any, Any, Any}"
"src/layers/recurrent.jl","m::LSTMCell{A, V, <:NTuple{2, AbstractMatrix{T}}}","mtsig","((Tuple{TUPLE_ARG, Union{AbstractVecOrMat{T}, OneHotArray}} where T) where V) where A"
"src/layers/recurrent.jl","Base.show","mtsig","Tuple{IO, LSTMCell}"
"src/layers/recurrent.jl","LSTM","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/layers/recurrent.jl","Recur","mtsig","Tuple{LSTMCell}"
"src/layers/recurrent.jl","_gru_output","mtsig","Tuple{Any, Any, Any}"
"src/layers/recurrent.jl","GRUCell","mtsig","Tuple{Pair, Any, Any, Any}"
"src/layers/recurrent.jl","m::GRUCell{A, V, <:AbstractMatrix{T}}","mtsig","((Tuple{Any, Union{AbstractVecOrMat{T}, OneHotArray}} where T) where V) where A"
"src/layers/recurrent.jl","Base.show","mtsig","Tuple{IO, GRUCell}"
"src/layers/recurrent.jl","GRU","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/layers/recurrent.jl","Recur","mtsig","Tuple{GRUCell}"
"src/layers/recurrent.jl","GRUv3Cell","mtsig","Tuple{Pair, Any, Any, Any}"
"src/layers/recurrent.jl","m::GRUv3Cell{A, V, <:AbstractMatrix{T}}","mtsig","((Tuple{Any, Union{AbstractVecOrMat{T}, OneHotArray}} where T) where V) where A"
"src/layers/recurrent.jl","Base.show","mtsig","Tuple{IO, GRUv3Cell}"
"src/layers/recurrent.jl","GRUv3","mtsig","Tuple{Vararg{Any}, Vararg{Any}}"
"src/layers/recurrent.jl","Recur","mtsig","Tuple{GRUv3Cell}"
"src/layers/show.jl","Base.show","mtsig","Tuple{IO, MIME\"text/plain\", \$T}"
"src/layers/show.jl","_big_show","mtsig","Tuple{IO, Any, Int, Any}"
"src/layers/show.jl","_show_leaflike","mtsig","Tuple{Any}"
"src/layers/show.jl","_show_leaflike","mtsig","Tuple{Tuple{Vararg{<:Number}}}"
"src/layers/show.jl","_show_leaflike","mtsig","Tuple{Tuple{Vararg{<:AbstractArray}}}"
"src/layers/show.jl","_show_leaflike","mtsig","Tuple{Diagonal}"
"src/layers/show.jl","_show_children","mtsig","Tuple{Any}"
"src/layers/show.jl","_show_children","mtsig","Tuple{Chain}"
"src/layers/show.jl","_show_children","mtsig","Tuple{Maxout}"
"src/layers/show.jl","_show_children","mtsig","Tuple{Parallel}"
"src/layers/show.jl","Base.show","mtsig","Tuple{IO, MIME\"text/plain\", \$T}"
"src/layers/show.jl","_layer_show","mtsig","Tuple{IO, Any, Int, Any}"
"src/layers/show.jl","_big_finale","mtsig","Tuple{IO, Any}"
"src/layers/show.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/show.jl","_childarray_sum","mtsig","Tuple{Any, AbstractArray{<:Number}}"
"src/layers/show.jl","_childarray_sum","mtsig","Tuple{Any, Any}"
"src/layers/show.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/show.jl","underscorise","mtsig","Tuple{Integer}"
"src/layers/show.jl","_nan_show","mtsig","Tuple{IO, Any}"
"src/layers/show.jl","_any","mtsig","Tuple{Any, AbstractArray{<:Number}}"
"src/layers/show.jl","_any","mtsig","Tuple{Any, Any}"
"src/layers/show.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/show.jl","_any","mtsig","Tuple{Any, Number}"
"src/layers/show.jl","_all","mtsig","Tuple{Any, Any}"
"src/layers/stateless.jl","flatten","mtsig","Tuple{AbstractArray}"
"src/layers/stateless.jl","normalise","mtsig","Tuple{AbstractArray, Any, Any}"
"src/layers/upsample.jl","Upsample","mtsig","Tuple{Symbol, Any, Any}"
"src/layers/upsample.jl","Upsample","mtsig","Tuple{Any, Symbol}"
"src/layers/upsample.jl","m::Upsample{:nearest}","mtsig","Tuple{AbstractArray}"
"src/layers/upsample.jl","m::Upsample{:nearest, Int}","mtsig","(Tuple{AbstractArray{T, N}} where N) where T"
"src/layers/upsample.jl","<NA-name>","mtsig","Tuple{Any}"
"src/layers/upsample.jl","m::Upsample{:nearest, Nothing}","mtsig","Tuple{AbstractArray}"
"src/layers/upsample.jl","m::Upsample{:bilinear}","mtsig","Tuple{AbstractArray}"
"src/layers/upsample.jl","m::Upsample{:bilinear, Nothing}","mtsig","Tuple{AbstractArray}"
"src/layers/upsample.jl","m::Upsample{:trilinear}","mtsig","Tuple{AbstractArray}"
"src/layers/upsample.jl","m::Upsample{:trilinear, Nothing}","mtsig","Tuple{AbstractArray}"
"src/layers/upsample.jl","Base.show","mtsig","Tuple{IO, Upsample{mode}} where mode"
"src/layers/upsample.jl","m::PixelShuffle","mtsig","Tuple{Any}"
"src/losses/ctc.jl","logaddexp","mtsig","Tuple{Any, Any}"
"src/losses/ctc.jl","add_blanks","mtsig","Tuple{Any, Any}"
"src/losses/ctc.jl","ctc_alpha","mtsig","Tuple{AbstractArray, Any}"
"src/losses/ctc.jl","∇ctc_loss","mtsig","Tuple{AbstractArray, Any, Any}"
"src/losses/ctc.jl","ctc_loss","mtsig","Tuple{AbstractArray, Any}"
"src/losses/ctc.jl","ChainRulesCore.rrule","mtsig","Tuple{typeof(ctc_loss), Any, Any}"
"src/losses/ctc.jl","ctc_loss_pullback","mtsig","Tuple{Any}"
"src/losses/ctc.jl","log_plus_f","mtsig","Tuple{Any, Any}"
"src/losses/ctc.jl","count_repeats","mtsig","Tuple{Any}"
"src/losses/ctc.jl","compute_alpha_kernel","mtsig","Tuple{Any, Any, Any, Any, Any, Any, Any, Any}"
"src/losses/ctc.jl","compute_beta_and_grad_kernel","mtsig","Tuple{Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any}"
"src/losses/ctc.jl","ctc_alpha","mtsig","Tuple{CuArray, Any}"
"src/losses/ctc.jl","ctc_loss","mtsig","Tuple{CuArray, Any}"
"src/losses/ctc.jl","∇ctc_loss","mtsig","Tuple{CuArray, Any, Any}"
"src/losses/functions.jl","mae","mtsig","Tuple{Any, Any, Any}"
"src/losses/functions.jl","mse","mtsig","Tuple{Any, Any, Any}"
"src/losses/functions.jl","msle","mtsig","Tuple{Any, Any, Any, Any}"
"src/losses/functions.jl","huber_loss","mtsig","Tuple{Any, Any, Any, Any}"
"src/losses/functions.jl","label_smoothing","mtsig","Tuple{Union{AbstractArray, Number}, Number, Int}"
"src/losses/functions.jl","crossentropy","mtsig","Tuple{Any, Any, Any, Any, Any}"
"src/losses/functions.jl","logitcrossentropy","mtsig","Tuple{Any, Any, Any, Any}"
"src/losses/functions.jl","binarycrossentropy","mtsig","Tuple{Any, Any, Any, Any}"
"src/losses/functions.jl","logitbinarycrossentropy","mtsig","Tuple{Any, Any, Any}"
"src/losses/functions.jl","kldivergence","mtsig","Tuple{Any, Any, Any, Any, Any}"
"src/losses/functions.jl","poisson_loss","mtsig","Tuple{Any, Any, Any}"
"src/losses/functions.jl","hinge_loss","mtsig","Tuple{Any, Any, Any}"
"src/losses/functions.jl","squared_hinge_loss","mtsig","Tuple{Any, Any, Any}"
"src/losses/functions.jl","dice_coeff_loss","mtsig","Tuple{Any, Any, Any}"
"src/losses/functions.jl","tversky_loss","mtsig","Tuple{Any, Any, Any}"
"src/losses/functions.jl","binary_focal_loss","mtsig","Tuple{Any, Any, Any, Any, Any}"
"src/losses/functions.jl","focal_loss","mtsig","Tuple{Any, Any, Any, Any, Any, Any}"
"src/losses/functions.jl","siamese_contrastive_loss","mtsig","Tuple{Any, Any, Any, Real}"
"src/losses/utils.jl","xlogx","mtsig","Tuple{Any}"
"src/losses/utils.jl","xlogy","mtsig","Tuple{Any, Any}"
"src/losses/utils.jl","broadcasted","mtsig","Tuple{typeof(xlogy), Zygote.Numeric, Zygote.Numeric}"
"src/losses/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"src/losses/utils.jl","_check_sizes","mtsig","Tuple{AbstractArray, AbstractArray}"
"src/losses/utils.jl","_check_sizes","mtsig","Tuple{Any, Any}"
"src/optimise/optimisers.jl","Descent","mtsig","Tuple{}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{Descent, Any, Any}"
"src/optimise/optimisers.jl","Momentum","mtsig","Tuple{Any, Any}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{Momentum, Any, Any}"
"src/optimise/optimisers.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/optimisers.jl","Nesterov","mtsig","Tuple{Any, Any}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{Nesterov, Any, Any}"
"src/optimise/optimisers.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/optimisers.jl","RMSProp","mtsig","Tuple{Real, Real, Real}"
"src/optimise/optimisers.jl","RMSProp","mtsig","Tuple{Real, Real, IdDict}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{RMSProp, Any, Any}"
"src/optimise/optimisers.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/optimisers.jl","ADAM","mtsig","Tuple{Real, Tuple, Real}"
"src/optimise/optimisers.jl","ADAM","mtsig","Tuple{Real, Tuple, IdDict}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{ADAM, Any, Any}"
"src/optimise/optimisers.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/optimisers.jl","RADAM","mtsig","Tuple{Real, Tuple, Real}"
"src/optimise/optimisers.jl","RADAM","mtsig","Tuple{Real, Tuple, IdDict}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{RADAM, Any, Any}"
"src/optimise/optimisers.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/optimisers.jl","AdaMax","mtsig","Tuple{Real, Tuple, Real}"
"src/optimise/optimisers.jl","AdaMax","mtsig","Tuple{Real, Tuple, IdDict}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{AdaMax, Any, Any}"
"src/optimise/optimisers.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/optimisers.jl","OADAM","mtsig","Tuple{Real, Tuple, Real}"
"src/optimise/optimisers.jl","OADAM","mtsig","Tuple{Real, Tuple, IdDict}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{OADAM, Any, Any}"
"src/optimise/optimisers.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/optimisers.jl","ADAGrad","mtsig","Tuple{Real, Real}"
"src/optimise/optimisers.jl","ADAGrad","mtsig","Tuple{Real, IdDict}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{ADAGrad, Any, Any}"
"src/optimise/optimisers.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/optimisers.jl","ADADelta","mtsig","Tuple{Real, Real}"
"src/optimise/optimisers.jl","ADADelta","mtsig","Tuple{Real, IdDict}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{ADADelta, Any, Any}"
"src/optimise/optimisers.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/optimisers.jl","AMSGrad","mtsig","Tuple{Real, Any, Real}"
"src/optimise/optimisers.jl","AMSGrad","mtsig","Tuple{Real, Tuple, IdDict}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{AMSGrad, Any, Any}"
"src/optimise/optimisers.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/optimisers.jl","NADAM","mtsig","Tuple{Real, Any, Real}"
"src/optimise/optimisers.jl","NADAM","mtsig","Tuple{Real, Tuple, IdDict}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{NADAM, Any, Any}"
"src/optimise/optimisers.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/optimisers.jl","ADAMW","mtsig","Tuple{Any, Any, Any}"
"src/optimise/optimisers.jl","AdaBelief","mtsig","Tuple{Real, Any, Real}"
"src/optimise/optimisers.jl","AdaBelief","mtsig","Tuple{Real, Tuple, IdDict}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{AdaBelief, Any, Any}"
"src/optimise/optimisers.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/optimisers.jl","Optimiser","mtsig","Tuple{Vararg{AbstractOptimiser}}"
"src/optimise/optimisers.jl","Base.getindex","mtsig","Tuple{Optimiser, AbstractArray}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{Optimiser, Any, Any}"
"src/optimise/optimisers.jl","InvDecay","mtsig","Tuple{Any}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{InvDecay, Any, Any}"
"src/optimise/optimisers.jl","ExpDecay","mtsig","Tuple{Any, Any, Any, Any, Any}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{ExpDecay, Any, Any}"
"src/optimise/optimisers.jl","<NA-name>","mtsig","Tuple{Any}"
"src/optimise/optimisers.jl","WeightDecay","mtsig","Tuple{}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{WeightDecay, Any, Any}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{ClipValue, Any, Any}"
"src/optimise/optimisers.jl","apply!","mtsig","Tuple{ClipNorm, Any, Any}"
"src/optimise/train.jl","update!","mtsig","Tuple{AbstractOptimiser, Any, Any}"
"src/optimise/train.jl","update!","mtsig","Tuple{AbstractOptimiser, Params, Any}"
"src/optimise/train.jl","call","mtsig","Tuple{Any, Vararg{Any}}"
"src/optimise/train.jl","runall","mtsig","Tuple{Any}"
"src/optimise/train.jl","runall","mtsig","Tuple{AbstractVector}"
"src/optimise/train.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/train.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/train.jl","skip","mtsig","Tuple{}"
"src/optimise/train.jl","stop","mtsig","Tuple{}"
"src/optimise/train.jl","batchmemaybe","mtsig","Tuple{Any}"
"src/optimise/train.jl","batchmemaybe","mtsig","Tuple{Tuple}"
"src/optimise/train.jl","train!","mtsig","Tuple{Any, Params, Any, AbstractOptimiser, Any}"
"src/optimise/train.jl","<NA-name>","mtsig","Tuple{}"
"src/optimise/train.jl","<NA-name>","mtsig","Tuple{}"
"test/ctc-gpu.jl","ctc_ngradient","mtsig","Tuple{Any, Any}"
"test/ctc.jl","ctc_ngradient","mtsig","Tuple{Any, Any}"
"test/data.jl","loss","mtsig","Tuple{Any}"
"test/data.jl","loss","mtsig","Tuple{Any, Any}"
"test/onehot.jl","<NA-name>","mtsig","Tuple{Any}"
"test/optimise.jl","loss","mtsig","Tuple{Any}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","loss","mtsig","Tuple{Any}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","loss","mtsig","Tuple{Any}"
"test/optimise.jl","loss","mtsig","Tuple{Any}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","loss","mtsig","Tuple{Any}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","<NA-name>","mtsig","Tuple{}"
"test/optimise.jl","loss","mtsig","Tuple{}"
"test/outputsize.jl","<NA-name>","mtsig","Tuple{}"
"test/outputsize.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/outputsize.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{}"
"test/utils.jl","<NA-name>","mtsig","Tuple{}"
"test/utils.jl","<NA-name>","mtsig","Tuple{}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"test/utils.jl","gfun","mtsig","Tuple{Vararg{Any}}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/utils.jl","gfun","mtsig","Tuple{Vararg{Any}}"
"test/utils.jl","<NA-name>","mtsig","Tuple{}"
"test/utils.jl","ls","mtsig","Tuple{Vararg{Any}}"
"test/utils.jl","dl","mtsig","Tuple{Any, Any, Any}"
"test/utils.jl","dm","mtsig","Tuple{Any}"
"test/utils.jl","nobias","mtsig","Tuple{Any}"
"test/utils.jl","testdense","mtsig","Tuple{Any, Any}"
"test/utils.jl","pars","mtsig","Tuple{Any, Any}"
"test/utils.jl","pars","mtsig","Tuple{Any}"
"test/utils.jl","pararray","mtsig","Tuple{Any}"
"test/utils.jl","weights","mtsig","Tuple{Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"test/utils.jl","Flux.testmode!","mtsig","Tuple{DummyLayer, Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{}"
"test/utils.jl","<NA-name>","mtsig","Tuple{}"
"test/utils.jl","m::TwoDenses","mtsig","Tuple{Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/utils.jl","m::Model","mtsig","Tuple{Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"test/utils.jl","Split","mtsig","Tuple{Vararg{Any}}"
"test/utils.jl","m::Split","mtsig","Tuple{AbstractArray}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"test/utils.jl","loss","mtsig","Tuple{Any, Any, Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"test/utils.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","foo","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cuda.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/cudnn.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/cuda/cudnn.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/cuda/cudnn.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/cuda/cudnn.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/cuda/curnn.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/curnn.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/curnn.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/cuda/curnn.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/layers.jl","gpu_gradtest","mtsig","Tuple{String, Vector, Any, Vararg{Any}, Any}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/layers.jl","ConvNoBias","mtsig","Tuple{Vararg{Any}}"
"test/cuda/layers.jl","ConvTransposeNoBias","mtsig","Tuple{Vararg{Any}}"
"test/cuda/layers.jl","CrossCorNoBias","mtsig","Tuple{Vararg{Any}}"
"test/cuda/layers.jl","DepthwiseConvNoBias","mtsig","Tuple{Vararg{Any}}"
"test/cuda/layers.jl","GroupedConv","mtsig","Tuple{Vararg{Any}}"
"test/cuda/layers.jl","GroupedConvTranspose","mtsig","Tuple{Vararg{Any}}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/layers.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/losses.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/losses.jl","<NA-name>","mtsig","Tuple{Any}"
"test/cuda/test_utils.jl","check_grad","mtsig","Tuple{Any, Any, Any, Any}"
"test/cuda/test_utils.jl","check_grad","mtsig","Tuple{Base.RefValue, Base.RefValue, Any, Any}"
"test/cuda/test_utils.jl","check_grad","mtsig","Tuple{Nothing, Nothing, Any, Any}"
"test/cuda/test_utils.jl","check_grad","mtsig","Tuple{Float32, Float32, Any, Any}"
"test/cuda/test_utils.jl","check_grad","mtsig","Tuple{CuArray{Float32}, Array{Float32}, Any, Any}"
"test/cuda/test_utils.jl","check_grad","mtsig","Tuple{Tuple, Tuple, Any, Any}"
"test/cuda/test_utils.jl","check_grad","mtsig","Tuple{NamedTuple, NamedTuple, Any, Any}"
"test/cuda/test_utils.jl","gpu_autodiff_test","mtsig","Tuple{Any, Vararg{Array{Float32}}, Any, Any, Any}"
"test/cuda/test_utils.jl","check_type","mtsig","Tuple{Any}"
"test/cuda/test_utils.jl","check_type","mtsig","Tuple{Float32}"
"test/cuda/test_utils.jl","check_type","mtsig","Tuple{CuArray{Float32}}"
"test/cuda/test_utils.jl","check_type","mtsig","Tuple{Array{Float32}}"
"test/cuda/test_utils.jl","<NA-name>","mtsig","Tuple{}"
"test/cuda/test_utils.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any, Any}"
"test/layers/basic.jl","l::L1","mtsig","Tuple{Any}"
"test/layers/basic.jl","Base.:*","mtsig","Tuple{AbstractArray, Input}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any, Vararg{Any}}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{Any, Any, Any}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/basic.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/conv.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/conv.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/conv.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/conv.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/conv.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/conv.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/conv.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","evalwgrad","mtsig","Tuple{Any, Vararg{Any}}"
"test/layers/normalisation.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/normalisation.jl","squeeze","mtsig","Tuple{Any}"
"test/layers/recurrent.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/recurrent.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/recurrent.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/recurrent.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/recurrent.jl","<NA-name>","mtsig","Tuple{}"
"test/layers/recurrent.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/recurrent.jl","<NA-name>","mtsig","Tuple{Any}"
"test/layers/recurrent.jl","<NA-name>","mtsig","Tuple{Any}"
