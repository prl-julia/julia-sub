File,Function,Kind,TypeAnnotation,UnrolledTypeAnnotation,TypeVarsSummary,Error,Warning,VarCnt,HasWhere,VarsUsedOnce,UseSiteVariance,ImprUseSiteVariance,ExistInInv,RestrictedScope,ClosedLowerBound,TrivConsistBounds,Package
src/run.jl,Base.run,mtsig,"Tuple{PyObject, Union{PyObject, Array{PyObject}, Array{Any}, Tuple}, Vararg{Pair{PyObject, <:Any}}, Vararg{Any}}","Tuple{PyObject, Union{PyObject, Array{PyObject}, Array{Any}, Tuple}, Vararg{Pair{PyObject, var""##ANON_TV#408""} where var""##ANON_TV#408"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#408""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADCME.jl
src/metrics/pareto.jl,nds,retty,Vector{Vector{<:Int}},"Vector{Vector{var""##ANON_TV#347""} where var""##ANON_TV#347"" <: Int}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#347""), :(Union{}), :Int, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,summarize_trajectory,retty,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#360""} where var""##ANON_TV#360"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#360""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#361""} where var""##ANON_TV#361"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#361""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,summarize_raw,retty,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#362""} where var""##ANON_TV#362"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#362""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,summarize_raw,retty,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#363""} where var""##ANON_TV#363"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#363""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,summarize_total_cover,retty,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#370""} where var""##ANON_TV#370"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#370""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,summarize_total_cover,retty,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#371""} where var""##ANON_TV#371"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#371""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,summarize_relative_cover,retty,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#372""} where var""##ANON_TV#372"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#372""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,summarize_relative_cover,retty,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#373""} where var""##ANON_TV#373"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#373""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,summarize_coral_evenness,retty,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#374""} where var""##ANON_TV#374"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#374""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,summarize_coral_evenness,retty,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#376""} where var""##ANON_TV#376"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#376""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,summarize_absolute_shelter_volume,retty,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#377""} where var""##ANON_TV#377"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#377""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,summarize_absolute_shelter_volume,retty,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#378""} where var""##ANON_TV#378"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#378""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,summarize_relative_shelter_volume,retty,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#379""} where var""##ANON_TV#379"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#379""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/metrics/temporal.jl,summarize_relative_shelter_volume,retty,"Dict{Symbol, AbstractArray{<:Real}}","Dict{Symbol, AbstractArray{var""##ANON_TV#380""} where var""##ANON_TV#380"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#380""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ADRIA.jl
src/schema/jaqcd.jl,<NOT A FUNSIG>,tyassorann,"Maybe{Vector{T} where T <: Union{String, Matrix{Float64}}}","Maybe{Vector{T} where T <: Union{String, Matrix{Float64}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{String, Matrix{Float64}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/AWSBraket.jl
src/Attributes.jl,set_attribute!,mtsig,"Tuple{Any, Vararg{Pair{Symbol, <:Any}}}","Tuple{Any, Vararg{Pair{Symbol, var""##ANON_TV#334""} where var""##ANON_TV#334"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#334""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/AbstractAlgebra.jl
src/DirectSum.jl,direct_sum,mtsig,Tuple{Vararg{FPModule{<:RingElement}}},"Tuple{Vararg{FPModule{var""##ANON_TV#337""} where var""##ANON_TV#337"" <: RingElement}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#337""), :(Union{}), :RingElement, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/AbstractAlgebra.jl
src/WeakValueDict.jl,WeakValueDict,mtsig,"Tuple{Vararg{Pair{K, V} where K}} where V","Tuple{Vararg{Pair{K, V} where K}} where V","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/AbstractAlgebra.jl
src/generic/GenericTypes.jl,<NOT A FUNSIG>,tyassorann,Vector{Poly{<:PolyRingElem{T}}},"Vector{Poly{var""##ANON_TV#425""} where var""##ANON_TV#425"" <: PolyRingElem{T}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#425""), :(Union{}), :(PolyRingElem{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/AbstractAlgebra.jl
src/definitions.jl,complexfloat,mtsig,Tuple{StridedArray{Complex{<:BlasReal}}},"Tuple{StridedArray{Complex{var""##ANON_TV#315""} where var""##ANON_TV#315"" <: BlasReal}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#315""), :(Union{}), :BlasReal, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/AbstractFFTs.jl
test/utils.jl,AbstractMCMC.chainscat,mtsig,"Tuple{Union{MyChain, Vector{<:MyChain}}, Vararg{Union{MyChain, Vector{<:MyChain}}}}","Tuple{Union{MyChain, Vector{var""##ANON_TV#318""} where var""##ANON_TV#318"" <: MyChain}, Vararg{Union{MyChain, Vector{var""##ANON_TV#319""} where var""##ANON_TV#319"" <: MyChain}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#318""), :(Union{}), :MyChain, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#319""), :(Union{}), :MyChain, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/AbstractMCMC.jl
src/stats/conversions.jl,convert_arguments,mtsig,"Tuple{SampleBased, NTuple{N, AbstractVector{<:Number}}} where N","Tuple{SampleBased, NTuple{N, AbstractVector{var""##ANON_TV#582""} where var""##ANON_TV#582"" <: Number}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#582""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/AbstractPlotting.jl
src/indexing.jl,Base.to_indices,mtsig,"Tuple{Any, Tuple{Vararg{Union{Integer, CartesianIndex, TupleVector{N, Int} where N}}}}","Tuple{Any, Tuple{Vararg{Union{Integer, CartesianIndex, TupleVector{N, Int} where N}}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/AbstractTensors.jl
src/AccelInterfaces.jl,argsdtypes,retty,"Tuple{Vector{DataType}, Vector{NTuple{M, T} where {M, T <: Integer}}}","Tuple{Vector{DataType}, Vector{(NTuple{M, T} where M) where T <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:T, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/AccelInterfaces.jl
src/AcceleratedArray.jl,Base.IndexStyle,mtsig,"Tuple{Type{AcceleratedArray{<:Any, <:Any, A, <:Any}}} where A","Tuple{Type{((AcceleratedArray{var""##ANON_TV#320"", var""##ANON_TV#321"", A, var""##ANON_TV#322""} where var""##ANON_TV#320"" <: Any) where var""##ANON_TV#321"" <: Any) where var""##ANON_TV#322"" <: Any}} where A","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#320""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#321""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#322""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/AcceleratedArrays.jl
src/construct.jl,construct,mtsig,"Tuple{Type{NamedTuple}, Vararg{Pair{<:PropertyLens}}}","Tuple{Type{NamedTuple}, Vararg{Pair{var""##ANON_TV#338""} where var""##ANON_TV#338"" <: PropertyLens}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#338""), :(Union{}), :PropertyLens, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/AccessorsExtra.jl
src/analysis/PolicyValueVerification/src/verification.jl,get_root,mtsig,"Tuple{NTuple{2, Vector{<:Real}}}","Tuple{NTuple{2, Vector{var""##ANON_TV#319""} where var""##ANON_TV#319"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#319""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/AdaStress.jl
src/simulations/collect.jl,single_agent_types!,mtsig,"Tuple{Vector{Vector{T} where T}, ABM, AbstractArray}","Tuple{Vector{Vector{T} where T}, ABM, AbstractArray}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Agents.jl
src/simulations/collect.jl,multi_agent_types!,mtsig,"Tuple{Vector{Vector{T} where T}, Tuple, ABM, AbstractArray}","Tuple{Vector{Vector{T} where T}, Tuple, ABM, AbstractArray}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Agents.jl
src/simulations/collect.jl,single_agent_agg_types!,mtsig,"Tuple{Vector{Vector{T} where T}, Vector{String}, ABM, AbstractArray}","Tuple{Vector{Vector{T} where T}, Vector{String}, ABM, AbstractArray}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Agents.jl
src/simulations/collect.jl,multi_agent_agg_types!,mtsig,"Tuple{Vector{Vector{T} where T}, Tuple, Vector{String}, ABM, AbstractArray}","Tuple{Vector{Vector{T} where T}, Tuple, Vector{String}, ABM, AbstractArray}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Agents.jl
test/Utils/UtilsTests.jl,<NOT A FUNSIG>,tyassorann,"Array{Tuple{T, Array{T, N} where N, Bool} where T}","Array{Tuple{T, Array{T, N} where N, Bool} where T}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)], list(JuliaSub.TCInvar))]",false,false,2,true,false,false,false,true,true,true,true,data/ta-info/all/Alicorn.jl
src/mesh/mesh.jl,Mesh,mtsig,"Tuple{Vararg{Union{Mesh, AbstractBlock, Array{<:Union{AbstractBlock, Array}, 1}}}, Bool, Bool, Bool, Any}","Tuple{Vararg{Union{Mesh, AbstractBlock, Array{var""##ANON_TV#396"", 1} where var""##ANON_TV#396"" <: Union{AbstractBlock, Array}}}, Bool, Bool, Bool, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#396""), :(Union{}), :(Union{AbstractBlock, Array}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Amaru.jl
src/anova.jl,anova,mtsig,"Tuple{Vararg{TableRegressionModel{<:LinearModel}}, Type{<:GoodnessOfFit}, Vararg{Any}}","Tuple{Vararg{TableRegressionModel{var""##ANON_TV#379""} where var""##ANON_TV#379"" <: LinearModel}, Type{var""##ANON_TV#380""} where var""##ANON_TV#380"" <: GoodnessOfFit, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#379""), :(Union{}), :LinearModel, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#380""), :(Union{}), :GoodnessOfFit, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/AnovaGLM.jl
src/anova.jl,anova,mtsig,"Tuple{Vararg{TableRegressionModel{<:GeneralizedLinearModel}}, Type{<:GoodnessOfFit}, Vararg{Any}}","Tuple{Vararg{TableRegressionModel{var""##ANON_TV#387""} where var""##ANON_TV#387"" <: GeneralizedLinearModel}, Type{var""##ANON_TV#388""} where var""##ANON_TV#388"" <: GoodnessOfFit, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#387""), :(Union{}), :GeneralizedLinearModel, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#388""), :(Union{}), :GoodnessOfFit, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/AnovaGLM.jl
src/objects.jl,<NOT A FUNSIG>,tyassorann,"NamedTuple{(:preset, :mode), Tuple{Symbol, Tuple{Vararg{Symbol, N} where N}}}","NamedTuple{(:preset, :mode), Tuple{Symbol, Tuple{Vararg{Symbol, N} where N}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCInvar))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/AnyMOD.jl
src/objects.jl,<NOT A FUNSIG>,tyassorann,"NamedTuple{(:lvl, :step, :sca), Tuple{Int, Tuple{Vararg{Int, N} where N}, Dict{Tuple{Int, Int}, Float64}}}","NamedTuple{(:lvl, :step, :sca), Tuple{Int, Tuple{Vararg{Int, N} where N}, Dict{Tuple{Int, Int}, Float64}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCInvar))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/AnyMOD.jl
src/dataHandling/util.jl,getResize,mtsig,"Tuple{DataFrame, Tree, NamedTuple{(:lvl, :step, :sca), Tuple{Int, Tuple{Vararg{Int, N} where N}, Dict{Tuple{Int, Int}, Float64}}}}","Tuple{DataFrame, Tree, NamedTuple{(:lvl, :step, :sca), Tuple{Int, Tuple{Vararg{Int, N} where N}, Dict{Tuple{Int, Int}, Float64}}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/AnyMOD.jl
src/dataHandling/util.jl,getUpBound,mtsig,"Tuple{DataFrame, Float64, NamedTuple{(:lvl, :step, :sca), Tuple{Int, Tuple{Vararg{Int, N} where N}, Dict{Tuple{Int, Int}, Float64}}}, Tree}","Tuple{DataFrame, Float64, NamedTuple{(:lvl, :step, :sca), Tuple{Int, Tuple{Vararg{Int, N} where N}, Dict{Tuple{Int, Int}, Float64}}}, Tree}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/AnyMOD.jl
src/reader.jl,find_type,mtsig,"Tuple{AbstractString, NTuple{2, Vector{<:Pair}}}","Tuple{AbstractString, NTuple{2, Vector{var""##ANON_TV#395""} where var""##ANON_TV#395"" <: Pair}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#395""), :(Union{}), :Pair, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Apophis.jl
src/reader.jl,find_enhancements,mtsig,"Tuple{Union{AbstractString, Dict}, Vector{Species{N}}, NTuple{2, Vector{<:Pair}}} where N <: Number","Tuple{Union{AbstractString, Dict}, Vector{Species{N}}, NTuple{2, Vector{var""##ANON_TV#402""} where var""##ANON_TV#402"" <: Pair}} where N <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#402""), :(Union{}), :Pair, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,true,true,true,data/ta-info/all/Apophis.jl
src/reader.jl,find_kinetics,mtsig,"Tuple{Type{ElementaryReaction}, AbstractString, Vector{Species{N}}, NTuple{2, Vector{<:Pair}}} where N <: Number","Tuple{Type{ElementaryReaction}, AbstractString, Vector{Species{N}}, NTuple{2, Vector{var""##ANON_TV#404""} where var""##ANON_TV#404"" <: Pair}} where N <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#404""), :(Union{}), :Pair, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,true,true,true,data/ta-info/all/Apophis.jl
src/reader.jl,find_kinetics,mtsig,"Tuple{Type{ElementaryReaction}, Dict, Vector{Species{N}}, NTuple{2, Vector{<:Pair}}, Dict} where N <: Number","Tuple{Type{ElementaryReaction}, Dict, Vector{Species{N}}, NTuple{2, Vector{var""##ANON_TV#405""} where var""##ANON_TV#405"" <: Pair}, Dict} where N <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#405""), :(Union{}), :Pair, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,true,true,true,data/ta-info/all/Apophis.jl
src/reader.jl,find_kinetics,mtsig,"Tuple{Type{ThreeBodyReaction}, AbstractString, Vector{Species{N}}, NTuple{2, Vector{<:Pair}}} where N <: Number","Tuple{Type{ThreeBodyReaction}, AbstractString, Vector{Species{N}}, NTuple{2, Vector{var""##ANON_TV#406""} where var""##ANON_TV#406"" <: Pair}} where N <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#406""), :(Union{}), :Pair, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,true,true,true,data/ta-info/all/Apophis.jl
src/reader.jl,find_kinetics,mtsig,"Tuple{Type{ThreeBodyReaction}, Dict, Vector{Species{N}}, NTuple{2, Vector{<:Pair}}, Dict} where N <: Number","Tuple{Type{ThreeBodyReaction}, Dict, Vector{Species{N}}, NTuple{2, Vector{var""##ANON_TV#407""} where var""##ANON_TV#407"" <: Pair}, Dict} where N <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#407""), :(Union{}), :Pair, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,true,true,true,data/ta-info/all/Apophis.jl
src/reader.jl,find_kinetics,mtsig,"Tuple{Type{FallOffReaction}, AbstractString, Vector{Species{N}}, NTuple{2, Vector{<:Pair}}} where N <: Number","Tuple{Type{FallOffReaction}, AbstractString, Vector{Species{N}}, NTuple{2, Vector{var""##ANON_TV#408""} where var""##ANON_TV#408"" <: Pair}} where N <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#408""), :(Union{}), :Pair, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,true,true,true,data/ta-info/all/Apophis.jl
src/reader.jl,find_kinetics,mtsig,"Tuple{Type{FallOffReaction}, Dict, Vector{Species{N}}, NTuple{2, Vector{<:Pair}}, Dict} where N <: Number","Tuple{Type{FallOffReaction}, Dict, Vector{Species{N}}, NTuple{2, Vector{var""##ANON_TV#409""} where var""##ANON_TV#409"" <: Pair}, Dict} where N <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#409""), :(Union{}), :Pair, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,true,true,true,data/ta-info/all/Apophis.jl
src/Extras/sample.jl,sample,mtsig,"Tuple{LowRankFun{C, C, TensorSpace{Tuple{C, C}, <:EuclideanDomain{2}, <:Real}, Float64}, Integer} where C <: Chebyshev","Tuple{LowRankFun{C, C, (TensorSpace{Tuple{C, C}, var""##ANON_TV#442"", var""##ANON_TV#443""} where var""##ANON_TV#442"" <: EuclideanDomain{2}) where var""##ANON_TV#443"" <: Real, Float64}, Integer} where C <: Chebyshev","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#442""), :(Union{}), :(EuclideanDomain{2}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#443""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:C, :(Union{}), :Chebyshev, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/ApproxFun.jl
src/specialfunctions.jl,$op,mtsig,"Tuple{Fun{PiecewiseSpace{<:Any, <:UnionDomain, <:Real}, <:Real}}","Tuple{Fun{((PiecewiseSpace{var""##ANON_TV#490"", var""##ANON_TV#491"", var""##ANON_TV#492""} where var""##ANON_TV#490"" <: Any) where var""##ANON_TV#491"" <: UnionDomain) where var""##ANON_TV#492"" <: Real, var""##ANON_TV#493""} where var""##ANON_TV#493"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#490""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#491""), :(Union{}), :UnionDomain, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#492""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#493""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/ApproxFunBase.jl
src/specialfunctions.jl,$op,mtsig,"Tuple{typeof(abs), Fun{PiecewiseSpace{<:Any, <:UnionDomain, <:Real}, <:Real}}","Tuple{typeof(abs), Fun{((PiecewiseSpace{var""##ANON_TV#494"", var""##ANON_TV#495"", var""##ANON_TV#496""} where var""##ANON_TV#494"" <: Any) where var""##ANON_TV#495"" <: UnionDomain) where var""##ANON_TV#496"" <: Real, var""##ANON_TV#497""} where var""##ANON_TV#497"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#494""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#495""), :(Union{}), :UnionDomain, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#496""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#497""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/ApproxFunBase.jl
src/specialfunctions.jl,extrema,mtsig,"Tuple{Fun{PiecewiseSpace{<:Any, <:UnionDomain, <:Real}, <:Real}}","Tuple{Fun{((PiecewiseSpace{var""##ANON_TV#498"", var""##ANON_TV#499"", var""##ANON_TV#500""} where var""##ANON_TV#498"" <: Any) where var""##ANON_TV#499"" <: UnionDomain) where var""##ANON_TV#500"" <: Real, var""##ANON_TV#501""} where var""##ANON_TV#501"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#498""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#499""), :(Union{}), :UnionDomain, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#500""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#501""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/ApproxFunBase.jl
src/Operators/systems.jl,diagm_container,mtsig,"Tuple{Any, Vararg{Pair{<:Integer, <:AbstractVector{<:Operator}}}}","Tuple{Any, Vararg{(Pair{var""##ANON_TV#697"", var""##ANON_TV#698""} where var""##ANON_TV#697"" <: Integer) where var""##ANON_TV#698"" <: (AbstractVector{var""##ANON_TV#699""} where var""##ANON_TV#699"" <: Operator)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#699""), :(Union{}), :Operator, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#697""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#698""), :(Union{}), :(AbstractVector{var""##ANON_TV#699""} where var""##ANON_TV#699"" <: Operator), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/ApproxFunBase.jl
test/test_piracy.jl,Base.findfirst,mtsig,"Tuple{AbstractChar, Set{T}} where Int <: T <: Integer","Tuple{AbstractChar, Set{T}} where Int <: T <: Integer","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :Int, :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/Aqua.jl
src/Impl.jl,Mode,mtsig,"Tuple{Vararg{Union{<:Pair{Symbol}, Symbol}}}","Tuple{Vararg{Union{var""##ANON_TV#471"", Symbol} where var""##ANON_TV#471"" <: Pair{Symbol}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#471""), :(Union{}), :(Pair{Symbol}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ArgumentModes.jl
src/Impl.jl,Base.getindex,mtsig,"Tuple{Type{Mode}, Vararg{Union{Pair{Symbol, <:Union{DataType, Union}}, Symbol}}}","Tuple{Type{Mode}, Vararg{Union{Pair{Symbol, var""##ANON_TV#472""} where var""##ANON_TV#472"" <: Union{DataType, Union}, Symbol}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#472""), :(Union{}), :(Union{DataType, Union}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ArgumentModes.jl
src/Impl.jl,Base.getindex,mtsig,"Tuple{Type{Mode}, typeof(==), Vararg{Union{Pair{Symbol, <:Union{DataType, Union}}, Symbol}}}","Tuple{Type{Mode}, typeof(==), Vararg{Union{Pair{Symbol, var""##ANON_TV#473""} where var""##ANON_TV#473"" <: Union{DataType, Union}, Symbol}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#473""), :(Union{}), :(Union{DataType, Union}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ArgumentModes.jl
src/AnnotatedArrays.jl,AnnotatedArray,mtsig,"Tuple{AbstractArray, Vararg{Pair{K, <:Any}}} where K","Tuple{AbstractArray, Vararg{Pair{K, var""##ANON_TV#454""} where var""##ANON_TV#454"" <: Any}} where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#454""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/ArrayTools.jl
src/AnnotatedArrays.jl,AnnotatedArray,mtsig,"Tuple{AbstractArray, Vararg{Pair{<:AbstractString, <:Any}}}","Tuple{AbstractArray, Vararg{(Pair{var""##ANON_TV#455"", var""##ANON_TV#456""} where var""##ANON_TV#455"" <: AbstractString) where var""##ANON_TV#456"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#455""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#456""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ArrayTools.jl
src/vector_of_arrays.jl,Base.vcat,mtsig,"Tuple{Vararg{VectorOfArrays{U, N} where U}} where N","Tuple{Vararg{VectorOfArrays{U, N} where U}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:U, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/ArraysOfArrays.jl
src/eltypes.jl,finaljuliatype,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Arrow.jl
src/ArrowTypes/src/ArrowTypes.jl,ArrowType,mtsig,"Tuple{Type{Union{Missing, T}}} where T","Tuple{Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Arrow.jl
src/ArrowTypes/src/ArrowTypes.jl,arrowname,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Arrow.jl
src/ArrowTypes/src/ArrowTypes.jl,arrowname,mtsig,"Tuple{Type{Union{T, Nothing}}} where T","Tuple{Type{Union{T, Nothing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Arrow.jl
src/ArrowTypes/src/ArrowTypes.jl,arrowmetadata,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Arrow.jl
src/ArrowTypes/src/ArrowTypes.jl,arrowmetadata,mtsig,"Tuple{Type{Union{T, Nothing}}} where T","Tuple{Type{Union{T, Nothing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Arrow.jl
src/ArrowTypes/src/ArrowTypes.jl,fromarrow,mtsig,"Tuple{Type{Union{Missing, T}}, Missing} where T","Tuple{Type{Union{Missing, T}}, Missing} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Arrow.jl
src/ArrowTypes/src/ArrowTypes.jl,fromarrow,mtsig,"Tuple{Type{Union{Missing, T}}, T} where T","Tuple{Type{Union{Missing, T}}, T} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Arrow.jl
src/ArrowTypes/src/ArrowTypes.jl,fromarrow,mtsig,"Tuple{Type{Union{Missing, T}}, T} where T <: NamedTuple","Tuple{Type{Union{Missing, T}}, T} where T <: NamedTuple","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :NamedTuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Arrow.jl
src/ArrowTypes/src/ArrowTypes.jl,fromarrow,mtsig,"Tuple{Type{Union{Missing, T}}, Any} where T","Tuple{Type{Union{Missing, T}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Arrow.jl
src/ArrowTypes/src/ArrowTypes.jl,default,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Arrow.jl
src/ArrowTypes/src/ArrowTypes.jl,default,mtsig,"Tuple{Type{Union{T, Nothing}}} where T","Tuple{Type{Union{T, Nothing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Arrow.jl
src/ArrowTypes/src/ArrowTypes.jl,default,mtsig,"Tuple{Type{Union{T, Missing, Nothing}}} where T","Tuple{Type{Union{T, Missing, Nothing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Arrow.jl
src/ArrowTypes.jl,ArrowType,mtsig,"Tuple{Type{Union{Missing, T}}} where T","Tuple{Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ArrowTypes.jl
src/ArrowTypes.jl,arrowname,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ArrowTypes.jl
src/ArrowTypes.jl,arrowname,mtsig,"Tuple{Type{Union{T, Nothing}}} where T","Tuple{Type{Union{T, Nothing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ArrowTypes.jl
src/ArrowTypes.jl,arrowmetadata,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ArrowTypes.jl
src/ArrowTypes.jl,arrowmetadata,mtsig,"Tuple{Type{Union{T, Nothing}}} where T","Tuple{Type{Union{T, Nothing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ArrowTypes.jl
src/ArrowTypes.jl,fromarrow,mtsig,"Tuple{Type{Union{Missing, T}}, Missing} where T","Tuple{Type{Union{Missing, T}}, Missing} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ArrowTypes.jl
src/ArrowTypes.jl,fromarrow,mtsig,"Tuple{Type{Union{Missing, T}}, T} where T","Tuple{Type{Union{Missing, T}}, T} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/ArrowTypes.jl
src/ArrowTypes.jl,fromarrow,mtsig,"Tuple{Type{Union{Missing, T}}, T} where T <: NamedTuple","Tuple{Type{Union{Missing, T}}, T} where T <: NamedTuple","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :NamedTuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/ArrowTypes.jl
src/ArrowTypes.jl,fromarrow,mtsig,"Tuple{Type{Union{Missing, T}}, Any} where T","Tuple{Type{Union{Missing, T}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ArrowTypes.jl
src/ArrowTypes.jl,default,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ArrowTypes.jl
src/ArrowTypes.jl,default,mtsig,"Tuple{Type{Union{T, Nothing}}} where T","Tuple{Type{Union{T, Nothing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ArrowTypes.jl
src/ArrowTypes.jl,default,mtsig,"Tuple{Type{Union{T, Missing, Nothing}}} where T","Tuple{Type{Union{T, Missing, Nothing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ArrowTypes.jl
src/equations.jl,Base.diff,mtsig,"Tuple{Atom, EnergyExpression, QuantumOperator, Vector{<:OrbitalOverlap}, Function, Any, Any, Any, Union{Nothing, Dict{Symbol, Tuple{<:QuantumOperator, Bool}}}, Function, Function, Function, Any, Vararg{Any}}","Tuple{Atom, EnergyExpression, QuantumOperator, Vector{var""##ANON_TV#527""} where var""##ANON_TV#527"" <: OrbitalOverlap, Function, Any, Any, Any, Union{Nothing, Dict{Symbol, Tuple{var""##ANON_TV#528"", Bool} where var""##ANON_TV#528"" <: QuantumOperator}}, Function, Function, Function, Any, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#527""), :(Union{}), :OrbitalOverlap, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#528""), :(Union{}), :QuantumOperator, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/AtomicStructure.jl
src/lazy_matmuls.jl,LazyArrays.materialize!,mtsig,"Tuple{MulAdd{<:Any, <:Any, <:Any, <:Any, <:RadialOperator{<:Any, Adjoint{<:Any, <:$MT}}, <:RadialOrbital, <:RadialOrbital}}","Tuple{((((((MulAdd{var""##ANON_TV#539"", var""##ANON_TV#540"", var""##ANON_TV#541"", var""##ANON_TV#542"", var""##ANON_TV#543"", var""##ANON_TV#547"", var""##ANON_TV#548""} where var""##ANON_TV#539"" <: Any) where var""##ANON_TV#540"" <: Any) where var""##ANON_TV#541"" <: Any) where var""##ANON_TV#542"" <: Any) where var""##ANON_TV#543"" <: (RadialOperator{var""##ANON_TV#544"", (Adjoint{var""##ANON_TV#545"", var""##ANON_TV#546""} where var""##ANON_TV#545"" <: Any) where var""##ANON_TV#546"" <: $MT} where var""##ANON_TV#544"" <: Any)) where var""##ANON_TV#547"" <: RadialOrbital) where var""##ANON_TV#548"" <: RadialOrbital}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#545""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#546""), :(Union{}), :($(Expr(:$, :MT))), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#544""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#539""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#540""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#541""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#542""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#543""), :(Union{}), :(RadialOperator{var""##ANON_TV#544"", (Adjoint{var""##ANON_TV#545"", var""##ANON_TV#546""} where var""##ANON_TV#545"" <: Any) where var""##ANON_TV#546"" <: $(Expr(:$, :MT))} where var""##ANON_TV#544"" <: Any), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#547""), :(Union{}), :RadialOrbital, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#548""), :(Union{}), :RadialOrbital, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,true,10,true,true,true,true,true,true,true,true,data/ta-info/all/AtomicStructure.jl
src/overlays.jl,isrenderable,mtsig,Tuple{Type{Array{<:RenderableOverlay}}},"Tuple{Type{Array{var""##ANON_TV#506""} where var""##ANON_TV#506"" <: RenderableOverlay}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#506""), :(Union{}), :RenderableOverlay, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/AutomotiveVisualization.jl
src/overlays.jl,isrenderable,mtsig,Tuple{Type{Tuple{<:RenderableOverlay}}},"Tuple{Type{Tuple{var""##ANON_TV#507""} where var""##ANON_TV#507"" <: RenderableOverlay}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#507""), :(Union{}), :RenderableOverlay, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/AutomotiveVisualization.jl
src/padded_axis.jl,_unsafe_get_element,mtsig,"Tuple{Any, Tuple{Vararg{Union{Integer, P}}}} where P <: OnePad","Tuple{Any, Tuple{Vararg{Union{Integer, P}}}} where P <: OnePad","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:P, :(Union{}), :OnePad, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/AxisIndices.jl
src/padded_axis.jl,_unsafe_get_element,mtsig,"Tuple{Any, Tuple{Vararg{Union{Integer, P}}}} where P <: ZeroPad","Tuple{Any, Tuple{Vararg{Union{Integer, P}}}} where P <: ZeroPad","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:P, :(Union{}), :ZeroPad, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/AxisIndices.jl
src/names.jl,rekey,mtsig,"Tuple{Union{KeyedArray, NdaKa}, Vararg{Pair{<:Integer, <:AbstractVector}}}","Tuple{Union{KeyedArray, NdaKa}, Vararg{(Pair{var""##ANON_TV#379"", var""##ANON_TV#380""} where var""##ANON_TV#379"" <: Integer) where var""##ANON_TV#380"" <: AbstractVector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#379""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#380""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/AxisKeys.jl
src/names.jl,rekey,mtsig,"Tuple{Union{KaNda, NdaKa}, Vararg{Pair{Symbol, <:AbstractVector}}}","Tuple{Union{KaNda, NdaKa}, Vararg{Pair{Symbol, var""##ANON_TV#381""} where var""##ANON_TV#381"" <: AbstractVector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#381""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/AxisKeys.jl
src/table.jl,Table,mtsig,"Tuple{Vararg{Pair{K, <:AbstractVector}}} where K","Tuple{Vararg{Pair{K, var""##ANON_TV#438""} where var""##ANON_TV#438"" <: AbstractVector}} where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#438""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/AxisTables.jl
src/parse_data.jl,process_column,mtsig,"Tuple{AbstractVector{Union{Missing, T}}} where T <: Real","Tuple{AbstractVector{Union{Missing, T}}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/BEASTDataPrep.jl
src/new/elements.jl,hmcXML,mtsig,"Tuple{GeneralizedXMLElement, GeneralizedXMLElement, Union{GeneralizedXMLElement, Nothing}, Nullable{GeneralizedXMLElement}, Nullable{Vector{<:Real}}, Float64, Int, Float64, Float64, Int, Float64, Bool, Vector{Vector{Int}}}","Tuple{GeneralizedXMLElement, GeneralizedXMLElement, Union{GeneralizedXMLElement, Nothing}, Nullable{GeneralizedXMLElement}, Nullable{Vector{var""##ANON_TV#383""} where var""##ANON_TV#383"" <: Real}, Float64, Int, Float64, Float64, Int, Float64, Bool, Vector{Vector{Int}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#383""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/BEASTXMLConstructor.jl
src/banded/BandedMatrix.jl,BandedMatrix,mtsig,"Tuple{Tuple{Vararg{Pair{<:Integer, <:AbstractVector}}}, NTuple{2, Integer}, NTuple{2, Integer}} where T","Tuple{Tuple{Vararg{(Pair{var""##ANON_TV#958"", var""##ANON_TV#959""} where var""##ANON_TV#958"" <: Integer) where var""##ANON_TV#959"" <: AbstractVector}}, NTuple{2, Integer}, NTuple{2, Integer}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#958""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#959""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,true,true,true,true,true,true,data/ta-info/all/BandedMatrices.jl
src/banded/BandedMatrix.jl,BandedMatrix,mtsig,"Tuple{Tuple{Vararg{Pair{<:Integer, <:AbstractVector}}}, NTuple{2, Integer}, NTuple{2, Integer}}","Tuple{Tuple{Vararg{(Pair{var""##ANON_TV#960"", var""##ANON_TV#961""} where var""##ANON_TV#960"" <: Integer) where var""##ANON_TV#961"" <: AbstractVector}}, NTuple{2, Integer}, NTuple{2, Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#960""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#961""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/BandedMatrices.jl
src/banded/BandedMatrix.jl,BandedMatrix,mtsig,"Tuple{Tuple{Vararg{Pair{<:Integer, <:AbstractVector}}}, NTuple{2, Integer}} where T","Tuple{Tuple{Vararg{(Pair{var""##ANON_TV#962"", var""##ANON_TV#963""} where var""##ANON_TV#962"" <: Integer) where var""##ANON_TV#963"" <: AbstractVector}}, NTuple{2, Integer}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#962""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#963""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,true,true,true,true,true,true,data/ta-info/all/BandedMatrices.jl
src/banded/BandedMatrix.jl,BandedMatrix,mtsig,"Tuple{Tuple{Vararg{Pair{<:Integer, <:AbstractVector}}}, NTuple{2, Integer}}","Tuple{Tuple{Vararg{(Pair{var""##ANON_TV#964"", var""##ANON_TV#965""} where var""##ANON_TV#964"" <: Integer) where var""##ANON_TV#965"" <: AbstractVector}}, NTuple{2, Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#964""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#965""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/BandedMatrices.jl
src/banded/BandedMatrix.jl,BandedMatrix,mtsig,"Tuple{Vararg{Pair{<:Integer, <:AbstractVector}}} where T","Tuple{Vararg{(Pair{var""##ANON_TV#966"", var""##ANON_TV#967""} where var""##ANON_TV#966"" <: Integer) where var""##ANON_TV#967"" <: AbstractVector}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#966""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#967""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,true,true,true,true,true,true,data/ta-info/all/BandedMatrices.jl
src/banded/BandedMatrix.jl,BandedMatrix,mtsig,"Tuple{Vararg{Pair{<:Integer, <:AbstractVector}}}","Tuple{Vararg{(Pair{var""##ANON_TV#968"", var""##ANON_TV#969""} where var""##ANON_TV#968"" <: Integer) where var""##ANON_TV#969"" <: AbstractVector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#968""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#969""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/BandedMatrices.jl
src/NoBang/singletoncontainers.jl,Tables.istable,mtsig,Tuple{Type{SingletonVector{<:NamedTuple}}},"Tuple{Type{SingletonVector{var""##ANON_TV#495""} where var""##ANON_TV#495"" <: NamedTuple}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#495""), :(Union{}), :NamedTuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/BangBang.jl
src/utils_partitions_structs.jl,PartitionType,mtsig,"Tuple{Vararg{Union{String, Pair{String, <:Any}, PartitioningConstraint, Function}}}","Tuple{Vararg{Union{String, Pair{String, var""##ANON_TV#425""} where var""##ANON_TV#425"" <: Any, PartitioningConstraint, Function}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#425""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Banyan.jl
src/array.jl,Base.map,mtsig,"(Tuple{Any, Vararg{Array{<:Any, N}}, Any} where N) where T","(Tuple{Any, Vararg{Array{var""##ANON_TV#570"", N} where var""##ANON_TV#570"" <: Any}, Any} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#570""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/BanyanArrays.jl
src/bases/modifiers/tensorproduct_dict.jl,product_domaintype,mtsig,"Tuple{Vararg{Dictionary{<:Number}, N}} where N","Tuple{Vararg{Dictionary{var""##ANON_TV#472""} where var""##ANON_TV#472"" <: Number, N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#472""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/BasisFunctions.jl
src/GherkinExperimental.jl,<NOT A FUNSIG>,tyassorann,Vector{Parser{<:T}},"Vector{Parser{var""##ANON_TV#865""} where var""##ANON_TV#865"" <: T}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#865""), :(Union{}), :T, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Behavior.jl
src/Selection.jl,<NOT A FUNSIG>,tyassorann,Vector{TagExpressionParser{<:T}},"Vector{TagExpressionParser{var""##ANON_TV#869""} where var""##ANON_TV#869"" <: T}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#869""), :(Union{}), :T, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Behavior.jl
src/Selection.jl,<NOT A FUNSIG>,tyassorann,Vector{TagExpressionParser{<:TagExpression}},"Vector{TagExpressionParser{var""##ANON_TV#870""} where var""##ANON_TV#870"" <: TagExpression}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#870""), :(Union{}), :TagExpression, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Behavior.jl
src/Nn/Nn.jl,<NOT A FUNSIG>,tyassorann,"Tuple{Vararg{Array{Float64, N} where N}}","Tuple{Vararg{Array{Float64, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/BetaML.jl
src/Bijectors.jl,maporbroadcast,mtsig,"Tuple{Any, Vararg{AbstractArray{<:Any, N}}} where N","Tuple{Any, Vararg{AbstractArray{var""##ANON_TV#446"", N} where var""##ANON_TV#446"" <: Any}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#446""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/Bijectors.jl
src/compat/tracker.jl,Bijectors.maporbroadcast,mtsig,"(Tuple{Any, TrackedArray{T, N}, Vararg{AbstractArray{<:TrackedReal}}} where N) where T","(Tuple{Any, TrackedArray{T, N}, Vararg{AbstractArray{var""##ANON_TV#548""} where var""##ANON_TV#548"" <: TrackedReal}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#548""), :(Union{}), :TrackedReal, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Bijectors.jl
src/BinaryDecisionDiagrams.jl,and,mtsig,"Tuple{Vararg{Union{T, Diagram}}} where T <: Integer","Tuple{Vararg{Union{T, Diagram}}} where T <: Integer","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/BinaryDecisionDiagrams.jl
src/BinaryDecisionDiagrams.jl,or,mtsig,"Tuple{Vararg{Union{T, Diagram}}} where T <: Integer","Tuple{Vararg{Union{T, Diagram}}} where T <: Integer","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/BinaryDecisionDiagrams.jl
src/Jackknife.jl,jackknife_full,mtsig,"Tuple{Function, Vararg{AbstractVector{<:Number}}}","Tuple{Function, Vararg{AbstractVector{var""##ANON_TV#483""} where var""##ANON_TV#483"" <: Number}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#483""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/BinningAnalysis.jl
src/Jackknife.jl,jackknife,mtsig,"Tuple{Function, Vararg{AbstractVector{<:Number}}}","Tuple{Function, Vararg{AbstractVector{var""##ANON_TV#484""} where var""##ANON_TV#484"" <: Number}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#484""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/BinningAnalysis.jl
src/Jackknife.jl,leaveoneout,mtsig,"Tuple{Function, Vararg{AbstractVector{<:Number}}}","Tuple{Function, Vararg{AbstractVector{var""##ANON_TV#485""} where var""##ANON_TV#485"" <: Number}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#485""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/BinningAnalysis.jl
src/Jackknife.jl,var,mtsig,"Tuple{Function, Vararg{AbstractVector{<:Number}}}","Tuple{Function, Vararg{AbstractVector{var""##ANON_TV#486""} where var""##ANON_TV#486"" <: Number}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#486""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/BinningAnalysis.jl
src/Jackknife.jl,std_error,mtsig,"Tuple{Function, Vararg{AbstractVector{<:Number}}}","Tuple{Function, Vararg{AbstractVector{var""##ANON_TV#489""} where var""##ANON_TV#489"" <: Number}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#489""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/BinningAnalysis.jl
src/Jackknife.jl,bias,mtsig,"Tuple{Function, Vararg{AbstractVector{<:Number}}, AbstractVector{<:Number}}","Tuple{Function, Vararg{AbstractVector{var""##ANON_TV#492""} where var""##ANON_TV#492"" <: Number}, AbstractVector{var""##ANON_TV#493""} where var""##ANON_TV#493"" <: Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#492""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#493""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/BinningAnalysis.jl
src/Jackknife.jl,estimate,mtsig,"Tuple{Function, Vararg{AbstractVector{<:Number}}, AbstractVector{<:Number}}","Tuple{Function, Vararg{AbstractVector{var""##ANON_TV#494""} where var""##ANON_TV#494"" <: Number}, AbstractVector{var""##ANON_TV#495""} where var""##ANON_TV#495"" <: Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#494""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#495""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/BinningAnalysis.jl
src/hwhandlers/sbitstream/smaxhandler.jl,gethandler,mtsig,"Tuple{Bool, Type{typeof(max)}, Type{<:SBitstreamLike}, Type{<:SBitstreamLike}, Vararg{Type{<:SBitstreamLike}}}","Tuple{Bool, Type{typeof(max)}, Type{var""##ANON_TV#598""} where var""##ANON_TV#598"" <: SBitstreamLike, Type{var""##ANON_TV#599""} where var""##ANON_TV#599"" <: SBitstreamLike, Vararg{Type{var""##ANON_TV#600""} where var""##ANON_TV#600"" <: SBitstreamLike}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#598""), :(Union{}), :SBitstreamLike, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#599""), :(Union{}), :SBitstreamLike, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#600""), :(Union{}), :SBitstreamLike, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/BitSAD.jl
src/types/sbitstream.jl,is_trace_primitive,mtsig,"Tuple{Type{typeof(max)}, Type{<:SBitstream}, Type{<:SBitstream}, Vararg{Type{<:SBitstream}}}","Tuple{Type{typeof(max)}, Type{var""##ANON_TV#649""} where var""##ANON_TV#649"" <: SBitstream, Type{var""##ANON_TV#650""} where var""##ANON_TV#650"" <: SBitstream, Vararg{Type{var""##ANON_TV#651""} where var""##ANON_TV#651"" <: SBitstream}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#649""), :(Union{}), :SBitstream, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#650""), :(Union{}), :SBitstream, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#651""), :(Union{}), :SBitstream, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/BitSAD.jl
src/types/sbitstream.jl,is_trace_primitive,mtsig,"Tuple{Type{typeof(Base.broadcasted)}, Type{typeof(max)}, Type{<:SBitstreamLike}, Type{<:SBitstreamLike}, Vararg{Type{<:SBitstreamLike}}}","Tuple{Type{typeof(Base.broadcasted)}, Type{typeof(max)}, Type{var""##ANON_TV#652""} where var""##ANON_TV#652"" <: SBitstreamLike, Type{var""##ANON_TV#653""} where var""##ANON_TV#653"" <: SBitstreamLike, Vararg{Type{var""##ANON_TV#654""} where var""##ANON_TV#654"" <: SBitstreamLike}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#652""), :(Union{}), :SBitstreamLike, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#653""), :(Union{}), :SBitstreamLike, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#654""), :(Union{}), :SBitstreamLike, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/BitSAD.jl
src/blockarray.jl,_BlockArray,mtsig,"((Tuple{R, Vararg{AbstractVector{<:Integer}, N}} where R <: AbstractArray{<:AbstractArray{T, N}, N}) where N) where T","((Tuple{R, Vararg{AbstractVector{var""##ANON_TV#569""} where var""##ANON_TV#569"" <: Integer, N}} where R <: (AbstractArray{var""##ANON_TV#570"", N} where var""##ANON_TV#570"" <: AbstractArray{T, N})) where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#570""), :(Union{}), :(AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#569""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :(AbstractArray{var""##ANON_TV#570"", N} where var""##ANON_TV#570"" <: AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,_BlockArray,mtsig,"(Tuple{R, Vararg{AbstractVector{<:Integer}, N}} where R <: AbstractArray{<:AbstractArray{<:Any, N}, N}) where N","(Tuple{R, Vararg{AbstractVector{var""##ANON_TV#572""} where var""##ANON_TV#572"" <: Integer, N}} where R <: (AbstractArray{var""##ANON_TV#573"", N} where var""##ANON_TV#573"" <: (AbstractArray{var""##ANON_TV#574"", N} where var""##ANON_TV#574"" <: Any))) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#574""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#573""), :(Union{}), :(AbstractArray{var""##ANON_TV#574"", N} where var""##ANON_TV#574"" <: Any), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#572""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :(AbstractArray{var""##ANON_TV#573"", N} where var""##ANON_TV#573"" <: (AbstractArray{var""##ANON_TV#574"", N} where var""##ANON_TV#574"" <: Any)), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,_BlockArray,mtsig,"((Tuple{Type{R}, Vararg{AbstractVector{<:Integer}, N}} where R <: AbstractArray{<:AbstractArray{T, N}, N}) where N) where T","((Tuple{Type{R}, Vararg{AbstractVector{var""##ANON_TV#575""} where var""##ANON_TV#575"" <: Integer, N}} where R <: (AbstractArray{var""##ANON_TV#576"", N} where var""##ANON_TV#576"" <: AbstractArray{T, N})) where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#576""), :(Union{}), :(AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#575""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :(AbstractArray{var""##ANON_TV#576"", N} where var""##ANON_TV#576"" <: AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,undef_blocks_BlockArray,mtsig,"((Tuple{Type{R}, Vararg{AbstractVector{<:Integer}, N}} where R <: AbstractArray{<:AbstractArray{T, N}, N}) where N) where T","((Tuple{Type{R}, Vararg{AbstractVector{var""##ANON_TV#578""} where var""##ANON_TV#578"" <: Integer, N}} where R <: (AbstractArray{var""##ANON_TV#579"", N} where var""##ANON_TV#579"" <: AbstractArray{T, N})) where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#579""), :(Union{}), :(AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#578""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :(AbstractArray{var""##ANON_TV#579"", N} where var""##ANON_TV#579"" <: AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockArray,mtsig,"((Tuple{UndefBlocksInitializer, Type{R}, Vararg{AbstractVector{<:Integer}, N}} where R <: AbstractArray{T, N}) where N) where T","((Tuple{UndefBlocksInitializer, Type{R}, Vararg{AbstractVector{var""##ANON_TV#580""} where var""##ANON_TV#580"" <: Integer, N}} where R <: AbstractArray{T, N}) where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#580""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :(AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockArray,mtsig,"(Tuple{UndefBlocksInitializer, Vararg{AbstractVector{<:Integer}, N}} where N) where T","(Tuple{UndefBlocksInitializer, Vararg{AbstractVector{var""##ANON_TV#581""} where var""##ANON_TV#581"" <: Integer, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#581""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,true,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockArray,mtsig,"(Tuple{UndefBlocksInitializer, Vararg{AbstractVector{<:Integer}, N}} where N) where T","(Tuple{UndefBlocksInitializer, Vararg{AbstractVector{var""##ANON_TV#582""} where var""##ANON_TV#582"" <: Integer, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#582""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,true,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockArray,mtsig,"((Tuple{UndefBlocksInitializer, Vararg{AbstractVector{<:Integer}, N}} where R <: AbstractArray{<:AbstractArray{T, N}, N}) where N) where T","((Tuple{UndefBlocksInitializer, Vararg{AbstractVector{var""##ANON_TV#583""} where var""##ANON_TV#583"" <: Integer, N}} where R <: (AbstractArray{var""##ANON_TV#584"", N} where var""##ANON_TV#584"" <: AbstractArray{T, N})) where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#584""), :(Union{}), :(AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#583""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :(AbstractArray{var""##ANON_TV#584"", N} where var""##ANON_TV#584"" <: AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,initialized_blocks_BlockArray,mtsig,"((Tuple{Type{R}, Vararg{AbstractVector{<:Integer}, N}} where R <: AbstractArray{<:AbstractArray{T, N}, N}) where N) where T","((Tuple{Type{R}, Vararg{AbstractVector{var""##ANON_TV#585""} where var""##ANON_TV#585"" <: Integer, N}} where R <: (AbstractArray{var""##ANON_TV#586"", N} where var""##ANON_TV#586"" <: AbstractArray{T, N})) where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#586""), :(Union{}), :(AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#585""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :(AbstractArray{var""##ANON_TV#586"", N} where var""##ANON_TV#586"" <: AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockArray,mtsig,"(Tuple{UndefInitializer, Vararg{AbstractVector{<:Integer}, N}} where N) where T","(Tuple{UndefInitializer, Vararg{AbstractVector{var""##ANON_TV#589""} where var""##ANON_TV#589"" <: Integer, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#589""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,true,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockArray,mtsig,"(Tuple{UndefInitializer, Vararg{AbstractVector{<:Integer}, N}} where N) where T","(Tuple{UndefInitializer, Vararg{AbstractVector{var""##ANON_TV#590""} where var""##ANON_TV#590"" <: Integer, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#590""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,true,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockArray,mtsig,"((Tuple{UndefInitializer, Vararg{AbstractVector{<:Integer}, N}} where R <: AbstractArray{<:AbstractArray{T, N}, N}) where N) where T","((Tuple{UndefInitializer, Vararg{AbstractVector{var""##ANON_TV#591""} where var""##ANON_TV#591"" <: Integer, N}} where R <: (AbstractArray{var""##ANON_TV#592"", N} where var""##ANON_TV#592"" <: AbstractArray{T, N})) where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#592""), :(Union{}), :(AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#591""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :(AbstractArray{var""##ANON_TV#592"", N} where var""##ANON_TV#592"" <: AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockArray,mtsig,"((Tuple{AbstractArray{V, N}, Vararg{AbstractVector{<:Integer}, N}} where N) where V) where T","((Tuple{AbstractArray{V, N}, Vararg{AbstractVector{var""##ANON_TV#594""} where var""##ANON_TV#594"" <: Integer, N}} where N) where V) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#594""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockArray,mtsig,"(Tuple{AbstractArray{T, N}, Vararg{AbstractVector{<:Integer}, N}} where N) where T","(Tuple{AbstractArray{T, N}, Vararg{AbstractVector{var""##ANON_TV#595""} where var""##ANON_TV#595"" <: Integer, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#595""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockMatrix,mtsig,"Tuple{AbstractMatrix, Vararg{AbstractVector{<:Integer}, 2}}","Tuple{AbstractMatrix, Vararg{AbstractVector{var""##ANON_TV#598""} where var""##ANON_TV#598"" <: Integer, 2}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#598""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockArray,mtsig,"Tuple{UniformScaling, Vararg{AbstractVector{<:Integer}, 2}} where T","Tuple{UniformScaling, Vararg{AbstractVector{var""##ANON_TV#599""} where var""##ANON_TV#599"" <: Integer, 2}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#599""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,true,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockArray,mtsig,"Tuple{UniformScaling{T}, Vararg{AbstractVector{<:Integer}, 2}} where T","Tuple{UniformScaling{T}, Vararg{AbstractVector{var""##ANON_TV#600""} where var""##ANON_TV#600"" <: Integer, 2}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#600""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockMatrix,mtsig,"Tuple{UniformScaling, Vararg{AbstractVector{<:Integer}, 2}}","Tuple{UniformScaling, Vararg{AbstractVector{var""##ANON_TV#601""} where var""##ANON_TV#601"" <: Integer, 2}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#601""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,BlockMatrix,mtsig,"Tuple{UniformScaling, Vararg{AbstractVector{<:Integer}, 2}} where T","Tuple{UniformScaling, Vararg{AbstractVector{var""##ANON_TV#602""} where var""##ANON_TV#602"" <: Integer, 2}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#602""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,true,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/blockarray.jl,mortar,mtsig,"(Tuple{AbstractArray{R, N}, Vararg{AbstractVector{<:Integer}, N}} where N) where R","(Tuple{AbstractArray{R, N}, Vararg{AbstractVector{var""##ANON_TV#603""} where var""##ANON_TV#603"" <: Integer, N}} where N) where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#603""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/pseudo_blockarray.jl,convert,mtsig,"(Tuple{Type{AbstractArray{V, N} where V}, PseudoBlockArray{T, N}} where N) where T","(Tuple{Type{AbstractArray{V, N} where V}, PseudoBlockArray{T, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/BlockArrays.jl
src/views.jl,Base.unsafe_view,mtsig,"Tuple{BlockArray{<:Any, N}, Vararg{BlockSlice{<:BlockIndexRange{1}}, N}} where N","Tuple{BlockArray{var""##ANON_TV#834"", N} where var""##ANON_TV#834"" <: Any, Vararg{BlockSlice{var""##ANON_TV#835""} where var""##ANON_TV#835"" <: BlockIndexRange{1}, N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#834""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#835""), :(Union{}), :(BlockIndexRange{1}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/views.jl,Base.unsafe_view,mtsig,"Tuple{PseudoBlockArray{<:Any, N}, Vararg{BlockSlice{<:BlockIndexRange{1}}, N}} where N","Tuple{PseudoBlockArray{var""##ANON_TV#836"", N} where var""##ANON_TV#836"" <: Any, Vararg{BlockSlice{var""##ANON_TV#837""} where var""##ANON_TV#837"" <: BlockIndexRange{1}, N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#836""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#837""), :(Union{}), :(BlockIndexRange{1}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/views.jl,Base.unsafe_view,mtsig,"(Tuple{ReshapedArray{<:Any, N, <:AbstractBlockArray{<:Any, M}}, Vararg{BlockSlice{<:BlockIndexRange{1}}, N}} where M) where N","(Tuple{(ReshapedArray{var""##ANON_TV#838"", N, var""##ANON_TV#839""} where var""##ANON_TV#838"" <: Any) where var""##ANON_TV#839"" <: (AbstractBlockArray{var""##ANON_TV#840"", M} where var""##ANON_TV#840"" <: Any), Vararg{BlockSlice{var""##ANON_TV#841""} where var""##ANON_TV#841"" <: BlockIndexRange{1}, N}} where M) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#840""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#838""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#839""), :(Union{}), :(AbstractBlockArray{var""##ANON_TV#840"", M} where var""##ANON_TV#840"" <: Any), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#841""), :(Union{}), :(BlockIndexRange{1}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,6,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/views.jl,Base.unsafe_view,mtsig,"Tuple{Array{<:Any, N}, Vararg{BlockSlice{<:BlockIndexRange{1}}, N}} where N","Tuple{Array{var""##ANON_TV#842"", N} where var""##ANON_TV#842"" <: Any, Vararg{BlockSlice{var""##ANON_TV#843""} where var""##ANON_TV#843"" <: BlockIndexRange{1}, N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#842""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#843""), :(Union{}), :(BlockIndexRange{1}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/views.jl,hasmatchingblocks,mtsig,"Tuple{SubArray{<:Any, 2, <:Any, <:NTuple{2, BlockSlice{<:BlockRange{1}}}}}","Tuple{((SubArray{var""##ANON_TV#885"", 2, var""##ANON_TV#886"", var""##ANON_TV#887""} where var""##ANON_TV#885"" <: Any) where var""##ANON_TV#886"" <: Any) where var""##ANON_TV#887"" <: NTuple{2, BlockSlice{var""##ANON_TV#888""} where var""##ANON_TV#888"" <: BlockRange{1}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#888""), :(Union{}), :(BlockRange{1}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#885""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#886""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#887""), :(Union{}), :(NTuple{2, BlockSlice{var""##ANON_TV#888""} where var""##ANON_TV#888"" <: BlockRange{1}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/BlockArrays.jl
src/utils.jl,to_cartesian,mtsig,"Tuple{Val{N}, Vararg{Union{Int, NTuple{N, Int}, CartesianIndex{N}}}} where N","Tuple{Val{N}, Vararg{Union{Int, NTuple{N, Int}, CartesianIndex{N}}}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/BlockMatching.jl
src/optimizers.jl,<NOT A FUNSIG>,tyassorann,Vector{AbstractOptimizer{<:AbstractRBM}},"Vector{AbstractOptimizer{var""##ANON_TV#668""} where var""##ANON_TV#668"" <: AbstractRBM}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#668""), :(Union{}), :AbstractRBM, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/BoltzmannMachines.jl
src/noise_model.jl,<NOT A FUNSIG>,tyassorann,Vector{Type{<:Gate}},"Vector{Type{var""##ANON_TV#386""} where var""##ANON_TV#386"" <: Gate}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#386""), :(Union{}), :Gate, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Braket.jl
src/noise_model.jl,GateCriteria,mtsig,"Tuple{Vector{Type{<:Gate}}, Vector{Union{Int, Vector{Int}}}}","Tuple{Vector{Type{var""##ANON_TV#387""} where var""##ANON_TV#387"" <: Gate}, Vector{Union{Int, Vector{Int}}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#387""), :(Union{}), :Gate, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Braket.jl
src/noise_model.jl,GateCriteria,mtsig,"Tuple{Union{Type{<:Gate}, Vector{Type{<:Gate}}}}","Tuple{Union{Type{var""##ANON_TV#388""} where var""##ANON_TV#388"" <: Gate, Vector{Type{var""##ANON_TV#389""} where var""##ANON_TV#389"" <: Gate}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#388""), :(Union{}), :Gate, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#389""), :(Union{}), :Gate, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Braket.jl
src/generate.jl,generate,mtsig,"Tuple{IO, Vararg{Union{Pair{<:AbstractString, Vector{Converted}}, Pair{Symbol, Vector{Converted}}, Pair{Nothing, Vector{Converted}}}}, String, Bool, Bool}","Tuple{IO, Vararg{Union{Pair{var""##ANON_TV#385"", Vector{Converted}} where var""##ANON_TV#385"" <: AbstractString, Pair{Symbol, Vector{Converted}}, Pair{Nothing, Vector{Converted}}}}, String, Bool, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#385""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CBindingGen.jl
src/algorithms/Finito/Finito.jl,Finito,mtsig,"Tuple{Maybe{Union{Array{R}, R}}, Any, Bool, Bool, Tuple{Bool, Int}, Int, Bool, Int, R, R, R} where R","Tuple{Maybe{Union{Array{R}, R}}, Any, Bool, Bool, Tuple{Bool, Int}, Int, Bool, Int, R, R, R} where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/CIAOAlgorithms.jl
src/algorithms/ProShI/ProShI.jl,Proshi,mtsig,"Tuple{Maybe{Union{Array{R}, R}}, Any, Tuple{Bool, Int}, Int, Bool, Int, R} where R","Tuple{Maybe{Union{Array{R}, R}}, Any, Tuple{Bool, Int}, Int, Bool, Int, R} where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/CIAOAlgorithms.jl
src/util.jl,map_tupleargs,mtsig,"Tuple{Any, Vararg{Type{<:Tuple{}}}}","Tuple{Any, Vararg{Type{var""##ANON_TV#1042""} where var""##ANON_TV#1042"" <: Tuple{}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1042""), :(Union{}), :(Tuple{}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CMBLensing.jl
src/MOI/conflicts.jl,MOI.supports,mtsig,"Tuple{Optimizer, MOI.ConstraintConflictStatus, Type{MOI.ConstraintIndex{<:MOI.VariableIndex, <:_SCALAR_SETS}}}","Tuple{Optimizer, MOI.ConstraintConflictStatus, Type{(MOI.ConstraintIndex{var""##ANON_TV#647"", var""##ANON_TV#648""} where var""##ANON_TV#647"" <: MOI.VariableIndex) where var""##ANON_TV#648"" <: _SCALAR_SETS}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#647""), :(Union{}), :(MOI.VariableIndex), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#648""), :(Union{}), :_SCALAR_SETS, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/CPLEX.jl
src/MOI/conflicts.jl,MOI.supports,mtsig,"Tuple{Optimizer, MOI.ConstraintConflictStatus, Type{MOI.ConstraintIndex{<:MOI.ScalarAffineFunction, <:Union{MOI.LessThan, MOI.GreaterThan, MOI.EqualTo}}}}","Tuple{Optimizer, MOI.ConstraintConflictStatus, Type{(MOI.ConstraintIndex{var""##ANON_TV#649"", var""##ANON_TV#650""} where var""##ANON_TV#649"" <: MOI.ScalarAffineFunction) where var""##ANON_TV#650"" <: Union{MOI.LessThan, MOI.GreaterThan, MOI.EqualTo}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#649""), :(Union{}), :(MOI.ScalarAffineFunction), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#650""), :(Union{}), :(Union{MOI.LessThan, MOI.GreaterThan, MOI.EqualTo}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/CPLEX.jl
src/utils.jl,_promote,mtsig,"((Tuple{Type{PooledVector{Union{T, Missing}, R, RA}}, PooledVector} where RA) where R) where T","((Tuple{Type{PooledVector{Union{T, Missing}, R, RA}}, PooledVector} where RA) where R) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:RA, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,false,false,true,true,data/ta-info/all/CSV.jl
src/utils.jl,_promote,mtsig,"((Tuple{Type{PooledVector{Union{T, Missing}, R, RA}}, MissingVector} where RA) where R) where T","((Tuple{Type{PooledVector{Union{T, Missing}, R, RA}}, MissingVector} where RA) where R) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:RA, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,false,false,true,true,data/ta-info/all/CSV.jl
lib/cufft/util.jl,complexfloat,mtsig,Tuple{DenseCuArray{Complex{<:cufftReals}}},"Tuple{DenseCuArray{Complex{var""##ANON_TV#1057""} where var""##ANON_TV#1057"" <: cufftReals}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1057""), :(Union{}), :cufftReals, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CUDA.jl
lib/custatevec/src/statevec.jl,expectationsOnPauliBasis,mtsig,"Tuple{CuStateVec, Vector{Pauli}, Vector{Vector{<:Integer}}}","Tuple{CuStateVec, Vector{Pauli}, Vector{Vector{var""##ANON_TV#1275""} where var""##ANON_TV#1275"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1275""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CUDA.jl
src/ReferenceModels.jl,construct_reference_models,mtsig,"Tuple{Dict{Symbol, Vector{T} where T}, OptInt}","Tuple{Dict{Symbol, Vector{T} where T}, OptInt}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CalibrateEDMF.jl
src/ReferenceModels.jl,ReferenceModelBatch,mtsig,"Tuple{Dict{Symbol, Vector{T} where T}, Bool}","Tuple{Dict{Symbol, Vector{T} where T}, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CalibrateEDMF.jl
src/GaussianProcess.jl,<NOT A FUNSIG>,tyassorann,"Vector{Union{<:GaussianProcesses.GPE, <:PyObject, Nothing}}","Vector{(Union{var""##ANON_TV#468"", var""##ANON_TV#469"", Nothing} where var""##ANON_TV#468"" <: GaussianProcesses.GPE) where var""##ANON_TV#469"" <: PyObject}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#468""), :(Union{}), :(GaussianProcesses.GPE), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#469""), :(Union{}), :PyObject, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/CalibrateEmulateSample.jl
src/Header-and-Data-Input.jl,_table_data_types,mtsig,Tuple{Vector{Vector{T} where T}},Tuple{Vector{Vector{T} where T}},"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CamiXon.jl
src/Header-and-Data-Input.jl,_TABLE_input,mtsig,Tuple{Vector{Vector{T} where T}},Tuple{Vector{Vector{T} where T}},"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CamiXon.jl
src/canvas_objects.jl,Internals.convert′,mtsig,"Tuple{Type{Union{CO, Nothing}}, Any} where CO <: CanvasObject","Tuple{Type{Union{CO, Nothing}}, Any} where CO <: CanvasObject","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:CO, :(Union{}), :CanvasObject, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Canvas.jl
src/canvas_objects.jl,Internals.convert′,mtsig,"Tuple{Type{Union{Vector{CO}, Nothing}}, Any} where CO <: CanvasObject","Tuple{Type{Union{Vector{CO}, Nothing}}, Any} where CO <: CanvasObject","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:CO, :(Union{}), :CanvasObject, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Canvas.jl
ext/CategoricalArraysStructTypesExt.jl,StructTypes.construct,mtsig,"Tuple{Type{<:CategoricalArray{Union{Missing, T}}}, AbstractVector} where T","Tuple{Type{var""##ANON_TV#595""} where var""##ANON_TV#595"" <: CategoricalArray{Union{Missing, T}}, AbstractVector} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#595""), :(Union{}), :(CategoricalArray{Union{Missing, T}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/CategoricalArrays.jl
ext/CategoricalArraysStructTypesExt.jl,StructTypes.construct,mtsig,"Tuple{Type{<:CategoricalArray{Union{Missing, T}}}, Vector} where T","Tuple{Type{var""##ANON_TV#596""} where var""##ANON_TV#596"" <: CategoricalArray{Union{Missing, T}}, Vector} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#596""), :(Union{}), :(CategoricalArray{Union{Missing, T}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/CategoricalArrays.jl
src/array.jl,similar,mtsig,"(((((Tuple{CategoricalArray{S, M, Q}, Type{Union{CategoricalValue{T, R}, Missing}}, NTuple{N, Int}} where Q) where M) where S) where N) where T) where R","(((((Tuple{CategoricalArray{S, M, Q}, Type{Union{CategoricalValue{T, R}, Missing}}, NTuple{N, Int}} where Q) where M) where S) where N) where T) where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:Q, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,6,true,true,false,true,false,false,true,true,data/ta-info/all/CategoricalArrays.jl
src/array.jl,similar,mtsig,"((((Tuple{CategoricalArray{S, M, Q}, Type{Union{CategoricalValue{T}, Missing}}, NTuple{N, Int}} where Q) where M) where S) where N) where T","((((Tuple{CategoricalArray{S, M, Q}, Type{Union{CategoricalValue{T}, Missing}}, NTuple{N, Int}} where Q) where M) where S) where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:Q, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,false,true,false,false,true,true,data/ta-info/all/CategoricalArrays.jl
src/array.jl,similar,mtsig,"((Tuple{$A, Type{Union{CategoricalValue{T, R}, Missing}}, NTuple{N, Int}} where N) where R) where T","((Tuple{$A, Type{Union{CategoricalValue{T, R}, Missing}}, NTuple{N, Int}} where N) where R) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,true,3,true,true,false,true,false,false,true,true,data/ta-info/all/CategoricalArrays.jl
src/array.jl,similar,mtsig,"(Tuple{$A, Type{Union{CategoricalValue{T}, Missing}}, NTuple{N, Int}} where N) where T","(Tuple{$A, Type{Union{CategoricalValue{T}, Missing}}, NTuple{N, Int}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,true,2,true,true,false,true,false,false,true,true,data/ta-info/all/CategoricalArrays.jl
src/array.jl,similar,mtsig,"((Tuple{Type{T}, Dims} where T <: Array{Union{CategoricalValue{U, R}, Missing}}) where R) where U","((Tuple{Type{T}, Dims} where T <: Array{Union{CategoricalValue{U, R}, Missing}}) where R) where U","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Array{Union{CategoricalValue{U, R}, Missing}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:U, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,false,false,true,true,data/ta-info/all/CategoricalArrays.jl
src/array.jl,similar,mtsig,"(Tuple{Type{T}, Dims} where T <: Array{Union{CategoricalValue{U}, Missing}}) where U","(Tuple{Type{T}, Dims} where T <: Array{Union{CategoricalValue{U}, Missing}}) where U","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Array{Union{CategoricalValue{U}, Missing}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:U, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/CategoricalArrays.jl
src/value.jl,DataAPI.defaultarray,mtsig,"(Tuple{Type{Union{CategoricalValue{T, R}, Missing}}, Any} where R) where T","(Tuple{Type{Union{CategoricalValue{T, R}, Missing}}, Any} where R) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/CategoricalArrays.jl
src/normalizations.jl,_typeofprod,mtsig,"Tuple{NTuple{N, Vector{<:Real}}} where N","Tuple{NTuple{N, Vector{var""##ANON_TV#385""} where var""##ANON_TV#385"" <: Real}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#385""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/CategoricalMonteCarlo.jl
src/normalizations.jl,algorithm2_2!,mtsig,"(Tuple{Vector{S}, NTuple{M, Vector{Int}}, NTuple{M, Vector{<:Real}}} where M) where S <: Real","(Tuple{Vector{S}, NTuple{M, Vector{Int}}, NTuple{M, Vector{var""##ANON_TV#386""} where var""##ANON_TV#386"" <: Real}} where M) where S <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#386""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/CategoricalMonteCarlo.jl
src/normalizations.jl,algorithm2_2,mtsig,"Tuple{NTuple{M, Vector{Int}}, NTuple{M, Vector{<:Real}}} where M","Tuple{NTuple{M, Vector{Int}}, NTuple{M, Vector{var""##ANON_TV#388""} where var""##ANON_TV#388"" <: Real}} where M","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#388""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,true,true,true,data/ta-info/all/CategoricalMonteCarlo.jl
src/CategoryData.jl,Base.IteratorSize,mtsig,Tuple{Type{SectorValues{<:Object}}},"Tuple{Type{SectorValues{var""##ANON_TV#1358""} where var""##ANON_TV#1358"" <: Object}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1358""), :(Union{}), :Object, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CategoryData.jl
src/wiring_diagrams/Directed.jl,WiringDiagram,mtsig,"(((Tuple{WiringDiagramACSet{PortValue, WireValue, Union{BoxValue, AbstractBox}, DataType}, Any} where BoxValue) where WireValue) where PortValue) where T","(((Tuple{WiringDiagramACSet{PortValue, WireValue, Union{BoxValue, AbstractBox}, DataType}, Any} where BoxValue) where WireValue) where PortValue) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:BoxValue, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:WireValue, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:PortValue, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,false,true,true,data/ta-info/all/Catlab.jl
src/deprecations/predictive_asymmetry.jl,predictive_asymmetry,mtsig,"Tuple{VALID_PA_ESTIMATORS, Any, Vararg{AbstractVector{<:Real}}, Any, Real, Any, Any, Any, Any, Any, Any, Any, Any}","Tuple{VALID_PA_ESTIMATORS, Any, Vararg{AbstractVector{var""##ANON_TV#486""} where var""##ANON_TV#486"" <: Real}, Any, Real, Any, Any, Any, Any, Any, Any, Any, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#486""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CausalityTools.jl
src/rulesets/Base/array.jl,rrule,mtsig,"Tuple{typeof(Base.vect), Vararg{Union{Number, AbstractArray{<:Number}}, N}} where N","Tuple{typeof(Base.vect), Vararg{Union{Number, AbstractArray{var""##ANON_TV#703""} where var""##ANON_TV#703"" <: Number}, N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#703""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ChainRules.jl
src/rulesets/LinearAlgebra/structured.jl,rrule,mtsig,"Tuple{typeof(diagm), Integer, Integer, Vararg{Pair{<:Integer, <:AbstractVector}}}","Tuple{typeof(diagm), Integer, Integer, Vararg{(Pair{var""##ANON_TV#806"", var""##ANON_TV#807""} where var""##ANON_TV#806"" <: Integer) where var""##ANON_TV#807"" <: AbstractVector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#806""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#807""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ChainRules.jl
src/rulesets/LinearAlgebra/structured.jl,rrule,mtsig,"Tuple{typeof(diagm), Vararg{Pair{<:Integer, <:AbstractVector}}}","Tuple{typeof(diagm), Vararg{(Pair{var""##ANON_TV#808"", var""##ANON_TV#809""} where var""##ANON_TV#808"" <: Integer) where var""##ANON_TV#809"" <: AbstractVector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#808""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#809""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ChainRules.jl
src/tangent_types/thunks.jl,LinearAlgebra.diagm,mtsig,"Tuple{Pair{<:Integer, <:AbstractThunk}, Vararg{Pair{<:Integer, <:AbstractThunk}}}","Tuple{(Pair{var""##ANON_TV#1023"", var""##ANON_TV#1024""} where var""##ANON_TV#1023"" <: Integer) where var""##ANON_TV#1024"" <: AbstractThunk, Vararg{(Pair{var""##ANON_TV#1025"", var""##ANON_TV#1026""} where var""##ANON_TV#1025"" <: Integer) where var""##ANON_TV#1026"" <: AbstractThunk}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1023""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1024""), :(Union{}), :AbstractThunk, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1025""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1026""), :(Union{}), :AbstractThunk, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/ChainRulesCore.jl
src/tangent_types/thunks.jl,LinearAlgebra.diagm,mtsig,"Tuple{Any, Any, Pair{<:Integer, <:AbstractThunk}, Vararg{Pair{<:Integer, <:AbstractThunk}}}","Tuple{Any, Any, (Pair{var""##ANON_TV#1027"", var""##ANON_TV#1028""} where var""##ANON_TV#1027"" <: Integer) where var""##ANON_TV#1028"" <: AbstractThunk, Vararg{(Pair{var""##ANON_TV#1029"", var""##ANON_TV#1030""} where var""##ANON_TV#1029"" <: Integer) where var""##ANON_TV#1030"" <: AbstractThunk}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1027""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1028""), :(Union{}), :AbstractThunk, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1029""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1030""), :(Union{}), :AbstractThunk, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/ChainRulesCore.jl
test/runtests.jl,<NOT A FUNSIG>,tyassorann,"Pair{GrammaticalSymbol, NTuple{N, GrammaticalSymbol} where N}","Pair{GrammaticalSymbol, NTuple{N, GrammaticalSymbol} where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ChartParsers.jl
src/indexing.jl,<NOT A FUNSIG>,tyassorann,"NTuple{<:Any, Pair{Symbol, <:AbstractString}}","NTuple{var""##ANON_TV#484"", Pair{Symbol, var""##ANON_TV#485""} where var""##ANON_TV#485"" <: AbstractString} where var""##ANON_TV#484"" <: Any","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#485""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#484""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Checkpoints.jl
src/database/database_utils.jl,defaultmissing,mtsig,"Tuple{Array{Union{Missing, T}}, Any} where T <: AbstractString","Tuple{Array{Union{Missing, T}}, Any} where T <: AbstractString","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Clapeyron.jl
src/database/database_utils.jl,defaultmissing,mtsig,"Tuple{Array{Union{Missing, T}}, Any} where T <: Number","Tuple{Array{Union{Missing, T}}, Any} where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Clapeyron.jl
src/database/database_utils.jl,defaultmissing,mtsig,"(Tuple{Array{Union{Missing, T1, T2}}, Any} where T2 <: AbstractString) where T1 <: Number","(Tuple{Array{Union{Missing, T1, T2}}, Any} where T2 <: AbstractString) where T1 <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T2, :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T1, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Clapeyron.jl
src/normalized.jl,mul,mtsig,"Tuple{QuasiAdjoint{<:Any, Weighted{<:Any, <:SubQuasiArray{<:Any, 2, <:AbstractQuasiMatrix, <:Tuple{<:AbstractAffineQuasiVector, <:Any}}}}, QuasiAdjoint{<:Any, <:Derivative}}","Tuple{QuasiAdjoint{var""##ANON_TV#1308"", (Weighted{var""##ANON_TV#1309"", var""##ANON_TV#1310""} where var""##ANON_TV#1309"" <: Any) where var""##ANON_TV#1310"" <: (((SubQuasiArray{var""##ANON_TV#1311"", 2, var""##ANON_TV#1312"", var""##ANON_TV#1313""} where var""##ANON_TV#1311"" <: Any) where var""##ANON_TV#1312"" <: AbstractQuasiMatrix) where var""##ANON_TV#1313"" <: ((Tuple{var""##ANON_TV#1314"", var""##ANON_TV#1315""} where var""##ANON_TV#1314"" <: AbstractAffineQuasiVector) where var""##ANON_TV#1315"" <: Any))} where var""##ANON_TV#1308"" <: Any, (QuasiAdjoint{var""##ANON_TV#1316"", var""##ANON_TV#1317""} where var""##ANON_TV#1316"" <: Any) where var""##ANON_TV#1317"" <: Derivative}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1314""), :(Union{}), :AbstractAffineQuasiVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1315""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1311""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1312""), :(Union{}), :AbstractQuasiMatrix, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1313""), :(Union{}), :((Tuple{var""##ANON_TV#1314"", var""##ANON_TV#1315""} where var""##ANON_TV#1314"" <: AbstractAffineQuasiVector) where var""##ANON_TV#1315"" <: Any), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1309""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1310""), :(Union{}), :(((SubQuasiArray{var""##ANON_TV#1311"", 2, var""##ANON_TV#1312"", var""##ANON_TV#1313""} where var""##ANON_TV#1311"" <: Any) where var""##ANON_TV#1312"" <: AbstractQuasiMatrix) where var""##ANON_TV#1313"" <: ((Tuple{var""##ANON_TV#1314"", var""##ANON_TV#1315""} where var""##ANON_TV#1314"" <: AbstractAffineQuasiVector) where var""##ANON_TV#1315"" <: Any)), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1308""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1316""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1317""), :(Union{}), :Derivative, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,false,10,true,true,true,true,true,true,true,true,data/ta-info/all/ClassicalOrthogonalPolynomials.jl
src/columns/LowCardinality.jl,unmissing_type,mtsig,"Tuple{Type{Union{Missing, T}}} where T","Tuple{Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ClickHouse.jl
src/columns/Nullable.jl,write_col_data,mtsig,"Tuple{ClickHouseSock, AbstractVector{Union{Missing, T}}, Val{:Nullable}, TypeAst} where T","Tuple{ClickHouseSock, AbstractVector{Union{Missing, T}}, Val{:Nullable}, TypeAst} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,true,1,true,true,false,true,false,false,true,true,data/ta-info/all/ClickHouse.jl
src/columns/Nullable.jl,write_col_data,mtsig,"Tuple{ClickHouseSock, AbstractCategoricalVector{Union{Missing, T}}, Val{:Nullable}, TypeAst} where T","Tuple{ClickHouseSock, AbstractCategoricalVector{Union{Missing, T}}, Val{:Nullable}, TypeAst} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,true,1,true,true,false,true,false,false,true,true,data/ta-info/all/ClickHouse.jl
src/DataLayouts/cuda.jl,promote_parent_array_type,mtsig,"((Tuple{Type{CUDA.CuArray{T1, N, B} where N}, Type{CUDA.CuArray{T2, N, B} where N}} where B) where T2) where T1","((Tuple{Type{CUDA.CuArray{T1, N, B} where N}, Type{CUDA.CuArray{T2, N, B} where N}} where B) where T2) where T1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:B, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,false,true,true,data/ta-info/all/ClimaCore.jl
src/DataLayouts/cuda.jl,Base.similar,mtsig,"((Tuple{Type{CUDA.CuArray{T, N′, B} where N′}, Dims{N}} where B) where N) where T","((Tuple{Type{CUDA.CuArray{T, N′, B} where N′}, Dims{N}} where B) where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N′, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:B, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/ClimaCore.jl
src/core/aggregation.jl,nomissing,mtsig,"(Tuple{AbstractArray{Union{T, Missing}, N}, Any} where N) where T","(Tuple{AbstractArray{Union{T, Missing}, N}, Any} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/ClimateBase.jl
src/core/aggregation.jl,missing_weights,mtsig,"Tuple{ClimArray{Union{T, Missing}}, Any} where T","Tuple{ClimArray{Union{T, Missing}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ClimateBase.jl
src/tsa/continuation.jl,_numbertype,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ClimateBase.jl
src/groupedcoefplot.jl,GroupedCoefplot,mtsig,"Tuple{Vararg{Pair{<:Any, Coefplot}}, Label, Label, Label, CaptionStyle, CaptionStyle, Real, Real, MaybeData{Note}, Bool, Vararg{Any}}","Tuple{Vararg{Pair{var""##ANON_TV#1537"", Coefplot} where var""##ANON_TV#1537"" <: Any}, Label, Label, Label, CaptionStyle, CaptionStyle, Real, Real, MaybeData{Note}, Bool, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1537""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Coefplots.jl
src/groupedmulticoefplot.jl,GroupedMultiCoefplot,mtsig,"Tuple{Vararg{Pair{<:Any, MultiCoefplot}}, Label, Label, Label, CaptionStyle, CaptionStyle, MaybeData{Vector{Bool}}, Real, Real, MaybeData{Real}, MaybeData{Note}, Bool, Vararg{Any}}","Tuple{Vararg{Pair{var""##ANON_TV#1538"", MultiCoefplot} where var""##ANON_TV#1538"" <: Any}, Label, Label, Label, CaptionStyle, CaptionStyle, MaybeData{Vector{Bool}}, Real, Real, MaybeData{Real}, MaybeData{Note}, Bool, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1538""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Coefplots.jl
src/groupedmulticoefplot.jl,GroupedMultiCoefplot,mtsig,"Tuple{Vararg{Pair{<:Any, GroupedCoefplot}}, Vararg{Any}}","Tuple{Vararg{Pair{var""##ANON_TV#1539"", GroupedCoefplot} where var""##ANON_TV#1539"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1539""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Coefplots.jl
src/CombinedParsers.jl,sequence_result_type,mtsig,Tuple{Vararg{Type{<:CombinedParser}}},"Tuple{Vararg{Type{var""##ANON_TV#599""} where var""##ANON_TV#599"" <: CombinedParser}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#599""), :(Union{}), :CombinedParser, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CombinedParsers.jl
src/cfvariable.jl,Base.getindex,mtsig,"Tuple{CFVariable, Vararg{Union{Int, Colon, AbstractRange{<:Integer}}}}","Tuple{CFVariable, Vararg{Union{Int, Colon, AbstractRange{var""##ANON_TV#1540""} where var""##ANON_TV#1540"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1540""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CommonDataModel.jl
src/cfvariable.jl,Base.setindex!,mtsig,"Tuple{CFVariable, Array{Missing, N}, Vararg{Union{Int, Colon, AbstractRange{<:Integer}}}} where N","Tuple{CFVariable, Array{Missing, N}, Vararg{Union{Int, Colon, AbstractRange{var""##ANON_TV#1541""} where var""##ANON_TV#1541"" <: Integer}}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1541""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/CommonDataModel.jl
src/cfvariable.jl,Base.setindex!,mtsig,"Tuple{CFVariable, Missing, Vararg{Union{Int, Colon, AbstractRange{<:Integer}}}}","Tuple{CFVariable, Missing, Vararg{Union{Int, Colon, AbstractRange{var""##ANON_TV#1542""} where var""##ANON_TV#1542"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1542""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CommonDataModel.jl
src/cfvariable.jl,Base.setindex!,mtsig,"(Tuple{CFVariable, Union{T, Array{T, N}}, Vararg{Union{Int, Colon, AbstractRange{<:Integer}}}} where N) where T <: Union{AbstractCFDateTime, DateTime, Union{Missing, DateTime, AbstractCFDateTime}}","(Tuple{CFVariable, Union{T, Array{T, N}}, Vararg{Union{Int, Colon, AbstractRange{var""##ANON_TV#1543""} where var""##ANON_TV#1543"" <: Integer}}} where N) where T <: Union{AbstractCFDateTime, DateTime, Union{Missing, DateTime, AbstractCFDateTime}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1543""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{AbstractCFDateTime, DateTime, Union{Missing, DateTime, AbstractCFDateTime}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/CommonDataModel.jl
src/cfvariable.jl,Base.setindex!,mtsig,"Tuple{CFVariable, Any, Vararg{Union{Int, Colon, AbstractRange{<:Integer}}}}","Tuple{CFVariable, Any, Vararg{Union{Int, Colon, AbstractRange{var""##ANON_TV#1544""} where var""##ANON_TV#1544"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1544""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CommonDataModel.jl
src/finite_differences.jl,Base.copyto!,mtsig,"(Tuple{Y, Mul{<:Any, Tuple{<:ImplicitDerivative, X}}} where Y <: AbstractVector) where X <: AbstractVector","(Tuple{Y, Mul{var""##ANON_TV#782"", Tuple{var""##ANON_TV#783"", X} where var""##ANON_TV#783"" <: ImplicitDerivative} where var""##ANON_TV#782"" <: Any} where Y <: AbstractVector) where X <: AbstractVector","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#783""), :(Union{}), :ImplicitDerivative, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#782""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Y, :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:X, :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/CompactBases.jl
src/inner_products.jl,materialize,mtsig,"Tuple{Mul{<:Any, Tuple{AdjointFuncVector{<:Any, BB}, FuncVector{<:Any, BB}}}} where BB","Tuple{Mul{var""##ANON_TV#795"", Tuple{AdjointFuncVector{var""##ANON_TV#796"", BB} where var""##ANON_TV#796"" <: Any, FuncVector{var""##ANON_TV#797"", BB} where var""##ANON_TV#797"" <: Any}} where var""##ANON_TV#795"" <: Any} where BB","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#796""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#797""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#795""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:BB, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,true,true,true,data/ta-info/all/CompactBases.jl
test/inheritance.jl,<NOT A FUNSIG>,tyassorann,"Pair{S, Some{T}} where typeassert(T, DataType) <: S <: typeassert(T, DataType)","Pair{S, Some{T}} where typeassert(T, DataType) <: S <: typeassert(T, DataType)","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(typeassert(T, DataType)), :(typeassert(T, DataType)), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/ComputedFieldTypes.jl
src/ConditionalJuMP.jl,switch!,mtsig,"Tuple{Model, Vararg{Pair{<:Conditional}}}","Tuple{Model, Vararg{Pair{var""##ANON_TV#1654""} where var""##ANON_TV#1654"" <: Conditional}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1654""), :(Union{}), :Conditional, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ConditionalJuMP.jl
src/ConditionalJuMP.jl,switch!,mtsig,"Tuple{Model, Vararg{Pair{<:Conditional, <:AbstractArray}}}","Tuple{Model, Vararg{(Pair{var""##ANON_TV#1655"", var""##ANON_TV#1656""} where var""##ANON_TV#1655"" <: Conditional) where var""##ANON_TV#1656"" <: AbstractArray}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1655""), :(Union{}), :Conditional, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1656""), :(Union{}), :AbstractArray, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ConditionalJuMP.jl
src/compartment.jl,<NOT A FUNSIG>,tyassorann,Vector{Synapse{<:AbstractSystem}},"Vector{Synapse{var""##ANON_TV#370""} where var""##ANON_TV#370"" <: AbstractSystem}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#370""), :(Union{}), :AbstractSystem, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Conductor.jl
src/ConformalMaps.jl,ConformalMap,mtsig,"Tuple{Array{Tuple{<:Real, <:Real}, 1}, Union{Real, Complex}, Vararg{Any}}","Tuple{Array{(Tuple{var""##ANON_TV#498"", var""##ANON_TV#499""} where var""##ANON_TV#498"" <: Real) where var""##ANON_TV#499"" <: Real, 1}, Union{Real, Complex}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#498""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#499""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ConformalMaps.jl
src/densities.jl,pwc_densities,mtsig,Tuple{Vararg{AbstractVector{<:Real}}},"Tuple{Vararg{AbstractVector{var""##ANON_TV#597""} where var""##ANON_TV#597"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#597""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/densities.jl,pwc_densities,mtsig,Tuple{Tuple{Vararg{AbstractVector{<:Real}}}},"Tuple{Tuple{Vararg{AbstractVector{var""##ANON_TV#598""} where var""##ANON_TV#598"" <: Real}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#598""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/densities.jl,pwc_densities!,mtsig,"Tuple{Any, Vararg{AbstractVector{<:Real}}}","Tuple{Any, Vararg{AbstractVector{var""##ANON_TV#599""} where var""##ANON_TV#599"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#599""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/densities.jl,pwc_densities!,mtsig,"Tuple{Any, Tuple{Vararg{AbstractVector{<:Real}}}}","Tuple{Any, Tuple{Vararg{AbstractVector{var""##ANON_TV#600""} where var""##ANON_TV#600"" <: Real}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#600""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,velocities,mtsig,"(Tuple{ArrayPartition{F, T}, Union{SampledModel, IntegratedModel}, Any} where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","(Tuple{ArrayPartition{F, T}, Union{SampledModel, IntegratedModel}, Any} where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#624""} where var""##ANON_TV#624"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#624""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#624""} where var""##ANON_TV#624"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,velocities!,mtsig,"(((((Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, SampledModel{N, TVs, TWprimes, Tmobilities}, Any} where Tmobilities) where TWprimes) where TVs) where N) where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","(((((Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, SampledModel{N, TVs, TWprimes, Tmobilities}, Any} where Tmobilities) where TWprimes) where TVs) where N) where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#625""} where var""##ANON_TV#625"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#625""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Tmobilities, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TWprimes, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TVs, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#625""} where var""##ANON_TV#625"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,7,true,false,false,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,velocities!,mtsig,"(((((Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, IntegratedModel{N, TVs, TWs, Tmobilities}, Any} where Tmobilities) where TWs) where TVs) where N) where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","(((((Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, IntegratedModel{N, TVs, TWs, Tmobilities}, Any} where Tmobilities) where TWs) where TVs) where N) where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#626""} where var""##ANON_TV#626"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#626""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Tmobilities, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TWs, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TVs, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#626""} where var""##ANON_TV#626"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,7,true,false,false,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,velocities_gen,mtsig,"(Tuple{ArrayPartition{F, T}, Union{SampledModel, IntegratedModel}, Any} where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","(Tuple{ArrayPartition{F, T}, Union{SampledModel, IntegratedModel}, Any} where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#627""} where var""##ANON_TV#627"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#627""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#627""} where var""##ANON_TV#627"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,velocities_gen!,mtsig,"(((((Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, SampledModel{N, TVs, TWprimes, Tmobilities}, Any} where Tmobilities) where TWprimes) where TVs) where N) where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","(((((Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, SampledModel{N, TVs, TWprimes, Tmobilities}, Any} where Tmobilities) where TWprimes) where TVs) where N) where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#628""} where var""##ANON_TV#628"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#628""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Tmobilities, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TWprimes, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TVs, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#628""} where var""##ANON_TV#628"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,7,true,false,false,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,velocities_gen!,mtsig,"(((((Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, IntegratedModel{N, TVs, TWs, Tmobilities}, Any} where Tmobilities) where TWs) where TVs) where N) where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","(((((Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, IntegratedModel{N, TVs, TWs, Tmobilities}, Any} where Tmobilities) where TWs) where TVs) where N) where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#629""} where var""##ANON_TV#629"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#629""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Tmobilities, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TWs, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TVs, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#629""} where var""##ANON_TV#629"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,7,true,false,false,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,velocities,mtsig,"(Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, Any, Any} where F) where T <: Tuple{Vararg{AbstractVector{<:Real}}}","(Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, Any, Any} where F) where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#630""} where var""##ANON_TV#630"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#630""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#630""} where var""##ANON_TV#630"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,abstract_velocities,mtsig,"(Tuple{ArrayPartition{F, T}, AbstractModel, Any} where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","(Tuple{ArrayPartition{F, T}, AbstractModel, Any} where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#631""} where var""##ANON_TV#631"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#631""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#631""} where var""##ANON_TV#631"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,abstract_velocities!,mtsig,"(Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, AbstractModel, Any} where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","(Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, AbstractModel, Any} where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#632""} where var""##ANON_TV#632"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#632""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#632""} where var""##ANON_TV#632"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,abstract_velocities!,mtsig,"(Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, HyperbolicModel, Any} where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","(Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, HyperbolicModel, Any} where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#633""} where var""##ANON_TV#633"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#633""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#633""} where var""##ANON_TV#633"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,abstract_velocities_gen,mtsig,"(Tuple{ArrayPartition{F, T}, AbstractModel, Any} where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","(Tuple{ArrayPartition{F, T}, AbstractModel, Any} where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#634""} where var""##ANON_TV#634"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#634""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#634""} where var""##ANON_TV#634"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,abstract_velocities_gen!,mtsig,"(Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, AbstractModel, Any} where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","(Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, AbstractModel, Any} where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#635""} where var""##ANON_TV#635"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#635""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#635""} where var""##ANON_TV#635"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,velocities_diff,mtsig,"(Tuple{ArrayPartition{F, T}, Union{DiffusiveSampledModel, DiffusiveIntegratedModel}, Any} where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","(Tuple{ArrayPartition{F, T}, Union{DiffusiveSampledModel, DiffusiveIntegratedModel}, Any} where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#636""} where var""##ANON_TV#636"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#636""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#636""} where var""##ANON_TV#636"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,velocities_diff!,mtsig,"((((((Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, DiffusiveSampledModel{N, TVs, TWprimes, Tmobilities, Tdiffusions}, Any} where Tdiffusions) where Tmobilities) where TWprimes) where TVs) where N) where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","((((((Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, DiffusiveSampledModel{N, TVs, TWprimes, Tmobilities, Tdiffusions}, Any} where Tdiffusions) where Tmobilities) where TWprimes) where TVs) where N) where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#637""} where var""##ANON_TV#637"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#637""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Tdiffusions, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Tmobilities, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TWprimes, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TVs, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#637""} where var""##ANON_TV#637"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,8,true,false,false,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/velocities.jl,velocities_diff!,mtsig,"((((((Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, DiffusiveIntegratedModel{N, TVs, TWs, Tmobilities, Tdiffusions}, Any} where Tdiffusions) where Tmobilities) where TWs) where TVs) where N) where T <: Tuple{Vararg{AbstractVector{<:Real}}}) where F","((((((Tuple{ArrayPartition{F, T}, ArrayPartition{F, T}, DiffusiveIntegratedModel{N, TVs, TWs, Tmobilities, Tdiffusions}, Any} where Tdiffusions) where Tmobilities) where TWs) where TVs) where N) where T <: Tuple{Vararg{AbstractVector{var""##ANON_TV#638""} where var""##ANON_TV#638"" <: Real}}) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#638""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Tdiffusions, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Tmobilities, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TWs, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TVs, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#638""} where var""##ANON_TV#638"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,8,true,false,false,true,true,true,true,true,data/ta-info/all/ConservationLawsParticles.jl
src/Bridges/Constraint/NonOverlappingOrthotopes/noov_to_disjunction_milp.jl,MOI.get,mtsig,"Tuple{NonOverlappingOrthotopes2DisjunctionLPBridge{T}, MOI.NumberOfConstraints{MOI.VectorAffineFunction{T}, CP.Disjunction{NTuple{n, MOI.LessThan{T}} where n}}} where T","Tuple{NonOverlappingOrthotopes2DisjunctionLPBridge{T}, MOI.NumberOfConstraints{MOI.VectorAffineFunction{T}, CP.Disjunction{NTuple{n, MOI.LessThan{T}} where n}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:n, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/ConstraintProgrammingExtensions.jl
src/Bridges/Constraint/NonOverlappingOrthotopes/noov_to_disjunction_milp.jl,MOI.get,mtsig,"Tuple{NonOverlappingOrthotopes2DisjunctionLPBridge{T}, MOI.ListOfConstraintIndices{MOI.VectorAffineFunction{T}, CP.Disjunction{NTuple{n, MOI.LessThan{T}} where n}}} where T","Tuple{NonOverlappingOrthotopes2DisjunctionLPBridge{T}, MOI.ListOfConstraintIndices{MOI.VectorAffineFunction{T}, CP.Disjunction{NTuple{n, MOI.LessThan{T}} where n}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:n, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/ConstraintProgrammingExtensions.jl
src/ConstructiveGeometry.jl,operator,mtsig,"Tuple{Any, Any, Vararg{Union{<:AbstractGeometry, EmptyUnion}}, Vararg{Any}}","Tuple{Any, Any, Vararg{Union{var""##ANON_TV#1368"", EmptyUnion} where var""##ANON_TV#1368"" <: AbstractGeometry}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1368""), :(Union{}), :AbstractGeometry, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ConstructiveGeometry.jl
src/ConstructiveGeometry.jl,hull,mtsig,"Tuple{Vararg{Union{AbstractGeometry{2}, StaticVector{2, <:Real}}}}","Tuple{Vararg{Union{AbstractGeometry{2}, StaticVector{2, var""##ANON_TV#1372""} where var""##ANON_TV#1372"" <: Real}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1372""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ConstructiveGeometry.jl
src/Shapes.jl,PolygonXor,mtsig,"Tuple{Vararg{AbstractVector{<:StaticVector{2, <:Real}}}} where T","Tuple{Vararg{AbstractVector{var""##ANON_TV#1390""} where var""##ANON_TV#1390"" <: (StaticVector{2, var""##ANON_TV#1391""} where var""##ANON_TV#1391"" <: Real)}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1391""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1390""), :(Union{}), :(StaticVector{2, var""##ANON_TV#1391""} where var""##ANON_TV#1391"" <: Real), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,true,true,true,true,true,true,data/ta-info/all/ConstructiveGeometry.jl
src/ContextVariablesX.jl,with_context,mtsig,"Tuple{Any, Vararg{Pair{<:ContextVar}}}","Tuple{Any, Vararg{Pair{var""##ANON_TV#558""} where var""##ANON_TV#558"" <: ContextVar}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#558""), :(Union{}), :ContextVar, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ContextVariablesX.jl
lib/ControlSystemsBase/src/connections.jl,append,mtsig,Tuple{Vararg{ST where ST <: AbstractStateSpace}},Tuple{Vararg{ST where ST <: AbstractStateSpace}},"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:ST, :(Union{}), :AbstractStateSpace, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ControlSystems.jl
lib/ControlSystemsBase/src/connections.jl,Base.typed_hcat,mtsig,"Tuple{Type{S}, Vararg{Union{AbstractArray{<:Number, 1}, AbstractArray{<:Number, 2}}}} where S <: LTISystem","Tuple{Type{S}, Vararg{Union{AbstractArray{var""##ANON_TV#1559"", 1} where var""##ANON_TV#1559"" <: Number, AbstractArray{var""##ANON_TV#1560"", 2} where var""##ANON_TV#1560"" <: Number}}} where S <: LTISystem","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1559""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1560""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :LTISystem, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/ControlSystems.jl
src/connections.jl,append,mtsig,Tuple{Vararg{ST where ST <: AbstractStateSpace}},Tuple{Vararg{ST where ST <: AbstractStateSpace}},"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:ST, :(Union{}), :AbstractStateSpace, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ControlSystemsBase.jl
src/connections.jl,Base.typed_hcat,mtsig,"Tuple{Type{S}, Vararg{Union{AbstractArray{<:Number, 1}, AbstractArray{<:Number, 2}}}} where S <: LTISystem","Tuple{Type{S}, Vararg{Union{AbstractArray{var""##ANON_TV#398"", 1} where var""##ANON_TV#398"" <: Number, AbstractArray{var""##ANON_TV#399"", 2} where var""##ANON_TV#399"" <: Number}}} where S <: LTISystem","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#398""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#399""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :LTISystem, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/ControlSystemsBase.jl
src/library.jl,<NOT A FUNSIG>,tyassorann,"Dict{Int, Tuple{Symbol, <:Sampleable}}","Dict{Int, Tuple{Symbol, var""##ANON_TV#1051""} where var""##ANON_TV#1051"" <: Sampleable}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1051""), :(Union{}), :Sampleable, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Crispulator.jl
src/macro.jl,mixinof,mtsig,"Tuple{Any, Vararg{Type{<:System}}}","Tuple{Any, Vararg{Type{var""##ANON_TV#875""} where var""##ANON_TV#875"" <: System}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#875""), :(Union{}), :System, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Cropbox.jl
src/macro.jl,mixindispatch,mtsig,"Tuple{Any, Vararg{Type{<:System}}}","Tuple{Any, Vararg{Type{var""##ANON_TV#876""} where var""##ANON_TV#876"" <: System}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#876""), :(Union{}), :System, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Cropbox.jl
src/state.jl,unittype,mtsig,"Tuple{Type{<:Vector{Union{V, Missing}}}} where V","Tuple{Type{var""##ANON_TV#884""} where var""##ANON_TV#884"" <: Vector{Union{V, Missing}}} where V","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#884""), :(Union{}), :(Vector{Union{V, Missing}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Cropbox.jl
src/state/produce.jl,<NOT A FUNSIG>,tyassorann,Vector{Production{<:S}},"Vector{Production{var""##ANON_TV#890""} where var""##ANON_TV#890"" <: S}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#890""), :(Union{}), :S, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Cropbox.jl
src/util/gather.jl,gather!,mtsig,"Tuple{System, Vararg{Type{<:System}}, Any, Any, Any}","Tuple{System, Vararg{Type{var""##ANON_TV#917""} where var""##ANON_TV#917"" <: System}, Any, Any, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#917""), :(Union{}), :System, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Cropbox.jl
src/Curves/elliptic_curves.jl,modulus,mtsig,"Tuple{Type{AffinePoint{<:EllipticCurve, F}}} where F <: PrimeField","Tuple{Type{AffinePoint{var""##ANON_TV#524"", F} where var""##ANON_TV#524"" <: EllipticCurve}} where F <: PrimeField","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#524""), :(Union{}), :EllipticCurve, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :PrimeField, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/CryptoGroups.jl
src/fft/util.jl,complexfloat,mtsig,Tuple{CuArray{Complex{<:cufftReals}}},"Tuple{CuArray{Complex{var""##ANON_TV#1265""} where var""##ANON_TV#1265"" <: cufftReals}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1265""), :(Union{}), :cufftReals, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/CuArrays.jl
src/detectors.jl,updatemoments,mtsig,"Tuple{Vector{SymmetricTensor{Float64, N} where N}, Int, Matrix{T}, Vector{Bool}, Vector{Bool}} where T <: AbstractFloat","Tuple{Vector{SymmetricTensor{Float64, N} where N}, Int, Matrix{T}, Vector{Bool}, Vector{Bool}} where T <: AbstractFloat","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/CumulantsFeatures.jl
src/curves/bernstein.jl,BernsteinBase,mtsig,"Tuple{Vararg{StaticVector{<:Any, <:Number}}}","Tuple{Vararg{(StaticVector{var""##ANON_TV#539"", var""##ANON_TV#540""} where var""##ANON_TV#539"" <: Any) where var""##ANON_TV#540"" <: Number}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#539""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#540""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/CurveProximityQueries.jl
src/curves/bernstein.jl,Bernstein,mtsig,"Tuple{Vararg{StaticVector{<:Any, <:Number}}, Any}","Tuple{Vararg{(StaticVector{var""##ANON_TV#541"", var""##ANON_TV#542""} where var""##ANON_TV#541"" <: Any) where var""##ANON_TV#542"" <: Number}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#541""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#542""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/CurveProximityQueries.jl
src/utils.jl,harmonize_dict,retty,"Dict{Symbol, Array{T, 1} where T}","Dict{Symbol, Array{T, 1} where T}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DBnomics.jl
src/utils.jl,length_element,mtsig,"Tuple{Dict{Symbol, Array{T, 1} where T}}","Tuple{Dict{Symbol, Array{T, 1} where T}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DBnomics.jl
src/Jobs/job.jl,Job,mtsig,"Tuple{String, Structure, Vector{<:Calculation}, Vararg{Pair{Symbol, <:Any}}, Vararg{Any}}","Tuple{String, Structure, Vector{var""##ANON_TV#520""} where var""##ANON_TV#520"" <: Calculation, Vararg{Pair{Symbol, var""##ANON_TV#521""} where var""##ANON_TV#521"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#520""), :(Union{}), :Calculation, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#521""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/DFControl.jl
src/derived.jl,deepest,mtsig,"Tuple{Array{Union{Missing, T}, 3}} where T","Tuple{Array{Union{Missing, T}, 3}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/DIVAnd.jl
src/app/supporttypes.jl,Base.convert,mtsig,"Tuple{Type{Vector{<:T}}, T} where T <: Dependency","Tuple{Type{Vector{var""##ANON_TV#1683""} where var""##ANON_TV#1683"" <: T}, T} where T <: Dependency","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1683""), :(Union{}), :T, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Dependency, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/Dash.jl
src/DataBags.jl,contents,mtsig,"Tuple{Type{Dict{Any, V}}, Vararg{Pair{<:AbstractString}}} where V","Tuple{Type{Dict{Any, V}}, Vararg{Pair{var""##ANON_TV#581""} where var""##ANON_TV#581"" <: AbstractString}} where V","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#581""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,true,true,true,data/ta-info/all/DataBags.jl
src/DataBags.jl,contents,mtsig,"Tuple{Type{Dict{Any, Any}}, Vararg{Pair{<:AbstractString}}}","Tuple{Type{Dict{Any, Any}}, Vararg{Pair{var""##ANON_TV#582""} where var""##ANON_TV#582"" <: AbstractString}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#582""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DataBags.jl
src/fast-missing-count.jl,count_not_missing,mtsig,"(Tuple{Type{S}, Vector{Union{T, Missing}}} where T) where S","(Tuple{Type{S}, Vector{Union{T, Missing}}} where T) where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/DataConvenience.jl
src/fast-missing-count.jl,count_not_missing,mtsig,"Tuple{Vector{Union{T, Missing}}} where T","Tuple{Vector{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/DataConvenience.jl
src/fast-missing-count.jl,count_missing,mtsig,"(Tuple{Type{S}, Vector{Union{T, Missing}}} where T) where S","(Tuple{Type{S}, Vector{Union{T, Missing}}} where T) where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/DataConvenience.jl
src/fast-missing-count.jl,count_missing,mtsig,"Tuple{Vector{Union{T, Missing}}} where T","Tuple{Vector{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/DataConvenience.jl
src/util.jl,input_choice,mtsig,"Tuple{Vararg{Tuple{Char, <:AbstractString, Any}}}","Tuple{Vararg{Tuple{Char, var""##ANON_TV#1586"", Any} where var""##ANON_TV#1586"" <: AbstractString}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1586""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DataDeps.jl
src/abstractdataframe/abstractdataframe.jl,DataAPI.describe,mtsig,"Tuple{AbstractDataFrame, Vararg{Union{Symbol, Pair{<:Base.Callable, <:SymbolOrString}}}, Any}","Tuple{AbstractDataFrame, Vararg{Union{Symbol, (Pair{var""##ANON_TV#533"", var""##ANON_TV#534""} where var""##ANON_TV#533"" <: Base.Callable) where var""##ANON_TV#534"" <: SymbolOrString}}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#533""), :(Union{}), :(Base.Callable), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#534""), :(Union{}), :SymbolOrString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/DataFrames.jl
src/abstractdataframe/abstractdataframe.jl,insertcols!,mtsig,"Tuple{AbstractDataFrame, ColumnIndex, Vararg{Pair{<:AbstractString}}, Bool, Bool, Bool}","Tuple{AbstractDataFrame, ColumnIndex, Vararg{Pair{var""##ANON_TV#558""} where var""##ANON_TV#558"" <: AbstractString}, Bool, Bool, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#558""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DataFrames.jl
src/abstractdataframe/abstractdataframe.jl,insertcols!,mtsig,"Tuple{AbstractDataFrame, Vararg{Pair{<:AbstractString}}, Bool, Bool, Bool}","Tuple{AbstractDataFrame, Vararg{Pair{var""##ANON_TV#559""} where var""##ANON_TV#559"" <: AbstractString}, Bool, Bool, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#559""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DataFrames.jl
src/dataframe/dataframe.jl,DataFrame,mtsig,"Tuple{Vararg{Pair{Symbol, <:Any}}, Bool, Bool}","Tuple{Vararg{Pair{Symbol, var""##ANON_TV#605""} where var""##ANON_TV#605"" <: Any}, Bool, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#605""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DataFrames.jl
src/dataframe/dataframe.jl,DataFrame,mtsig,"Tuple{Vararg{Pair{<:AbstractString, <:Any}}, Bool, Bool}","Tuple{Vararg{(Pair{var""##ANON_TV#606"", var""##ANON_TV#607""} where var""##ANON_TV#606"" <: AbstractString) where var""##ANON_TV#607"" <: Any}, Bool, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#606""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#607""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/DataFrames.jl
src/dataframe/dataframe.jl,allcombinations,mtsig,"Tuple{Type{DataFrame}, Vararg{Pair{<:AbstractString, <:Any}}}","Tuple{Type{DataFrame}, Vararg{(Pair{var""##ANON_TV#617"", var""##ANON_TV#618""} where var""##ANON_TV#617"" <: AbstractString) where var""##ANON_TV#618"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#617""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#618""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/DataFrames.jl
src/dataframe/dataframe.jl,allcombinations,mtsig,"Tuple{Type{DataFrame}, Vararg{Pair{Symbol, <:Any}}}","Tuple{Type{DataFrame}, Vararg{Pair{Symbol, var""##ANON_TV#619""} where var""##ANON_TV#619"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#619""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DataFrames.jl
src/groupeddataframe/complextransforms.jl,_combine_rows_with_first_task!,mtsig,"Tuple{Integer, Integer, Integer, Integer, NTuple{<:Any, AbstractVector}, Ref{NTuple{<:Any, AbstractVector}}, AbstractVector{Bool}, ReentrantLock, Base.Callable, GroupedDataFrame, AbstractVector{<:Integer}, AbstractVector{<:Integer}, Union{Nothing, AbstractVector, Tuple, NamedTuple}, NTuple{<:Any, Symbol}, FirstColCount}","Tuple{Integer, Integer, Integer, Integer, NTuple{var""##ANON_TV#660"", AbstractVector} where var""##ANON_TV#660"" <: Any, Ref{NTuple{var""##ANON_TV#661"", AbstractVector} where var""##ANON_TV#661"" <: Any}, AbstractVector{Bool}, ReentrantLock, Base.Callable, GroupedDataFrame, AbstractVector{var""##ANON_TV#662""} where var""##ANON_TV#662"" <: Integer, AbstractVector{var""##ANON_TV#663""} where var""##ANON_TV#663"" <: Integer, Union{Nothing, AbstractVector, Tuple, NamedTuple}, NTuple{var""##ANON_TV#664"", Symbol} where var""##ANON_TV#664"" <: Any, FirstColCount}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#660""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#661""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#662""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#663""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#664""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,5,true,true,true,true,true,true,true,true,data/ta-info/all/DataFrames.jl
src/groupeddataframe/utils.jl,row_group_slots!,mtsig,"Tuple{NTuple{N, AbstractVector}, NTuple{N, AbstractVector}, NTuple{N, Union{AbstractVector{<:Real}, Missings.EachReplaceMissing{<:AbstractVector{<:Union{Real, Missing}}}}}, Val{false}, Vector{Int}, Bool, Bool, Bool} where N","Tuple{NTuple{N, AbstractVector}, NTuple{N, AbstractVector}, NTuple{N, Union{AbstractVector{var""##ANON_TV#722""} where var""##ANON_TV#722"" <: Real, Missings.EachReplaceMissing{var""##ANON_TV#723""} where var""##ANON_TV#723"" <: (AbstractVector{var""##ANON_TV#724""} where var""##ANON_TV#724"" <: Union{Real, Missing})}}, Val{false}, Vector{Int}, Bool, Bool, Bool} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#722""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#724""), :(Union{}), :(Union{Real, Missing}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#723""), :(Union{}), :(AbstractVector{var""##ANON_TV#724""} where var""##ANON_TV#724"" <: Union{Real, Missing}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,true,true,true,data/ta-info/all/DataFrames.jl
src/shapes.jl,TupleOf,mtsig,"Tuple{Vararg{Pair{<:Union{Symbol, AbstractString}, <:Union{AbstractShape, Type}}}}","Tuple{Vararg{(Pair{var""##ANON_TV#472"", var""##ANON_TV#473""} where var""##ANON_TV#472"" <: Union{Symbol, AbstractString}) where var""##ANON_TV#473"" <: Union{AbstractShape, Type}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#472""), :(Union{}), :(Union{Symbol, AbstractString}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#473""), :(Union{}), :(Union{AbstractShape, Type}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/DataKnots.jl
src/vectors.jl,TupleVector,mtsig,"Tuple{Pair{<:Union{Symbol, AbstractString}, <:AbstractVector}, Vararg{Pair{<:Union{Symbol, AbstractString}, <:AbstractVector}}}","Tuple{(Pair{var""##ANON_TV#474"", var""##ANON_TV#475""} where var""##ANON_TV#474"" <: Union{Symbol, AbstractString}) where var""##ANON_TV#475"" <: AbstractVector, Vararg{(Pair{var""##ANON_TV#476"", var""##ANON_TV#477""} where var""##ANON_TV#476"" <: Union{Symbol, AbstractString}) where var""##ANON_TV#477"" <: AbstractVector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#474""), :(Union{}), :(Union{Symbol, AbstractString}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#475""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#476""), :(Union{}), :(Union{Symbol, AbstractString}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#477""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/DataKnots.jl
src/namedtuples.jl,allocate,mtsig,"Tuple{Type{Union{WeakRefString{T}, Missing}}, Any, Any} where T","Tuple{Type{Union{WeakRefString{T}, Missing}}, Any, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/DataStreams.jl
src/query.jl,unwk,mtsig,"Tuple{Type{Union{Missing, WeakRefString{T}}}, Any} where T","Tuple{Type{Union{Missing, WeakRefString{T}}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/DataStreams.jl
src/queryutils.jl,aggregate,mtsig,"((Tuple{Dict{K}, T, Any} where T <: NTuple{N, Vector{TT} where TT}) where K) where N","((Tuple{Dict{K}, T, Any} where T <: NTuple{N, Vector{TT} where TT}) where K) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:TT, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(NTuple{N, Vector{TT} where TT}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/DataStreams.jl
src/interaction/externals.jl,dataset,mtsig,"Tuple{AbstractString, Pair{Symbol, <:Any}, Vararg{Pair{Symbol, <:Any}}}","Tuple{AbstractString, Pair{Symbol, var""##ANON_TV#775""} where var""##ANON_TV#775"" <: Any, Vararg{Pair{Symbol, var""##ANON_TV#776""} where var""##ANON_TV#776"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#775""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#776""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/DataToolkitBase.jl
src/interaction/externals.jl,dataset,mtsig,"Tuple{DataCollection, AbstractString, Pair{Symbol, <:Any}, Vararg{Pair{Symbol, <:Any}}}","Tuple{DataCollection, AbstractString, Pair{Symbol, var""##ANON_TV#777""} where var""##ANON_TV#777"" <: Any, Vararg{Pair{Symbol, var""##ANON_TV#778""} where var""##ANON_TV#778"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#777""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#778""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/DataToolkitBase.jl
src/oncol.jl,oncol,mtsig,"Tuple{Vararg{Union{Pair{<:PropertyLike}, PropertyLike}}}","Tuple{Vararg{Union{Pair{var""##ANON_TV#1589""} where var""##ANON_TV#1589"" <: PropertyLike, PropertyLike}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1589""), :(Union{}), :PropertyLike, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DataTools.jl
src/Either.jl,Base.eltype,mtsig,"Tuple{Type{Either{<:Any, R}}} where R","Tuple{Type{Either{var""##ANON_TV#672"", R} where var""##ANON_TV#672"" <: Any}} where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#672""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/convert.jl,Base.convert,mtsig,"Tuple{Type{Either{<:Any, R}}, Identity{R}} where R","Tuple{Type{Either{var""##ANON_TV#685"", R} where var""##ANON_TV#685"" <: Any}, Identity{R}} where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#685""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/convert.jl,Base.convert,mtsig,"Tuple{Type{Either{<:Any, R}}, Identity} where R","Tuple{Type{Either{var""##ANON_TV#686"", R} where var""##ANON_TV#686"" <: Any}, Identity} where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#686""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/convert.jl,Base.convert,mtsig,"Tuple{Type{Either{L, <:Any}}, Const{L}} where L","Tuple{Type{Either{L, var""##ANON_TV#687""} where var""##ANON_TV#687"" <: Any}, Const{L}} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#687""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/convert.jl,Base.convert,mtsig,"Tuple{Type{Either{L, <:Any}}, Const} where L","Tuple{Type{Either{L, var""##ANON_TV#688""} where var""##ANON_TV#688"" <: Any}, Const} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#688""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"Tuple{Type{Const}, Type{Either{L, <:Any}}} where L","Tuple{Type{Const}, Type{Either{L, var""##ANON_TV#689""} where var""##ANON_TV#689"" <: Any}} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#689""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"Tuple{Type{Const{L}}, Type{Either{L, <:Any}}} where L","Tuple{Type{Const{L}}, Type{Either{L, var""##ANON_TV#690""} where var""##ANON_TV#690"" <: Any}} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#690""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"(Tuple{Type{Const{L1}}, Type{Either{L2, <:Any}}} where L2 <: L1) where L1","(Tuple{Type{Const{L1}}, Type{Either{L2, var""##ANON_TV#691""} where var""##ANON_TV#691"" <: Any}} where L2 <: L1) where L1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#691""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L2, :(Union{}), :L1, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"(Tuple{Type{Const{L2}}, Type{Either{L1, <:Any}}} where L2 <: L1) where L1","(Tuple{Type{Const{L2}}, Type{Either{L1, var""##ANON_TV#692""} where var""##ANON_TV#692"" <: Any}} where L2 <: L1) where L1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#692""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L2, :(Union{}), :L1, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"(Tuple{Type{Const{L1}}, Type{Either{L2, <:Any}}} where L2) where L1","(Tuple{Type{Const{L1}}, Type{Either{L2, var""##ANON_TV#693""} where var""##ANON_TV#693"" <: Any}} where L2) where L1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#693""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"Tuple{Type{Identity}, Type{Either{<:Any, R}}} where R","Tuple{Type{Identity}, Type{Either{var""##ANON_TV#694"", R} where var""##ANON_TV#694"" <: Any}} where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#694""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"Tuple{Type{Identity{R}}, Type{Either{<:Any, R}}} where R","Tuple{Type{Identity{R}}, Type{Either{var""##ANON_TV#695"", R} where var""##ANON_TV#695"" <: Any}} where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#695""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"(Tuple{Type{Identity{R1}}, Type{Either{<:Any, R2}}} where R2 <: R1) where R1","(Tuple{Type{Identity{R1}}, Type{Either{var""##ANON_TV#696"", R2} where var""##ANON_TV#696"" <: Any}} where R2 <: R1) where R1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#696""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R2, :(Union{}), :R1, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"(Tuple{Type{Identity{R2}}, Type{Either{<:Any, R1}}} where R2 <: R1) where R1","(Tuple{Type{Identity{R2}}, Type{Either{var""##ANON_TV#697"", R1} where var""##ANON_TV#697"" <: Any}} where R2 <: R1) where R1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#697""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R2, :(Union{}), :R1, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"(Tuple{Type{Identity{R2}}, Type{Either{<:Any, R1}}} where R2) where R1","(Tuple{Type{Identity{R2}}, Type{Either{var""##ANON_TV#698"", R1} where var""##ANON_TV#698"" <: Any}} where R2) where R1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#698""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_type,mtsig,"(Tuple{Type{Either{<:Any, R1}}, Type{Either{<:Any, R2}}} where R2) where R1","(Tuple{Type{Either{var""##ANON_TV#699"", R1} where var""##ANON_TV#699"" <: Any}, Type{Either{var""##ANON_TV#700"", R2} where var""##ANON_TV#700"" <: Any}} where R2) where R1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#699""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#700""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_type,mtsig,"(Tuple{Type{Either{L1, <:Any}}, Type{Either{L2, <:Any}}} where L2) where L1","(Tuple{Type{Either{L1, var""##ANON_TV#701""} where var""##ANON_TV#701"" <: Any}, Type{Either{L2, var""##ANON_TV#702""} where var""##ANON_TV#702"" <: Any}} where L2) where L1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#701""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#702""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"Tuple{Type{Either{L, <:Any}}, Type{Either{L, <:Any}}} where L","Tuple{Type{Either{L, var""##ANON_TV#703""} where var""##ANON_TV#703"" <: Any}, Type{Either{L, var""##ANON_TV#704""} where var""##ANON_TV#704"" <: Any}} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#703""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#704""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"(Tuple{Type{Either{L1, <:Any}}, Type{Either{L2, <:Any}}} where L2 <: L1) where L1","(Tuple{Type{Either{L1, var""##ANON_TV#705""} where var""##ANON_TV#705"" <: Any}, Type{Either{L2, var""##ANON_TV#706""} where var""##ANON_TV#706"" <: Any}} where L2 <: L1) where L1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#705""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#706""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L2, :(Union{}), :L1, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"(Tuple{Type{Either{L1, <:Any}}, Type{Either{L2, <:Any}}} where L2) where L1","(Tuple{Type{Either{L1, var""##ANON_TV#707""} where var""##ANON_TV#707"" <: Any}, Type{Either{L2, var""##ANON_TV#708""} where var""##ANON_TV#708"" <: Any}} where L2) where L1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#707""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#708""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"Tuple{Type{Either{<:Any, R}}, Type{Either{<:Any, R}}} where R","Tuple{Type{Either{var""##ANON_TV#709"", R} where var""##ANON_TV#709"" <: Any}, Type{Either{var""##ANON_TV#710"", R} where var""##ANON_TV#710"" <: Any}} where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#709""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#710""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"(Tuple{Type{Either{<:Any, R1}}, Type{Either{<:Any, R2}}} where R2 <: R1) where R1","(Tuple{Type{Either{var""##ANON_TV#711"", R1} where var""##ANON_TV#711"" <: Any}, Type{Either{var""##ANON_TV#712"", R2} where var""##ANON_TV#712"" <: Any}} where R2 <: R1) where R1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#711""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#712""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R2, :(Union{}), :R1, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_rule,mtsig,"(Tuple{Type{Either{<:Any, R1}}, Type{Either{<:Any, R2}}} where R2) where R1","(Tuple{Type{Either{var""##ANON_TV#713"", R1} where var""##ANON_TV#713"" <: Any}, Type{Either{var""##ANON_TV#714"", R2} where var""##ANON_TV#714"" <: Any}} where R2) where R1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#713""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#714""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"Tuple{Type{Const}, Type{Either{L, <:Any}}} where L","Tuple{Type{Const}, Type{Either{L, var""##ANON_TV#715""} where var""##ANON_TV#715"" <: Any}} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#715""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"Tuple{Type{Either{L, <:Any}}, Type{Const}} where L","Tuple{Type{Either{L, var""##ANON_TV#716""} where var""##ANON_TV#716"" <: Any}, Type{Const}} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#716""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"Tuple{Type{Const{L}}, Type{Either{L, <:Any}}} where L","Tuple{Type{Const{L}}, Type{Either{L, var""##ANON_TV#717""} where var""##ANON_TV#717"" <: Any}} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#717""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"Tuple{Type{Either{L, <:Any}}, Type{Const{L}}} where L","Tuple{Type{Either{L, var""##ANON_TV#718""} where var""##ANON_TV#718"" <: Any}, Type{Const{L}}} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#718""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"(Tuple{Type{Const{L1}}, Type{Either{L2, <:Any}}} where L2) where L1","(Tuple{Type{Const{L1}}, Type{Either{L2, var""##ANON_TV#719""} where var""##ANON_TV#719"" <: Any}} where L2) where L1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#719""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"(Tuple{Type{Either{L2, <:Any}}, Type{Const{L1}}} where L2) where L1","(Tuple{Type{Either{L2, var""##ANON_TV#720""} where var""##ANON_TV#720"" <: Any}, Type{Const{L1}}} where L2) where L1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#720""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"Tuple{Type{Identity}, Type{Either{<:Any, R}}} where R","Tuple{Type{Identity}, Type{Either{var""##ANON_TV#721"", R} where var""##ANON_TV#721"" <: Any}} where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#721""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"Tuple{Type{Either{<:Any, R}}, Type{Identity}} where R","Tuple{Type{Either{var""##ANON_TV#722"", R} where var""##ANON_TV#722"" <: Any}, Type{Identity}} where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#722""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"Tuple{Type{Identity{R}}, Type{Either{<:Any, R}}} where R","Tuple{Type{Identity{R}}, Type{Either{var""##ANON_TV#723"", R} where var""##ANON_TV#723"" <: Any}} where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#723""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"Tuple{Type{Either{<:Any, R}}, Type{Identity{R}}} where R","Tuple{Type{Either{var""##ANON_TV#724"", R} where var""##ANON_TV#724"" <: Any}, Type{Identity{R}}} where R","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#724""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"(Tuple{Type{Identity{R2}}, Type{Either{<:Any, R1}}} where R2) where R1","(Tuple{Type{Identity{R2}}, Type{Either{var""##ANON_TV#725"", R1} where var""##ANON_TV#725"" <: Any}} where R2) where R1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#725""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"(Tuple{Type{Either{<:Any, R1}}, Type{Identity{R2}}} where R2) where R1","(Tuple{Type{Either{var""##ANON_TV#726"", R1} where var""##ANON_TV#726"" <: Any}, Type{Identity{R2}}} where R2) where R1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#726""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"Tuple{Type{Either{L, <:Any}}, Type{Either{L, <:Any}}} where L","Tuple{Type{Either{L, var""##ANON_TV#727""} where var""##ANON_TV#727"" <: Any}, Type{Either{L, var""##ANON_TV#728""} where var""##ANON_TV#728"" <: Any}} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#727""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#728""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"(Tuple{Type{Either{L1, <:Any}}, Type{Either{L2, <:Any}}} where L2) where L1","(Tuple{Type{Either{L1, var""##ANON_TV#729""} where var""##ANON_TV#729"" <: Any}, Type{Either{L2, var""##ANON_TV#730""} where var""##ANON_TV#730"" <: Any}} where L2) where L1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#729""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#730""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"(Tuple{Type{Either{<:Any, R}}, Type{Either{<:Any, R}}} where R) where L","(Tuple{Type{Either{var""##ANON_TV#731"", R} where var""##ANON_TV#731"" <: Any}, Type{Either{var""##ANON_TV#732"", R} where var""##ANON_TV#732"" <: Any}} where R) where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#731""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#732""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/promote_type.jl,Base.promote_typejoin,mtsig,"(Tuple{Type{Either{<:Any, R1}}, Type{Either{<:Any, R2}}} where R2) where R1","(Tuple{Type{Either{var""##ANON_TV#733"", R1} where var""##ANON_TV#733"" <: Any}, Type{Either{var""##ANON_TV#734"", R2} where var""##ANON_TV#734"" <: Any}} where R2) where R1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#733""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#734""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/DataTypesBasic.jl
src/scalar/core.jl,Base.convert,mtsig,"Tuple{Type{Union{Missing, T}}, DataValues.DataValue{T}} where T","Tuple{Type{Union{Missing, T}}, DataValues.DataValue{T}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/DataValues.jl
src/scalar/core.jl,Base.convert,mtsig,"Tuple{Type{Union{Missing, T}}, DataValues.DataValue{Union{}}} where T","Tuple{Type{Union{Missing, T}}, DataValues.DataValue{Union{}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/DataValues.jl
src/scalar/core.jl,DataValueInterfaces.datavaluetype,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/DataValues.jl
src/stack/methods.jl,_check_same_names,mtsig,"Tuple{Union{AbstractDimStack{<:NamedTuple{names}}, NamedTuple{names}}, Vararg{Union{AbstractDimStack{<:NamedTuple{names}}, NamedTuple{names}}}} where names","Tuple{Union{AbstractDimStack{var""##ANON_TV#941""} where var""##ANON_TV#941"" <: NamedTuple{names}, NamedTuple{names}}, Vararg{Union{AbstractDimStack{var""##ANON_TV#942""} where var""##ANON_TV#942"" <: NamedTuple{names}, NamedTuple{names}}}} where names","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#941""), :(Union{}), :(NamedTuple{names}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#942""), :(Union{}), :(NamedTuple{names}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:names, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/DimensionalData.jl
src/base.jl,Base.exp,mtsig,"Tuple{AbstractMatrix{(Angle{T, U} where T <: Complex) where U}}","Tuple{AbstractMatrix{(Angle{T, U} where T <: Complex) where U}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Complex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:U, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/DimensionfulAngles.jl
src/dim_basis.jl,DimBasis,mtsig,"Tuple{Vararg{Pair{<:AbstractString, <:QuantityOrUnitlike}}}","Tuple{Vararg{(Pair{var""##ANON_TV#824"", var""##ANON_TV#825""} where var""##ANON_TV#824"" <: AbstractString) where var""##ANON_TV#825"" <: QuantityOrUnitlike}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#824""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#825""), :(Union{}), :QuantityOrUnitlike, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Dimensionless.jl
src/dim_basis.jl,dim_matrix,mtsig,"Tuple{Array{Type{<:Unitful.Dimension}}, Vararg{Unitful.Dimensions}}","Tuple{Array{Type{var""##ANON_TV#826""} where var""##ANON_TV#826"" <: Unitful.Dimension}, Vararg{Unitful.Dimensions}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#826""), :(Union{}), :(Unitful.Dimension), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Dimensionless.jl
src/dim_basis.jl,dim_matrix,mtsig,"Tuple{Array{Type{<:Unitful.Dimension}}, Vararg{<:QuantityOrUnits}}","Tuple{Array{Type{var""##ANON_TV#827""} where var""##ANON_TV#827"" <: Unitful.Dimension}, Vararg{var""##ANON_TV#828""} where var""##ANON_TV#828"" <: QuantityOrUnits}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#827""), :(Union{}), :(Unitful.Dimension), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#828""), :(Union{}), :QuantityOrUnits, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Dimensionless.jl
src/dim_basis_ops.jl,number_of_dimensions,mtsig,"Tuple{Vararg{Pair{<:AbstractString, <:QuantityOrUnitlike}}}","Tuple{Vararg{(Pair{var""##ANON_TV#829"", var""##ANON_TV#830""} where var""##ANON_TV#829"" <: AbstractString) where var""##ANON_TV#830"" <: QuantityOrUnitlike}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#829""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#830""), :(Union{}), :QuantityOrUnitlike, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Dimensionless.jl
src/dim_basis_ops.jl,number_of_dimensionless,mtsig,"Tuple{Vararg{Pair{<:AbstractString, <:QuantityOrUnitlike}}}","Tuple{Vararg{(Pair{var""##ANON_TV#833"", var""##ANON_TV#834""} where var""##ANON_TV#833"" <: AbstractString) where var""##ANON_TV#834"" <: QuantityOrUnitlike}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#833""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#834""), :(Union{}), :QuantityOrUnitlike, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Dimensionless.jl
src/DirectQhull.jl,<NOT A FUNSIG>,tyassorann,Ptr{QHsetT{<:QHsetelemT}},"Ptr{QHsetT{var""##ANON_TV#841""} where var""##ANON_TV#841"" <: QHsetelemT}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#841""), :(Union{}), :QHsetelemT, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DirectQhull.jl
src/generic.jl,Base.rand,mtsig,"((Tuple{AbstractRNG, SamplerType{Single{V, G, B, T} where B}} where T) where G) where V","((Tuple{AbstractRNG, SamplerType{Single{V, G, B, T} where B}} where T) where G) where V","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:B, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:G, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/DirectSum.jl
src/generic.jl,Base.rand,mtsig,"(Tuple{AbstractRNG, SamplerType{Single{V, G, B, T} where {G, B}}} where T) where V","(Tuple{AbstractRNG, SamplerType{(Single{V, G, B, T} where G) where B}} where T) where V","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:G, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:B, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/DirectSum.jl
src/generic.jl,_eltype,mtsig,"Tuple{Type{Union{Missing, T}}} where T","Tuple{Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Distances.jl
src/distributionvector.jl,SimpleDistributionVector,mtsig,"(Tuple{Vararg{Union{Missing, D}, N}} where N) where D <: Distribution","(Tuple{Vararg{Union{Missing, D}, N}} where N) where D <: Distribution","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Distribution, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/DistributionVectors.jl
src/distributionvector.jl,ParamDistributionVector,mtsig,"(Tuple{Vararg{Union{Missing, D}, N}} where N) where D <: Distribution","(Tuple{Vararg{Union{Missing, D}, N}} where N) where D <: Distribution","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Distribution, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/DistributionVectors.jl
src/univariate/continuous/lognormal.jl,sum,mtsig,"((Tuple{AbstractDistributionVector{D}, AutoCorrelationFunction, MissingStrategy, AbstractVector{Bool}, AbstractVector{Union{Missing, ST}}, Val{M}} where M) where ST <: eltype(D)) where D <: LogNormal","((Tuple{AbstractDistributionVector{D}, AutoCorrelationFunction, MissingStrategy, AbstractVector{Bool}, AbstractVector{Union{Missing, ST}}, Val{M}} where M) where ST <: eltype(D)) where D <: LogNormal","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:ST, :(Union{}), :(eltype(D)), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :LogNormal, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCCall, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/DistributionVectors.jl
src/univariate/continuous/lognormal.jl,sum_lognormals,mtsig,"(Tuple{AbstractDistributionVector{D}, AutoCorrelationFunction, MissingStrategy, AbstractVector{Bool}, AbstractVector{Union{Missing, DS}}} where DS <: eltype(D)) where D <: LogNormal","(Tuple{AbstractDistributionVector{D}, AutoCorrelationFunction, MissingStrategy, AbstractVector{Bool}, AbstractVector{Union{Missing, DS}}} where DS <: eltype(D)) where D <: LogNormal","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:DS, :(Union{}), :(eltype(D)), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :LogNormal, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCCall, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/DistributionVectors.jl
src/univariate/continuous/lognormal.jl,sum,mtsig,"(Tuple{AbstractDistributionVector{D}, Symmetric, MissingStrategy, AbstractArray{Bool, 1}, AbstractVector{Union{Missing, DS}}} where DS <: eltype(D)) where D <: LogNormal","(Tuple{AbstractDistributionVector{D}, Symmetric, MissingStrategy, AbstractArray{Bool, 1}, AbstractVector{Union{Missing, DS}}} where DS <: eltype(D)) where D <: LogNormal","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:DS, :(Union{}), :(eltype(D)), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :LogNormal, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCCall, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/DistributionVectors.jl
src/univariate/continuous/lognormal.jl,sum_lognormals,mtsig,"(Tuple{AbstractDistributionVector{D}, Symmetric, MissingStrategy, AbstractVector{Bool}, AbstractVector{Union{Missing, DS}}} where DS <: eltype(D)) where D <: LogNormal","(Tuple{AbstractDistributionVector{D}, Symmetric, MissingStrategy, AbstractVector{Bool}, AbstractVector{Union{Missing, DS}}} where DS <: eltype(D)) where D <: LogNormal","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:DS, :(Union{}), :(eltype(D)), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :LogNormal, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCCall, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/DistributionVectors.jl
src/univariate/continuous/normal.jl,sum,mtsig,"(Tuple{AbstractDistributionVector{D}, AutoCorrelationFunction, MissingStrategy, AbstractVector{Bool}, AbstractVector{Union{Missing, DS}}} where DS <: eltype(D)) where D <: Normal","(Tuple{AbstractDistributionVector{D}, AutoCorrelationFunction, MissingStrategy, AbstractVector{Bool}, AbstractVector{Union{Missing, DS}}} where DS <: eltype(D)) where D <: Normal","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:DS, :(Union{}), :(eltype(D)), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Normal, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCCall, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/DistributionVectors.jl
src/univariate/continuous/normal.jl,sum,mtsig,"(Tuple{AbstractDistributionVector{D}, Symmetric, MissingStrategy, AbstractArray{Bool, 1}, AbstractVector{Union{Missing, DS}}} where DS <: eltype(D)) where D <: Normal","(Tuple{AbstractDistributionVector{D}, Symmetric, MissingStrategy, AbstractArray{Bool, 1}, AbstractVector{Union{Missing, DS}}} where DS <: eltype(D)) where D <: Normal","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:DS, :(Union{}), :(eltype(D)), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Normal, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCCall, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/DistributionVectors.jl
src/univariate/continuous/normal.jl,sum_normals,mtsig,"(Tuple{AbstractDistributionVector{D}, Symmetric, MissingStrategy, AbstractArray{Bool, 1}, AbstractVector{Union{Missing, DS}}} where DS <: eltype(D)) where D <: Normal","(Tuple{AbstractDistributionVector{D}, Symmetric, MissingStrategy, AbstractArray{Bool, 1}, AbstractVector{Union{Missing, DS}}} where DS <: eltype(D)) where D <: Normal","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:DS, :(Union{}), :(eltype(D)), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Normal, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCCall, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/DistributionVectors.jl
src/product.jl,_product_size,mtsig,"(Tuple{NTuple{N, Distribution{<:ArrayLikeVariate{M}}}} where N) where M","(Tuple{NTuple{N, Distribution{var""##ANON_TV#1073""} where var""##ANON_TV#1073"" <: ArrayLikeVariate{M}}} where N) where M","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1073""), :(Union{}), :(ArrayLikeVariate{M}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/Distributions.jl
src/reshaped.jl,Base.eltype,mtsig,"Tuple{Type{ReshapedDistribution{<:Any, <:ValueSupport, D}}} where D","Tuple{Type{(ReshapedDistribution{var""##ANON_TV#1110"", var""##ANON_TV#1111"", D} where var""##ANON_TV#1110"" <: Any) where var""##ANON_TV#1111"" <: ValueSupport}} where D","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1110""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1111""), :(Union{}), :ValueSupport, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/Distributions.jl
src/Utilities/Utilities.jl,addenv,mtsig,"Tuple{Cmd, Vararg{Pair{<:AbstractString}}}","Tuple{Cmd, Vararg{Pair{var""##ANON_TV#802""} where var""##ANON_TV#802"" <: AbstractString}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#802""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Documenter.jl
src/compiler.jl,_getsize,mtsig,"Tuple{Vararg{Union{AbstractArray, <:SVector}}}","Tuple{Vararg{Union{AbstractArray, var""##ANON_TV#818""} where var""##ANON_TV#818"" <: SVector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#818""), :(Union{}), :SVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Dolang.jl
src/functional/measure.jl,ProductWeight,mtsig,"Tuple{Vararg{Weight{<:Number}, N}} where N","Tuple{Vararg{Weight{var""##ANON_TV#643""} where var""##ANON_TV#643"" <: Number, N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#643""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/DomainIntegrals.jl
src/domains/cube.jl,ProductDomain,mtsig,Tuple{Vararg{ClosedInterval{<:Number}}},"Tuple{Vararg{ClosedInterval{var""##ANON_TV#1806""} where var""##ANON_TV#1806"" <: Number}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1806""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DomainSets.jl
src/ScenarioTree.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Union{Float64, <:AbstractArray{Float64}}}","Dict{Symbol, Union{Float64, var""##ANON_TV#1664""} where var""##ANON_TV#1664"" <: AbstractArray{Float64}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1664""), :(Union{}), :(AbstractArray{Float64}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DualDecomposition.jl
src/ScenarioTree.jl,TreeNode,mtsig,"Tuple{Int, Int, Int, Dict{Symbol, Union{Float64, <:AbstractArray{Float64}}}, Float64}","Tuple{Int, Int, Int, Dict{Symbol, Union{Float64, var""##ANON_TV#1665""} where var""##ANON_TV#1665"" <: AbstractArray{Float64}}, Float64}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1665""), :(Union{}), :(AbstractArray{Float64}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DualDecomposition.jl
src/ScenarioTree.jl,TreeNode,mtsig,"Tuple{Dict{Symbol, Union{Float64, <:AbstractArray{Float64}}}}","Tuple{Dict{Symbol, Union{Float64, var""##ANON_TV#1666""} where var""##ANON_TV#1666"" <: AbstractArray{Float64}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1666""), :(Union{}), :(AbstractArray{Float64}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DualDecomposition.jl
src/ScenarioTree.jl,Tree,mtsig,"Tuple{Dict{Symbol, Union{Float64, <:AbstractArray{Float64}}}}","Tuple{Dict{Symbol, Union{Float64, var""##ANON_TV#1667""} where var""##ANON_TV#1667"" <: AbstractArray{Float64}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1667""), :(Union{}), :(AbstractArray{Float64}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DualDecomposition.jl
src/ScenarioTree.jl,add_child!,mtsig,"Tuple{Tree, Int, Dict{Symbol, Union{Float64, <:AbstractArray{Float64}}}, Float64}","Tuple{Tree, Int, Dict{Symbol, Union{Float64, var""##ANON_TV#1668""} where var""##ANON_TV#1668"" <: AbstractArray{Float64}}, Float64}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1668""), :(Union{}), :(AbstractArray{Float64}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DualDecomposition.jl
src/ScenarioTree.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Union{JuMP.VariableRef, <:AbstractArray{JuMP.VariableRef}}}","Dict{Symbol, Union{JuMP.VariableRef, var""##ANON_TV#1669""} where var""##ANON_TV#1669"" <: AbstractArray{JuMP.VariableRef}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1669""), :(Union{}), :(AbstractArray{JuMP.VariableRef}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DualDecomposition.jl
src/ScenarioTree.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Union{JuMP.VariableRef, <:AbstractArray{JuMP.VariableRef}}}","Dict{Symbol, Union{JuMP.VariableRef, var""##ANON_TV#1670""} where var""##ANON_TV#1670"" <: AbstractArray{JuMP.VariableRef}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1670""), :(Union{}), :(AbstractArray{JuMP.VariableRef}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/DualDecomposition.jl
src/constructors-helpers.jl,_handlepairs,mtsig,(Tuple{Vararg{Pair{<:T}{<:V}}} where V <: NoDimNum) where T <: Number,"(Tuple{Vararg{(Pair{var""##ANON_TV#616""} where var""##ANON_TV#616"" <: T){var""##ANON_TV#617""} where var""##ANON_TV#617"" <: V}} where V <: NoDimNum) where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#617""), :(Union{}), :V, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :NoDimNum, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,true,3,true,false,false,true,true,false,true,true,data/ta-info/all/DutyCycles.jl
src/constructors-helpers.jl,_handlepairswithpossibleunits,mtsig,(Tuple{Vararg{Pair{<:T}{<:V}}} where V <: Number) where T <: Number,"(Tuple{Vararg{(Pair{var""##ANON_TV#618""} where var""##ANON_TV#618"" <: T){var""##ANON_TV#619""} where var""##ANON_TV#619"" <: V}} where V <: Number) where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#619""), :(Union{}), :V, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,true,3,true,false,false,true,true,false,true,true,data/ta-info/all/DutyCycles.jl
test/comparisons.jl,<NOT A FUNSIG>,tyassorann,"Vector{DutyCycle{TT, PT, T} where {TT, PT}}","Vector{(DutyCycle{TT, PT, T} where TT) where PT}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:TT, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(:PT, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/DutyCycles.jl
src/trajectories.jl,eltype,mtsig,"Tuple{Type{From{I, <:Any}}} where I","Tuple{Type{From{I, var""##ANON_TV#952""} where var""##ANON_TV#952"" <: Any}} where I","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#952""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:I, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/DynamicIterators.jl
src/contexts.jl,AbstractPPL.condition,mtsig,"Tuple{Pair{<:VarName}, Vararg{Pair{<:VarName}}}","Tuple{Pair{var""##ANON_TV#1037""} where var""##ANON_TV#1037"" <: VarName, Vararg{Pair{var""##ANON_TV#1038""} where var""##ANON_TV#1038"" <: VarName}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1037""), :(Union{}), :VarName, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1038""), :(Union{}), :VarName, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/DynamicPPL.jl
src/contexts.jl,AbstractPPL.condition,mtsig,"Tuple{AbstractContext, Pair{<:VarName}, Vararg{Pair{<:VarName}}}","Tuple{AbstractContext, Pair{var""##ANON_TV#1042""} where var""##ANON_TV#1042"" <: VarName, Vararg{Pair{var""##ANON_TV#1043""} where var""##ANON_TV#1043"" <: VarName}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1042""), :(Union{}), :VarName, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1043""), :(Union{}), :VarName, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/DynamicPPL.jl
src/contexts.jl,AbstractPPL.condition,mtsig,"Tuple{AbstractContext, NTuple{<:Any, Pair{<:VarName}}}","Tuple{AbstractContext, NTuple{var""##ANON_TV#1044"", Pair{var""##ANON_TV#1045""} where var""##ANON_TV#1045"" <: VarName} where var""##ANON_TV#1044"" <: Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1045""), :(Union{}), :VarName, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1044""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/DynamicPPL.jl
src/finds.jl,find,mtsig,"Tuple{Vector{Union{Nothing, T}}, Any, Int, Int} where T","Tuple{Vector{Union{Nothing, T}}, Any, Int, Int} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/DynamicSparseArrays.jl
src/finds.jl,find,mtsig,"Tuple{Vector{Union{Nothing, T}}, Any} where T","Tuple{Vector{Union{Nothing, T}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/DynamicSparseArrays.jl
test/utils.jl,check_semaphores,mtsig,"(Tuple{Vector{Union{Nothing, Tuple{K, T}}}, Any} where T) where K","(Tuple{Vector{Union{Nothing, Tuple{K, T}}}, Any} where T) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/DynamicSparseArrays.jl
test/utils.jl,check_key_order,mtsig,"(Tuple{Vector{Union{Nothing, Tuple{K, T}}}, Any} where T) where K","(Tuple{Vector{Union{Nothing, Tuple{K, T}}}, Any} where T) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/DynamicSparseArrays.jl
src/Operator.jl,spin,mtsig,"Tuple{Vararg{Tuple{<:Number, String}}, Integer}","Tuple{Vararg{Tuple{var""##ANON_TV#894"", String} where var""##ANON_TV#894"" <: Number}, Integer}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#894""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/EDKit.jl
src/MSC.jl,getMedSC,mtsig,"Tuple{AbstractVector{Union{T, Missing}}, AbstractVector} where T","Tuple{AbstractVector{Union{T, Missing}}, AbstractVector} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/EarthDataLab.jl
src/client/client.jl,add!,mtsig,"(Tuple{Dict{U, Union{Vector{T}}}, U, T} where T) where U","(Tuple{Dict{U, Union{Vector{T}}}, U, T} where T) where U","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:U, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/Ekztazy.jl
src/utils.jl,_find_bin,mtsig,"Tuple{NTuple{N, AbstractVector{<:Real}}, Bool, NTuple{N, Real}} where N","Tuple{NTuple{N, AbstractVector{var""##ANON_TV#1168""} where var""##ANON_TV#1168"" <: Real}, Bool, NTuple{N, Real}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1168""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,true,true,true,data/ta-info/all/EmpiricalDistributions.jl
src/simulation.jl,<NOT A FUNSIG>,tyassorann,Vector{Vector{UnivariateDistribution{S} where S <: ValueSupport}},Vector{Vector{UnivariateDistribution{S} where S <: ValueSupport}},"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :ValueSupport, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/EvoDynamics.jl
test/def_tools.jl,f,mtsig,Tuple{Vararg{Vector{T} where T}},Tuple{Vararg{Vector{T} where T}},"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ExprTools.jl
test/method.jl,f13,mtsig,Tuple{S} where Integer <: S <: Number,Tuple{S} where Integer <: S <: Number,"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :Integer, :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/ExprTools.jl
src/node_expr_tree/impl_constants.jl,_evaluate_node,mtsig,"Tuple{Constant{Y}, Dict{Int, T where T <: Number}} where Y <: Number","Tuple{Constant{Y}, Dict{Int, T where T <: Number}} where Y <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Y, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ExpressionTreeForge.jl
src/cellfinder.jl,<NOT A FUNSIG>,tyassorann,"Array{Type{<:AbstractElementGeometry}, 1}","Array{Type{var""##ANON_TV#875""} where var""##ANON_TV#875"" <: AbstractElementGeometry, 1}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#875""), :(Union{}), :AbstractElementGeometry, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ExtendableGrids.jl
src/cellfinder.jl,<NOT A FUNSIG>,tyassorann,"Vector{L2GTransformer{Tv, Ti, EG, CS} where {EG <: AbstractElementGeometry, CS <: AbstractCoordinateSystem}}","Vector{(L2GTransformer{Tv, Ti, EG, CS} where EG <: AbstractElementGeometry) where CS <: AbstractCoordinateSystem}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:EG, :(Union{}), :AbstractElementGeometry, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(:CS, :(Union{}), :AbstractCoordinateSystem, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ExtendableGrids.jl
src/extendablegrid.jl,<NOT A FUNSIG>,tyassorann,"Dict{Type{<:AbstractGridComponent}, Any}","Dict{Type{var""##ANON_TV#895""} where var""##ANON_TV#895"" <: AbstractGridComponent, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#895""), :(Union{}), :AbstractGridComponent, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ExtendableGrids.jl
src/io.jl,Base.parse,mtsig,"Tuple{Type{Vector{<:PeriodSE}}, AbstractVector{<:AbstractString}, Any}","Tuple{Type{Vector{var""##ANON_TV#652""} where var""##ANON_TV#652"" <: PeriodSE}, AbstractVector{var""##ANON_TV#653""} where var""##ANON_TV#653"" <: AbstractString, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#652""), :(Union{}), :PeriodSE, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#653""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ExtendedDates.jl
src/Types.jl,Base.convert,mtsig,"Tuple{Type{Optional{S} where S}, Any}","Tuple{Type{Optional{S} where S}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ExtraFun.jl
src/Types.jl,Base.convert,mtsig,"Tuple{Type{Optional{S, T} where S}, Any} where T","Tuple{Type{Optional{S, T} where S}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/ExtraFun.jl
src/Types.jl,Base.convert,mtsig,"Tuple{Type{Optional{S} where S}, Optional}","Tuple{Type{Optional{S} where S}, Optional}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ExtraFun.jl
src/Types.jl,Base.convert,mtsig,"Tuple{Type{Optional{S1, T} where S1}, Optional{S2, T} where S2} where T","Tuple{Type{Optional{S1, T} where S1}, Optional{S2, T} where S2} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/ExtraFun.jl
src/Types.jl,Base.convert,mtsig,"(Tuple{Type{Optional{S1, T} where S1}, Optional{S2}} where T) where S2","(Tuple{Type{Optional{S1, T} where S1}, Optional{S2}} where T) where S2","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/ExtraFun.jl
src/structures/eva/blockmaxima.jl,paramindex,retty,"Dict{Symbol, Vector{<:Int}}","Dict{Symbol, Vector{var""##ANON_TV#1991""} where var""##ANON_TV#1991"" <: Int}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1991""), :(Union{}), :Int, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Extremes.jl
src/structures/eva/thresholdexceedance.jl,paramindex,retty,"Dict{Symbol, Vector{<:Int}}","Dict{Symbol, Vector{var""##ANON_TV#1997""} where var""##ANON_TV#1997"" <: Int}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1997""), :(Union{}), :Int, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Extremes.jl
src/image.jl,read_internal,mtsig,"Tuple{ImageHDU, Vararg{Union{AbstractRange{<:Integer}, Integer, Colon}}}","Tuple{ImageHDU, Vararg{Union{AbstractRange{var""##ANON_TV#973""} where var""##ANON_TV#973"" <: Integer, Integer, Colon}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#973""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/FITSIO.jl
src/image.jl,read_internal!,mtsig,"Tuple{ImageHDU, StridedArray, Vararg{Union{AbstractRange{<:Integer}, Integer, Colon}}}","Tuple{ImageHDU, StridedArray, Vararg{Union{AbstractRange{var""##ANON_TV#974""} where var""##ANON_TV#974"" <: Integer, Integer, Colon}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#974""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/FITSIO.jl
src/image.jl,read,mtsig,"Tuple{ImageHDU, Vararg{Union{AbstractRange{<:Integer}, Integer, Colon}}}","Tuple{ImageHDU, Vararg{Union{AbstractRange{var""##ANON_TV#975""} where var""##ANON_TV#975"" <: Integer, Integer, Colon}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#975""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/FITSIO.jl
src/image.jl,read!,mtsig,"Tuple{ImageHDU, StridedArray{<:Real}, Vararg{Union{AbstractRange{<:Integer}, Integer, Colon}}}","Tuple{ImageHDU, StridedArray{var""##ANON_TV#976""} where var""##ANON_TV#976"" <: Real, Vararg{Union{AbstractRange{var""##ANON_TV#977""} where var""##ANON_TV#977"" <: Integer, Integer, Colon}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#976""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#977""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/FITSIO.jl
src/FMI3/sim.jl,prepareFMU,mtsig,"Tuple{Vector{FMU3}, Vector{Union{Nothing, FMU3Instance}}, Vector{fmi3Type}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Vector{Union{Dict{<:Any, <:Any}, Nothing}}, Nothing}, Any, Any, Any, Union{Vector{Union{Array{<:Real}, Nothing}}, Nothing}, Any}","Tuple{Vector{FMU3}, Vector{Union{Nothing, FMU3Instance}}, Vector{fmi3Type}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Vector{Union{(Dict{var""##ANON_TV#1011"", var""##ANON_TV#1012""} where var""##ANON_TV#1011"" <: Any) where var""##ANON_TV#1012"" <: Any, Nothing}}, Nothing}, Any, Any, Any, Union{Vector{Union{Array{var""##ANON_TV#1013""} where var""##ANON_TV#1013"" <: Real, Nothing}}, Nothing}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1011""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1012""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1013""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/FMI.jl
src/neural.jl,"nfmu::CS_NeuralFMU{Vector{F}, Vector{C}}",mtsig,"(Tuple{Any, Real, Tuple{Float64, Float64}, Any, Union{Real, Nothing}, Union{Vector{Union{Dict{<:Any, <:Any}, Nothing}}, Nothing}, Union{Bool, Nothing}, Union{Bool, Nothing}, Union{Bool, Nothing}, Union{Bool, Nothing}, Union{Bool, Nothing}} where C) where F","(Tuple{Any, Real, Tuple{Float64, Float64}, Any, Union{Real, Nothing}, Union{Vector{Union{(Dict{var""##ANON_TV#1790"", var""##ANON_TV#1791""} where var""##ANON_TV#1790"" <: Any) where var""##ANON_TV#1791"" <: Any, Nothing}}, Nothing}, Union{Bool, Nothing}, Union{Bool, Nothing}, Union{Bool, Nothing}, Union{Bool, Nothing}, Union{Bool, Nothing}} where C) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1790""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1791""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,true,true,true,true,true,true,data/ta-info/all/FMIFlux.jl
src/FMI2/prep.jl,prepareSolveFMU,mtsig,"Tuple{Vector{FMU2}, AbstractVector{Union{FMU2Component, Nothing}}, fmi2Type, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Vector{Union{Dict{<:Any, <:Any}, Nothing}}, Nothing}, Any, Any, Any, Union{Vector{Union{Array{<:Real}, Nothing}}, Nothing}, Any, Bool, Any}","Tuple{Vector{FMU2}, AbstractVector{Union{FMU2Component, Nothing}}, fmi2Type, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Nothing, Bool}, Union{Vector{Union{(Dict{var""##ANON_TV#562"", var""##ANON_TV#563""} where var""##ANON_TV#562"" <: Any) where var""##ANON_TV#563"" <: Any, Nothing}}, Nothing}, Any, Any, Any, Union{Vector{Union{Array{var""##ANON_TV#564""} where var""##ANON_TV#564"" <: Real, Nothing}}, Nothing}, Any, Bool, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#562""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#563""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#564""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/FMIImport.jl
src/discreteGraph.jl,<NOT A FUNSIG>,tyassorann,"Vector{Array{Float64, N} where N}","Vector{Array{Float64, N} where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/FactorGraph.jl
src/metadata.jl,feathertype,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/metadata.jl,getmetadata,mtsig,"Tuple{IO, Type{Union{T, Missing}}, ArrowVector} where T","Tuple{IO, Type{Union{T, Missing}}, ArrowVector} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/metadata.jl,getmetadata,mtsig,"Tuple{IO, Type{Union{T, Missing}}, DictEncoding} where T","Tuple{IO, Type{Union{T, Missing}}, DictEncoding} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/sink.jl,getarrow,mtsig,"Tuple{AbstractVector{Union{T, Missing}}} where T","Tuple{AbstractVector{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/source.jl,constructcolumn,mtsig,"Tuple{Type{Union{T, Missing}}, Vector{UInt8}, Metadata.CategoryMetadata, Metadata.Column} where T","Tuple{Type{Union{T, Missing}}, Vector{UInt8}, Metadata.CategoryMetadata, Metadata.Column} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,bitmaskpointer,mtsig,"Tuple{ArrowVector{Union{J, Missing}}} where J","Tuple{ArrowVector{Union{J, Missing}}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,nullcount,mtsig,"Tuple{ArrowVector{Union{T, Missing}}} where T","Tuple{ArrowVector{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,unsafe_isnull,mtsig,"Tuple{ArrowVector{Union{J, Missing}}, Integer} where J","Tuple{ArrowVector{Union{J, Missing}}, Integer} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,unsafe_isnull,mtsig,"Tuple{ArrowVector{Union{J, Missing}}, AbstractVector{<:Integer}} where J","Tuple{ArrowVector{Union{J, Missing}}, AbstractVector{var""##ANON_TV#624""} where var""##ANON_TV#624"" <: Integer} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#624""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,unsafe_isnull,mtsig,"Tuple{AbstractVector{Union{J, Missing}}, AbstractVector{Bool}} where J","Tuple{AbstractVector{Union{J, Missing}}, AbstractVector{Bool}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,isnull,mtsig,"Tuple{ArrowVector{Union{J, Missing}}, Integer} where J","Tuple{ArrowVector{Union{J, Missing}}, Integer} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,unsafe_rawbitmask,mtsig,"Tuple{ArrowVector{Union{J, Missing}}} where J","Tuple{ArrowVector{Union{J, Missing}}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,setnull!,mtsig,"Tuple{ArrowVector{Union{J, Missing}}, Bool, Integer} where J","Tuple{ArrowVector{Union{J, Missing}}, Bool, Integer} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,setnulls!,mtsig,"Tuple{ArrowVector{Union{J, Missing}}, Vector{UInt8}} where J","Tuple{ArrowVector{Union{J, Missing}}, Vector{UInt8}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,setnulls!,mtsig,"Tuple{ArrowVector{Union{J, Missing}}, AbstractVector{Bool}} where J","Tuple{ArrowVector{Union{J, Missing}}, AbstractVector{Bool}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,unsafe_setnull!,mtsig,"Tuple{ArrowVector{Union{J, Missing}}, Bool, Integer} where J","Tuple{ArrowVector{Union{J, Missing}}, Bool, Integer} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,unsafe_setnulls!,mtsig,"Tuple{ArrowVector{Union{J, Missing}}, Vector{UInt8}} where J","Tuple{ArrowVector{Union{J, Missing}}, Vector{UInt8}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,unsafe_setnulls!,mtsig,"Tuple{ArrowVector{Union{J, Missing}}, AbstractVector{Bool}} where J","Tuple{ArrowVector{Union{J, Missing}}, AbstractVector{Bool}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,$name,mtsig,"Tuple{AbstractVector{Union{J, Missing}}, ArrowVector{Union{J, Missing}}, AbstractVector{<:Integer}} where J","Tuple{AbstractVector{Union{J, Missing}}, ArrowVector{Union{J, Missing}}, AbstractVector{var""##ANON_TV#628""} where var""##ANON_TV#628"" <: Integer} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#628""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,$name,mtsig,"Tuple{AbstractVector{Union{J, Missing}}, ArrowVector{Union{J, Missing}}, AbstractVector{Bool}} where J","Tuple{AbstractVector{Union{J, Missing}}, ArrowVector{Union{J, Missing}}, AbstractVector{Bool}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,$name,mtsig,"Tuple{AbstractVector{Union{J, Missing}}, ArrowVector{Union{J, Missing}}} where J","Tuple{AbstractVector{Union{J, Missing}}, ArrowVector{Union{J, Missing}}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,Base.getindex,mtsig,"Tuple{ArrowVector{Union{J, Missing}}, Integer} where J","Tuple{ArrowVector{Union{J, Missing}}, Integer} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/arrowvectors.jl,Base.getindex,mtsig,"Tuple{ArrowVector{Union{J, Missing}}, AbstractVector{<:Integer}} where J","Tuple{ArrowVector{Union{J, Missing}}, AbstractVector{var""##ANON_TV#633""} where var""##ANON_TV#633"" <: Integer} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#633""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/dictencoding.jl,DictEncoding,mtsig,"(Tuple{Vector{UInt8}, Integer, Integer, Integer, CategoricalArray{Union{J, Missing}, 1, U}} where U) where J","(Tuple{Vector{UInt8}, Integer, Integer, Integer, CategoricalArray{Union{J, Missing}, 1, U}} where U) where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:U, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/dictencoding.jl,DictEncoding,mtsig,"(Tuple{Vector{UInt8}, Integer, CategoricalArray{Union{J, Missing}, 1, U}} where U) where J","(Tuple{Vector{UInt8}, Integer, CategoricalArray{Union{J, Missing}, 1, U}} where U) where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:U, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/dictencoding.jl,_getrefsvec,mtsig,"((Tuple{DictEncoding{J, R}, AbstractVector{<:Integer}} where R <: ArrowVector{Union{K, Missing}}) where K) where J","((Tuple{DictEncoding{J, R}, AbstractVector{var""##ANON_TV#645""} where var""##ANON_TV#645"" <: Integer} where R <: ArrowVector{Union{K, Missing}}) where K) where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#645""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :(ArrowVector{Union{K, Missing}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/dictencoding.jl,pool,mtsig,"((Tuple{DictEncoding{Union{J, Missing}, R}} where R <: ReferenceType{K}) where K) where J","((Tuple{DictEncoding{Union{J, Missing}, R}} where R <: ReferenceType{K}) where K) where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:R, :(Union{}), :(ReferenceType{K}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/dictencoding.jl,nullcount,mtsig,"Tuple{DictEncoding{Union{J, Missing}}} where J","Tuple{DictEncoding{Union{J, Missing}}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/dictencoding.jl,getrefs,mtsig,"(Tuple{CategoricalArray{Union{J, Missing}, 1, U}} where U) where J","(Tuple{CategoricalArray{Union{J, Missing}, 1, U}} where U) where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:U, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/dictencoding.jl,refsbytes,mtsig,"Tuple{Type{Union{J, Missing}}, Integer} where J","Tuple{Type{Union{J, Missing}}, Integer} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/dictencoding.jl,refsbytes,mtsig,"Tuple{Type{Union{J, Missing}}, AbstractVector} where J","Tuple{Type{Union{J, Missing}}, AbstractVector} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/dictencoding.jl,refsbytes,mtsig,"Tuple{AbstractVector{Union{J, Missing}}} where J","Tuple{AbstractVector{Union{J, Missing}}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/dictencoding.jl,totalbytes,mtsig,"(Tuple{CategoricalArray{Union{J, Missing}, 1, U}} where U) where J","(Tuple{CategoricalArray{Union{J, Missing}, 1, U}} where U) where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:U, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/lists.jl,NullableList,mtsig,"(Tuple{Vector{UInt8}, Integer, AbstractVector{Union{J, Missing}}} where K <: Integer) where J","(Tuple{Vector{UInt8}, Integer, AbstractVector{Union{J, Missing}}} where K <: Integer) where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:K, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/lists.jl,NullableList,mtsig,"(Tuple{Type{<:Array}, AbstractVector{Union{J, Missing}}} where K <: Integer) where J","(Tuple{Type{var""##ANON_TV#656""} where var""##ANON_TV#656"" <: Array, AbstractVector{Union{J, Missing}}} where K <: Integer) where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#656""), :(Union{}), :Array, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/lists.jl,NullableList,mtsig,"(Tuple{Type{C}, AbstractVector{Union{J, Missing}}} where J) where C","(Tuple{Type{C}, AbstractVector{Union{J, Missing}}} where J) where C","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/lists.jl,totalbytes,mtsig,"((Tuple{Type{Union{J, Missing}}, Type{K}, Type{C}, AbstractVector} where C) where K <: Integer) where J","((Tuple{Type{Union{J, Missing}}, Type{K}, Type{C}, AbstractVector} where C) where K <: Integer) where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/locate.jl,containertype,mtsig,"Tuple{Type{Union{J, Missing}}, Any} where J","Tuple{Type{Union{J, Missing}}, Any} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/locate.jl,locate,mtsig,"((Tuple{Vector{UInt8}, Type{Union{J, Missing}}, Locate.Bitmask, Locate.Offsets{K}, Locate.Values{C}, Integer} where C) where K <: Integer) where J","((Tuple{Vector{UInt8}, Type{Union{J, Missing}}, Locate.Bitmask, Locate.Offsets{K}, Locate.Values{C}, Integer} where C) where K <: Integer) where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/locate.jl,locate,mtsig,"(Tuple{Type{NullablePrimitive}, Vector{UInt8}, Type{Union{J, Missing}}, T} where T) where J","(Tuple{Type{NullablePrimitive}, Vector{UInt8}, Type{Union{J, Missing}}, T} where T) where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/primitives.jl,NullablePrimitive,mtsig,"Tuple{Vector{UInt8}, Integer, Integer, AbstractVector{Union{J, Missing}}} where J","Tuple{Vector{UInt8}, Integer, Integer, AbstractVector{Union{J, Missing}}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/primitives.jl,NullablePrimitive,mtsig,"Tuple{Type{<:Array}, AbstractVector{Union{J, Missing}}} where J","Tuple{Type{var""##ANON_TV#663""} where var""##ANON_TV#663"" <: Array, AbstractVector{Union{J, Missing}}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#663""), :(Union{}), :Array, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/primitives.jl,NullablePrimitive,mtsig,"Tuple{AbstractVector{Union{J, Missing}}} where J","Tuple{AbstractVector{Union{J, Missing}}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/primitives.jl,valuesbytes,mtsig,"Tuple{AbstractVector{Union{J, Missing}}} where J","Tuple{AbstractVector{Union{J, Missing}}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/primitives.jl,bitmaskbytes,mtsig,"Tuple{Type{Union{J, Missing}}, AbstractVector{J}} where J","Tuple{Type{Union{J, Missing}}, AbstractVector{J}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/primitives.jl,minbitmaskbytes,mtsig,"Tuple{Type{Union{J, Missing}}, AbstractVector{Union{J, Missing}}} where J","Tuple{Type{Union{J, Missing}}, AbstractVector{Union{J, Missing}}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/primitives.jl,bitmaskbytes,mtsig,"Tuple{AbstractVector{Union{J, Missing}}} where J","Tuple{AbstractVector{Union{J, Missing}}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/primitives.jl,totalbytes,mtsig,"Tuple{Type{Union{J, Missing}}, AbstractVector{J}} where J","Tuple{Type{Union{J, Missing}}, AbstractVector{J}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/primitives.jl,totalbytes,mtsig,"Tuple{Type{Union{J, Missing}}, AbstractVector{Union{J, Missing}}} where J","Tuple{Type{Union{J, Missing}}, AbstractVector{Union{J, Missing}}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/utils.jl,encode,mtsig,"(Tuple{Type{C}, AbstractVector{Union{J, Missing}}} where J) where C","(Tuple{Type{C}, AbstractVector{Union{J, Missing}}} where J) where C","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/utils.jl,encode,mtsig,"(Tuple{Type{C}, AbstractVector{Union{J, Missing}}} where J <: AbstractString) where C","(Tuple{Type{C}, AbstractVector{Union{J, Missing}}} where J <: AbstractString) where C","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/utils.jl,replace_missing_vals,mtsig,"Tuple{AbstractVector{Union{J, Missing}}} where J <: Number","Tuple{AbstractVector{Union{J, Missing}}} where J <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/arrow/utils.jl,replace_missing_vals,mtsig,"Tuple{AbstractVector{Union{J, Missing}}} where J","Tuple{AbstractVector{Union{J, Missing}}} where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Feather.jl
src/missing-conversion.jl,Base.getindex,mtsig,"(Tuple{DataValueArrowVector{J, T}, Any} where T <: Arrow.DictEncoding{Union{Missing, J}}) where J","(Tuple{DataValueArrowVector{J, T}, Any} where T <: Arrow.DictEncoding{Union{Missing, J}}) where J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Arrow.DictEncoding{Union{Missing, J}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/FeatherFiles.jl
src/metadata.jl,feathertype,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/FeatherLib.jl
src/metadata.jl,getmetadata,mtsig,"Tuple{IO, Type{Union{T, Missing}}, ArrowVector} where T","Tuple{IO, Type{Union{T, Missing}}, ArrowVector} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/FeatherLib.jl
src/metadata.jl,getmetadata,mtsig,"Tuple{IO, Type{Union{Missing, T}}, DictEncoding} where T","Tuple{IO, Type{Union{Missing, T}}, DictEncoding} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/FeatherLib.jl
src/read.jl,constructcolumn,mtsig,"Tuple{Type{Union{T, Missing}}, Vector{UInt8}, Metadata.CategoryMetadata, Metadata.Column} where T","Tuple{Type{Union{T, Missing}}, Vector{UInt8}, Metadata.CategoryMetadata, Metadata.Column} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/FeatherLib.jl
src/write.jl,_first_col_convert_pass,mtsig,"Tuple{AbstractVector{Union{T, Missing}}} where T","Tuple{AbstractVector{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/FeatherLib.jl
src/Dofs/ConstraintHandler.jl,_update!,mtsig,"Tuple{Vector{Float64}, Function, Set{<:BoundaryIndex}, Symbol, Vector{Int}, Vector{Int}, Vector{Int}, AbstractDofHandler, BCValues, Dict{Int, Int}, Vector{Union{Nothing, DofCoefficients{T}}}, Real} where T","Tuple{Vector{Float64}, Function, Set{var""##ANON_TV#689""} where var""##ANON_TV#689"" <: BoundaryIndex, Symbol, Vector{Int}, Vector{Int}, Vector{Int}, AbstractDofHandler, BCValues, Dict{Int, Int}, Vector{Union{Nothing, DofCoefficients{T}}}, Real} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#689""), :(Union{}), :BoundaryIndex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Ferrite.jl
src/Dofs/ConstraintHandler.jl,_update!,mtsig,"Tuple{Vector{Float64}, Function, Set{Int}, Symbol, Vector{Int}, Vector{Int}, Vector{Int}, AbstractDofHandler, BCValues, Dict{Int, Int}, Vector{Union{Nothing, DofCoefficients{T}}}, Real} where T","Tuple{Vector{Float64}, Function, Set{Int}, Symbol, Vector{Int}, Vector{Int}, Vector{Int}, AbstractDofHandler, BCValues, Dict{Int, Int}, Vector{Union{Nothing, DofCoefficients{T}}}, Real} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Ferrite.jl
src/Dofs/ConstraintHandler.jl,_condense!,mtsig,"Tuple{SparseMatrixCSC, AbstractVector, Vector{Union{Nothing, DofCoefficients{T}}}, Dict{Int, Int}, Bool} where T","Tuple{SparseMatrixCSC, AbstractVector, Vector{Union{Nothing, DofCoefficients{T}}}, Dict{Int, Int}, Bool} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Ferrite.jl
src/Dofs/sparsity_pattern.jl,_condense_sparsity_pattern!,mtsig,"Tuple{SparseMatrixCSC{T}, Vector{Union{Nothing, DofCoefficients{T}}}, Dict{Int, Int}, Bool} where T","Tuple{SparseMatrixCSC{T}, Vector{Union{Nothing, DofCoefficients{T}}}, Dict{Int, Int}, Bool} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Ferrite.jl
src/path.jl,Base.:*,mtsig,"Tuple{T, Vararg{Union{T, AbstractString, AbstractChar}}} where T <: AbstractPath","Tuple{T, Vararg{Union{T, AbstractString, AbstractChar}}} where T <: AbstractPath","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractPath, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/FilePathsBase.jl
src/Permutation.jl,cycles,mtsig,"Tuple{Vararg{Union{AbstractVector{<:Integer}, Tuple}}}","Tuple{Vararg{Union{AbstractVector{var""##ANON_TV#879""} where var""##ANON_TV#879"" <: Integer, Tuple}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#879""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/FiniteGroups.jl
src/Representation.jl,oplus,mtsig,Tuple{Vararg{AbstractVector{<:AbstractMatrix{<:Number}}}},"Tuple{Vararg{AbstractVector{var""##ANON_TV#897""} where var""##ANON_TV#897"" <: (AbstractMatrix{var""##ANON_TV#898""} where var""##ANON_TV#898"" <: Number)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#898""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#897""), :(Union{}), :(AbstractMatrix{var""##ANON_TV#898""} where var""##ANON_TV#898"" <: Number), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/FiniteGroups.jl
src/utils/basecol.jl,Combination,mtsig,"Tuple{Vararg{Union{AbstractVector{T}, AbstractMatrix{T}}}} where T","Tuple{Vararg{Union{AbstractVector{T}, AbstractMatrix{T}}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/FixedEffectModels.jl
src/FixedEffectSolvers/FixedEffectSolverCPU.jl,<NOT A FUNSIG>,tyassorann,"Vector{Union{Nothing, <:AbstractVector}}","Vector{Union{Nothing, var""##ANON_TV#1241""} where var""##ANON_TV#1241"" <: AbstractVector}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1241""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/FixedEffects.jl
src/0_Structs_And_Enums.jl,FunctionEvaluationResult,mtsig,"(Tuple{Vector{T}, Vector{Union{Missing, R}}, Symbol, Union{Missing, NamedTuple}} where T <: Real) where R <: Real","(Tuple{Vector{T}, Vector{Union{Missing, R}}, Symbol, Union{Missing, NamedTuple}} where T <: Real) where R <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/FixedPointAcceleration.jl
src/utils.jl,isleaflike,mtsig,Tuple{Tuple{Vararg{AbstractArray{<:Number}}}},"Tuple{Tuple{Vararg{AbstractArray{var""##ANON_TV#1362""} where var""##ANON_TV#1362"" <: Number}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1362""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Flux.jl
src/callbacks/scheduler.jl,<NOT A FUNSIG>,tyassorann,"Dict{Type{<:HyperParameter}, ParameterSchedulers.AbstractSchedule}","Dict{Type{var""##ANON_TV#1027""} where var""##ANON_TV#1027"" <: HyperParameter, ParameterSchedulers.AbstractSchedule}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1027""), :(Union{}), :HyperParameter, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/FluxTraining.jl
src/arsim.jl,arsim,mtsig,"Tuple{AR, Integer, Union{Nothing, AbstractVector{Union{Missing, T}}}} where T <: Real","Tuple{AR, Integer, Union{Nothing, AbstractVector{Union{Missing, T}}}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Forecast.jl
src/arsim.jl,arsim,mtsig,"Tuple{T, T, T, Integer, T, Union{Nothing, Distribution}, Union{Nothing, AbstractVector{Union{Missing, T}}}} where T <: Real","Tuple{T, T, T, Integer, T, Union{Nothing, Distribution}, Union{Nothing, AbstractVector{Union{Missing, T}}}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Forecast.jl
src/arsim.jl,arsim,mtsig,"Tuple{AbstractVector{T}, T, AbstractVector{T}, Integer, T, Union{Nothing, Distribution}, Union{Nothing, AbstractVector{Union{Missing, T}}}} where T <: Real","Tuple{AbstractVector{T}, T, AbstractVector{T}, Integer, T, Union{Nothing, Distribution}, Union{Nothing, AbstractVector{Union{Missing, T}}}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Forecast.jl
src/arsim.jl,arsim,mtsig,"Tuple{AbstractArray{T}, AbstractVector{T}, AbstractArray{T}, Integer, Matrix{T}, Union{Nothing, Distribution}, Union{Nothing, AbstractMatrix{Union{Missing, T}}}} where T <: Real","Tuple{AbstractArray{T}, AbstractVector{T}, AbstractArray{T}, Integer, Matrix{T}, Union{Nothing, Distribution}, Union{Nothing, AbstractMatrix{Union{Missing, T}}}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Forecast.jl
src/algorithms/posterior_factorization.jl,PosteriorFactorization,mtsig,"Tuple{Vararg{Union{T, Set{T}, Vector{T}} where T <: Variable}, Any}","Tuple{Vararg{Union{T, Set{T}, Vector{T}} where T <: Variable}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Variable, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion), list(JuliaSub.TCInvar, JuliaSub.TCUnion), list(JuliaSub.TCInvar, JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,false,false,false,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/engines/julia/update_rules/delta_conjugate.jl,ruleSPDeltaCInGX,mtsig,"Tuple{Function, Int64, Message, Vararg{Message{<:Gaussian}}, Any, Any, Any, Any}","Tuple{Function, Int64, Message, Vararg{Message{var""##ANON_TV#860""} where var""##ANON_TV#860"" <: Gaussian}, Any, Any, Any, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#860""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/engines/julia/update_rules/delta_conjugate.jl,ruleMDeltaCInMGX,mtsig,"Tuple{Function, Message, Vararg{Message{<:Gaussian}}}","Tuple{Function, Message, Vararg{Message{var""##ANON_TV#861""} where var""##ANON_TV#861"" <: Gaussian}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#861""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/engines/julia/update_rules/delta_extended.jl,ruleSPDeltaEOutNGX,mtsig,"Tuple{Function, Nothing, Vararg{Message{<:Gaussian}}}","Tuple{Function, Nothing, Vararg{Message{var""##ANON_TV#863""} where var""##ANON_TV#863"" <: Gaussian}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#863""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/engines/julia/update_rules/delta_extended.jl,ruleSPDeltaEInGX,mtsig,"Tuple{Function, Function, Message{<:Gaussian}, Vararg{Union{Message{<:Gaussian}, Nothing}}}","Tuple{Function, Function, Message{var""##ANON_TV#865""} where var""##ANON_TV#865"" <: Gaussian, Vararg{Union{Message{var""##ANON_TV#866""} where var""##ANON_TV#866"" <: Gaussian, Nothing}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#865""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#866""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/engines/julia/update_rules/delta_extended.jl,ruleSPDeltaEInGX,mtsig,"Tuple{Function, Int64, Message{<:Gaussian}, Vararg{Message{<:Gaussian}}}","Tuple{Function, Int64, Message{var""##ANON_TV#869""} where var""##ANON_TV#869"" <: Gaussian, Vararg{Message{var""##ANON_TV#870""} where var""##ANON_TV#870"" <: Gaussian}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#869""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#870""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/engines/julia/update_rules/delta_extended.jl,ruleMDeltaEInGX,mtsig,"Tuple{Function, Message{<:Gaussian}, Vararg{Message{<:Gaussian}}}","Tuple{Function, Message{var""##ANON_TV#871""} where var""##ANON_TV#871"" <: Gaussian, Vararg{Message{var""##ANON_TV#872""} where var""##ANON_TV#872"" <: Gaussian}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#871""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#872""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/engines/julia/update_rules/delta_sampling.jl,ruleSPDeltaSInGX,mtsig,"Tuple{Function, Int64, Message, Vararg{Message{<:Gaussian}}, Any, Any}","Tuple{Function, Int64, Message, Vararg{Message{var""##ANON_TV#873""} where var""##ANON_TV#873"" <: Gaussian}, Any, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#873""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/engines/julia/update_rules/delta_sampling.jl,ruleMDeltaSInMGX,mtsig,"Tuple{Function, Message, Vararg{Message{<:Gaussian}}}","Tuple{Function, Message, Vararg{Message{var""##ANON_TV#874""} where var""##ANON_TV#874"" <: Gaussian}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#874""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/engines/julia/update_rules/delta_unscented.jl,ruleSPDeltaUTOutNGX,mtsig,"Tuple{Function, Nothing, Vararg{Message{<:Gaussian}}, Float64}","Tuple{Function, Nothing, Vararg{Message{var""##ANON_TV#878""} where var""##ANON_TV#878"" <: Gaussian}, Float64}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#878""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/engines/julia/update_rules/delta_unscented.jl,ruleSPDeltaUTInGX,mtsig,"Tuple{Function, Function, Message{<:Gaussian}, Vararg{Union{Message{<:Gaussian}, Nothing}}, Float64}","Tuple{Function, Function, Message{var""##ANON_TV#880""} where var""##ANON_TV#880"" <: Gaussian, Vararg{Union{Message{var""##ANON_TV#881""} where var""##ANON_TV#881"" <: Gaussian, Nothing}}, Float64}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#880""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#881""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/engines/julia/update_rules/delta_unscented.jl,ruleSPDeltaUTInGX,mtsig,"Tuple{Function, Int64, Message{<:Gaussian}, Vararg{Message{<:Gaussian}}, Float64}","Tuple{Function, Int64, Message{var""##ANON_TV#884""} where var""##ANON_TV#884"" <: Gaussian, Vararg{Message{var""##ANON_TV#885""} where var""##ANON_TV#885"" <: Gaussian}, Float64}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#884""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#885""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/engines/julia/update_rules/delta_unscented.jl,ruleMDeltaUTInGX,mtsig,"Tuple{Function, Message{<:Gaussian}, Vararg{Message{<:Gaussian}}, Float64}","Tuple{Function, Message{var""##ANON_TV#886""} where var""##ANON_TV#886"" <: Gaussian, Vararg{Message{var""##ANON_TV#887""} where var""##ANON_TV#887"" <: Gaussian}, Float64}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#886""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#887""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/engines/julia/update_rules/delta_unscented.jl,collectStatistics,mtsig,"Tuple{Vararg{Union{Message{<:Gaussian}, Nothing}}}","Tuple{Vararg{Union{Message{var""##ANON_TV#888""} where var""##ANON_TV#888"" <: Gaussian, Nothing}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#888""), :(Union{}), :Gaussian, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ForneyLab.jl
src/parser/ocblocks.jl,merge_blocks,mtsig,Tuple{Vararg{Vector{<:AbstractBlock}}},"Tuple{Vararg{Vector{var""##ANON_TV#993""} where var""##ANON_TV#993"" <: AbstractBlock}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#993""), :(Union{}), :AbstractBlock, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Franklin.jl
src/Solvers/lut.jl,build_lut,mtsig,"Tuple{Any, Vararg{Pair{Symbol, <:Union{Number, AbstractVector}}}, Vararg{Any}}","Tuple{Any, Vararg{Pair{Symbol, var""##ANON_TV#1161""} where var""##ANON_TV#1161"" <: Union{Number, AbstractVector}}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1161""), :(Union{}), :(Union{Number, AbstractVector}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/FreezeCurves.jl
src/types.jl,RowType,mtsig,"Tuple{Vararg{Pair{Symbol, <:AbstractSQLType}}, Any}","Tuple{Vararg{Pair{Symbol, var""##ANON_TV#1171""} where var""##ANON_TV#1171"" <: AbstractSQLType}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1171""), :(Union{}), :AbstractSQLType, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/FunSQL.jl
src/types.jl,BoxType,mtsig,"Tuple{Symbol, Vararg{Pair{<:Union{Symbol, Int}, <:AbstractSQLType}}, Any}","Tuple{Symbol, Vararg{(Pair{var""##ANON_TV#1172"", var""##ANON_TV#1173""} where var""##ANON_TV#1172"" <: Union{Symbol, Int}) where var""##ANON_TV#1173"" <: AbstractSQLType}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1172""), :(Union{}), :(Union{Symbol, Int}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1173""), :(Union{}), :AbstractSQLType, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/FunSQL.jl
src/PersistentMap.jl,PersistentArrayMap,mtsig,"(Tuple{Vararg{Union{Tuple{K, V}, Pair{K, V}}}} where V) where K","(Tuple{Vararg{Union{Tuple{K, V}, Pair{K, V}}}} where V) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/FunctionalCollections.jl
src/StateMachine.jl,sandboxStateMachineStep,mtsig,"Tuple{Vector{Tuple{DateTime, Int, <:Function, T}}, Int} where T","Tuple{Vector{Tuple{DateTime, Int, var""##ANON_TV#1053"", T} where var""##ANON_TV#1053"" <: Function}, Int} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1053""), :(Union{}), :Function, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/FunctionalStateMachine.jl
src/StateMachineAnimation.jl,animateStateMachineHistoryByTime,mtsig,"Tuple{Vector{Tuple{DateTime, Int, <:Function, T}}, Int, Any, String, Bool, Any, Any, Bool, AbstractString} where T","Tuple{Vector{Tuple{DateTime, Int, var""##ANON_TV#1054"", T} where var""##ANON_TV#1054"" <: Function}, Int, Any, String, Bool, Any, Any, Bool, AbstractString} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1054""), :(Union{}), :Function, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/FunctionalStateMachine.jl
src/StateMachineAnimation.jl,animateStateMachineHistoryByTimeCompound,mtsig,"Tuple{Dict{Symbol, Vector{Tuple{DateTime, Int, <:Function, T}}}, Any, Any, Int, Any, String, Bool, Bool, Bool, Dict{Symbol, String}, AbstractString, Function} where T","Tuple{Dict{Symbol, Vector{Tuple{DateTime, Int, var""##ANON_TV#1055"", T} where var""##ANON_TV#1055"" <: Function}}, Any, Any, Int, Any, String, Bool, Bool, Bool, Dict{Symbol, String}, AbstractString, Function} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1055""), :(Union{}), :Function, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/FunctionalStateMachine.jl
src/StateMachineAnimation.jl,getTotalNumberSteps,mtsig,"Tuple{Dict{Symbol, Vector{Tuple{DateTime, Int, <:Function, T}}}} where T","Tuple{Dict{Symbol, Vector{Tuple{DateTime, Int, var""##ANON_TV#1056"", T} where var""##ANON_TV#1056"" <: Function}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1056""), :(Union{}), :Function, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/FunctionalStateMachine.jl
src/StateMachineAnimation.jl,getFirstStepHist,mtsig,"Tuple{Dict{Symbol, Vector{Tuple{DateTime, Int, <:Function, T}}}} where T","Tuple{Dict{Symbol, Vector{Tuple{DateTime, Int, var""##ANON_TV#1057"", T} where var""##ANON_TV#1057"" <: Function}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1057""), :(Union{}), :Function, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/FunctionalStateMachine.jl
src/StateMachineAnimation.jl,animateStateMachineHistoryIntervalCompound,mtsig,"(Tuple{Dict{Symbol, Vector{Tuple{DateTime, Int, <:Function, T}}}, Dict{Symbol, N}, Int, Any, Int, String, Bool, Bool, Bool, Function, Dict{Symbol, String}, AbstractString, Function} where N) where T","(Tuple{Dict{Symbol, Vector{Tuple{DateTime, Int, var""##ANON_TV#1058"", T} where var""##ANON_TV#1058"" <: Function}}, Dict{Symbol, N}, Int, Any, Int, String, Bool, Bool, Bool, Function, Dict{Symbol, String}, AbstractString, Function} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1058""), :(Union{}), :Function, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/FunctionalStateMachine.jl
src/columns.jl,RLEVector,mtsig,"(Tuple{Type{<:Signed}, Type{Union{S, T}}} where T) where S","(Tuple{Type{var""##ANON_TV#1135""} where var""##ANON_TV#1135"" <: Signed, Type{Union{S, T}}} where T) where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1135""), :(Union{}), :Signed, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,false,false,true,true,data/ta-info/all/FunctionalTables.jl
src/dataset_loading.jl,_to,mtsig,"Tuple{Type{Union{Missing, T}}, String} where T <: Number","Tuple{Type{Union{Missing, T}}, String} where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/GHCNData.jl
src/read_snapshot/particles_in_halo/read_particles_by_id.jl,construct_matched_dict,mtsig,"Tuple{Dict{String, VecOrMat{T} where T}, Array{String, 1}, Array{<:Integer, 1}}","Tuple{Dict{String, VecOrMat{T} where T}, Array{String, 1}, Array{var""##ANON_TV#791"", 1} where var""##ANON_TV#791"" <: Integer}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#791""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/GadgetIO.jl
src/fictplay.jl,time_series!,mtsig,"Tuple{AbstractRNG, AbstractFictitiousPlay{N}, NTuple{N, Matrix{<:Real}}, BROptions, Integer} where N","Tuple{AbstractRNG, AbstractFictitiousPlay{N}, NTuple{N, Matrix{var""##ANON_TV#2010""} where var""##ANON_TV#2010"" <: Real}, BROptions, Integer} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2010""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,true,true,true,data/ta-info/all/GameTheory.jl
src/genetics.jl,<NOT A FUNSIG>,tyassorann,Array{Drive{<:Genotype}},"Array{Drive{var""##ANON_TV#857""} where var""##ANON_TV#857"" <: Genotype}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#857""), :(Union{}), :Genotype, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/GeneDrive.jl
src/genetics.jl,Genetics,mtsig,"Tuple{Type{C}, Array{Drive{<:Genotype}}} where C <: Construct","Tuple{Type{C}, Array{Drive{var""##ANON_TV#858""} where var""##ANON_TV#858"" <: Genotype}} where C <: Construct","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#858""), :(Union{}), :Genotype, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:C, :(Union{}), :Construct, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/GeneDrive.jl
src/organisms.jl,<NOT A FUNSIG>,tyassorann,"DataStructures.OrderedDict{Type{<:LifeStage}, Stage}","DataStructures.OrderedDict{Type{var""##ANON_TV#870""} where var""##ANON_TV#870"" <: LifeStage, Stage}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#870""), :(Union{}), :LifeStage, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/GeneDrive.jl
src/spatial_structure.jl,<NOT A FUNSIG>,tyassorann,"DataStructures.OrderedDict{Type{<:Species}, Organism}","DataStructures.OrderedDict{Type{var""##ANON_TV#877""} where var""##ANON_TV#877"" <: Species, Organism}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#877""), :(Union{}), :Species, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/GeneDrive.jl
src/GenericFFT.jl,AbstractFFTs.complexfloat,mtsig,Tuple{StridedArray{Complex{<:AbstractFloat}}},"Tuple{StridedArray{Complex{var""##ANON_TV#1182""} where var""##ANON_TV#1182"" <: AbstractFloat}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1182""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/GenericFFT.jl
src/record.jl,vectorise,mtsig,"Tuple{AbstractArray{Union{Missing, T}, 1}} where T","Tuple{AbstractArray{Union{Missing, T}, 1}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/GenomicAnnotations.jl
src/geoarray.jl,Base.setindex!,mtsig,"Tuple{GeoArray, Any, Vararg{Union{<:Integer, <:AbstractRange{<:Integer}}, 2}}","Tuple{GeoArray, Any, Vararg{(Union{var""##ANON_TV#943"", var""##ANON_TV#944""} where var""##ANON_TV#943"" <: Integer) where var""##ANON_TV#944"" <: (AbstractRange{var""##ANON_TV#945""} where var""##ANON_TV#945"" <: Integer), 2}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#945""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#943""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#944""), :(Union{}), :(AbstractRange{var""##ANON_TV#945""} where var""##ANON_TV#945"" <: Integer), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/GeoArrays.jl
src/geoarray.jl,Base.setindex!,mtsig,"Tuple{GeoArray, Any, Vararg{Union{<:Integer, <:AbstractRange{<:Integer}}, 3}}","Tuple{GeoArray, Any, Vararg{(Union{var""##ANON_TV#946"", var""##ANON_TV#947""} where var""##ANON_TV#946"" <: Integer) where var""##ANON_TV#947"" <: (AbstractRange{var""##ANON_TV#948""} where var""##ANON_TV#948"" <: Integer), 3}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#948""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#946""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#947""), :(Union{}), :(AbstractRange{var""##ANON_TV#948""} where var""##ANON_TV#948"" <: Integer), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/GeoArrays.jl
src/array.jl,DD.DimTable,mtsig,"Tuple{Vararg{Tuple{<:AbstractGeoArray, Vararg{<:AbstractGeoArray}}}}","Tuple{Vararg{Tuple{var""##ANON_TV#1280"", Vararg{var""##ANON_TV#1281""} where var""##ANON_TV#1281"" <: AbstractGeoArray} where var""##ANON_TV#1280"" <: AbstractGeoArray}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1281""), :(Union{}), :AbstractGeoArray, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1280""), :(Union{}), :AbstractGeoArray, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/GeoData.jl
src/Elasticity/Elasticity.jl,effective_ε,mtsig,"(Tuple{NTuple{N, Union{T, NTuple{4, T}}}, Any, NTuple{N, Union{T, NTuple{4, T}}}, Any} where T) where N","(Tuple{NTuple{N, Union{T, NTuple{4, T}}}, Any, NTuple{N, Union{T, NTuple{4, T}}}, Any} where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/GeoParams.jl
src/Elasticity/Elasticity.jl,effective_ε,mtsig,"(Tuple{NTuple{N, Union{T, NTuple{4, T}}}, Any, NTuple{N, Union{T, NTuple{4, T}}}, Any, Int64} where T) where N","(Tuple{NTuple{N, Union{T, NTuple{4, T}}}, Any, NTuple{N, Union{T, NTuple{4, T}}}, Any, Int64} where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/GeoParams.jl
src/Elasticity/Elasticity.jl,effective_ε,mtsig,"((Tuple{NTuple{N, Union{T, NTuple{4, T}}}, Any, NTuple{N, Union{T, NTuple{4, T}}}, Any, NTuple{N, Union{I, NTuple{4, I}}}} where I <: Integer) where T) where N","((Tuple{NTuple{N, Union{T, NTuple{4, T}}}, Any, NTuple{N, Union{T, NTuple{4, T}}}, Any, NTuple{N, Union{I, NTuple{4, I}}}} where I <: Integer) where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:I, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/GeoParams.jl
src/Elasticity/Elasticity.jl,effective_ε,mtsig,"((Tuple{NTuple{N, T}, Any, NTuple{N, T}, Any, NTuple{N, Union{I, NTuple{4, I}}}} where I <: Integer) where T) where N","((Tuple{NTuple{N, T}, Any, NTuple{N, T}, Any, NTuple{N, Union{I, NTuple{4, I}}}} where I <: Integer) where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:I, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/GeoParams.jl
src/StressComputations/StressComputations.jl,compute_τij,mtsig,"(Tuple{Any, NTuple{N, Union{T, NTuple{4, T}}}, Any, NTuple{N, Union{T, NTuple{4, T}}}} where T) where N","(Tuple{Any, NTuple{N, Union{T, NTuple{4, T}}}, Any, NTuple{N, Union{T, NTuple{4, T}}}} where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/GeoParams.jl
src/StressComputations/StressComputations.jl,compute_p_τij,mtsig,"(Tuple{Any, NTuple{N, Union{T, NTuple{4, T}}}, T, Any, NTuple{N, Union{T, NTuple{4, T}}}} where T) where N","(Tuple{Any, NTuple{N, Union{T, NTuple{4, T}}}, T, Any, NTuple{N, Union{T, NTuple{4, T}}}} where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/GeoParams.jl
src/StressComputations/StressComputations.jl,compute_τij,mtsig,"(((Tuple{NTuple{N1, AbstractMaterialParamsStruct}, NTuple{N2, Union{T, NTuple{4, T}}}, Any, NTuple{N2, Union{T, NTuple{4, T}}}, NTuple{N2, Union{I, NTuple{4, I}}}} where I <: Integer) where N2) where N1) where T","(((Tuple{NTuple{N1, AbstractMaterialParamsStruct}, NTuple{N2, Union{T, NTuple{4, T}}}, Any, NTuple{N2, Union{T, NTuple{4, T}}}, NTuple{N2, Union{I, NTuple{4, I}}}} where I <: Integer) where N2) where N1) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:I, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,false,true,true,data/ta-info/all/GeoParams.jl
src/StressComputations/StressComputations.jl,compute_p_τij,mtsig,"(((Tuple{NTuple{N1, AbstractMaterialParamsStruct}, NTuple{N2, Union{T, NTuple{4, T}}}, T, Any, NTuple{N2, Union{T, NTuple{4, T}}}, NTuple{N2, Union{I, NTuple{4, I}}}} where I <: Integer) where N2) where N1) where T","(((Tuple{NTuple{N1, AbstractMaterialParamsStruct}, NTuple{N2, Union{T, NTuple{4, T}}}, T, Any, NTuple{N2, Union{T, NTuple{4, T}}}, NTuple{N2, Union{I, NTuple{4, I}}}} where I <: Integer) where N2) where N1) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:I, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,false,true,true,data/ta-info/all/GeoParams.jl
src/StressComputations/StressComputations.jl,volumetric_strainrate,mtsig,"Tuple{NTuple{3, Union{T, NTuple{4, T}}}} where T","Tuple{NTuple{3, Union{T, NTuple{4, T}}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/GeoParams.jl
src/StressComputations/StressComputations.jl,volumetric_strainrate,mtsig,"Tuple{NTuple{6, Union{T, NTuple{4, T}}}} where T","Tuple{NTuple{6, Union{T, NTuple{4, T}}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/GeoParams.jl
src/TensorAlgebra/TensorAlgebra.jl,staggered_tensor_average,mtsig,"(Tuple{NTuple{N, Union{T, NTuple{4, T}}}} where T) where N","(Tuple{NTuple{N, Union{T, NTuple{4, T}}}} where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/GeoParams.jl
src/fixed_arrays.jl,eltype_or,mtsig,"Tuple{Type{($name){S, T} where S}, Any} where T","Tuple{Type{($name){S, T} where S}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/GeometryBasics.jl
src/fixed_arrays.jl,eltype_or,mtsig,"Tuple{Type{($name){S, T} where T}, Any} where S","Tuple{Type{($name){S, T} where T}, Any} where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/GeometryBasics.jl
src/fixed_arrays.jl,size_or,mtsig,"Tuple{Type{($name){S, T} where S}, Any} where T","Tuple{Type{($name){S, T} where S}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/GeometryBasics.jl
src/fixed_arrays.jl,size_or,mtsig,"Tuple{Type{($name){S, T} where T}, Any} where S","Tuple{Type{($name){S, T} where T}, Any} where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/GeometryBasics.jl
src/FixedSizeArrays.jl,eltype_or,mtsig,"Tuple{Type{($name){S, T} where S}, Any} where T","Tuple{Type{($name){S, T} where S}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/GeometryTypes.jl
src/FixedSizeArrays.jl,eltype_or,mtsig,"Tuple{Type{($name){S, T} where T}, Any} where S","Tuple{Type{($name){S, T} where T}, Any} where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/GeometryTypes.jl
src/FixedSizeArrays.jl,size_or,mtsig,"Tuple{Type{($name){S, T} where S}, Any} where T","Tuple{Type{($name){S, T} where S}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/GeometryTypes.jl
src/FixedSizeArrays.jl,size_or,mtsig,"Tuple{Type{($name){S, T} where T}, Any} where S","Tuple{Type{($name){S, T} where T}, Any} where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/GeometryTypes.jl
src/forge.jl,constructfield,mtsig,"Tuple{FieldContext, Type{Union{Vector{FT}, Nothing}}, Vector} where FT","Tuple{FieldContext, Type{Union{Vector{FT}, Nothing}}, Vector} where FT","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:FT, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/GitForge.jl
src/forge.jl,constructfield,mtsig,"(Tuple{FieldContext, Type{Union{Dict{K, V}, Nothing}}, Dict} where V) where K","(Tuple{FieldContext, Type{Union{Dict{K, V}, Nothing}}, Dict} where V) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/GitForge.jl
src/forge.jl,constructfield,mtsig,"(((Tuple{FieldContext, Type{Union{Dict{K, V}, Nothing}}, Dict{K2, V2}} where V2) where K2 <: Union{AbstractString, Symbol}) where V) where K","(((Tuple{FieldContext, Type{Union{Dict{K, V}, Nothing}}, Dict{K2, V2}} where V2) where K2 <: Union{AbstractString, Symbol}) where V) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K2, :(Union{}), :(Union{AbstractString, Symbol}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,false,false,true,true,data/ta-info/all/GitForge.jl
src/Gnuplot.jl,hist,mtsig,"Tuple{Vector{Union{Missing, T}}, Vararg{Any}} where T <: Real","Tuple{Vector{Union{Missing, T}}, Vararg{Any}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Gnuplot.jl
src/Gnuplot.jl,hist,mtsig,"(Tuple{Vector{Union{Missing, T1}}, Vector{T2}, Vararg{Any}} where T2 <: Real) where T1 <: Real","(Tuple{Vector{Union{Missing, T1}}, Vector{T2}, Vararg{Any}} where T2 <: Real) where T1 <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T2, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T1, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Gnuplot.jl
src/Gnuplot.jl,hist,mtsig,"(Tuple{Vector{T1}, Vector{Union{Missing, T2}}, Vararg{Any}} where T2 <: Real) where T1 <: Real","(Tuple{Vector{T1}, Vector{Union{Missing, T2}}, Vararg{Any}} where T2 <: Real) where T1 <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T2, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T1, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Gnuplot.jl
src/Gnuplot.jl,hist,mtsig,"(Tuple{Vector{Union{Missing, T1}}, Vector{Union{Missing, T2}}, Vararg{Any}} where T2 <: Real) where T1 <: Real","(Tuple{Vector{Union{Missing, T1}}, Vector{Union{Missing, T2}}, Vararg{Any}} where T2 <: Real) where T1 <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T2, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T1, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Gnuplot.jl
src/assemblypatterns.jl,<NOT A FUNSIG>,tyassorann,"Array{Type{<:AssemblyType}, 1}","Array{Type{var""##ANON_TV#677""} where var""##ANON_TV#677"" <: AssemblyType, 1}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#677""), :(Union{}), :AssemblyType, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/GradientRobustMultiPhysics.jl
src/finiteelements.jl,<NOT A FUNSIG>,tyassorann,"Dict{Type{<:AbstractGridComponent}, Any}","Dict{Type{var""##ANON_TV#901""} where var""##ANON_TV#901"" <: AbstractGridComponent, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#901""), :(Union{}), :AbstractGridComponent, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/GradientRobustMultiPhysics.jl
src/code_gen/multilincomb.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, NTuple{<:Any, Symbol}}","Dict{Symbol, NTuple{var""##ANON_TV#1176"", Symbol} where var""##ANON_TV#1176"" <: Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1176""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/GraphMatFun.jl
src/code_gen/multilincomb.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, NTuple{<:Any, T}}","Dict{Symbol, NTuple{var""##ANON_TV#1177"", T} where var""##ANON_TV#1177"" <: Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1177""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/GraphMatFun.jl
src/types.jl,Base.convert,mtsig,"Tuple{Type{Union{T, Nothing}}, Some{Nothing}} where T <: GraphQLNode","Tuple{Type{Union{T, Nothing}}, Some{Nothing}} where T <: GraphQLNode","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :GraphQLNode, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/GraphQLGen.jl
src/types.jl,Base.convert,mtsig,"Tuple{Type{Union{T, Nothing}}, Some{T}} where T <: GraphQLNode","Tuple{Type{Union{T, Nothing}}, Some{T}} where T <: GraphQLNode","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :GraphQLNode, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/GraphQLGen.jl
src/composite.jl,Base.rand,mtsig,"(Tuple{AbstractRNG, SamplerType{Chain{V, G, T} where G}} where T) where V","(Tuple{AbstractRNG, SamplerType{Chain{V, G, T} where G}} where T) where V","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:G, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/Grassmann.jl
src/composite.jl,Base.rand,mtsig,"(Tuple{AbstractRNG, SamplerType{Couple{V, B, T} where B}} where T) where V","(Tuple{AbstractRNG, SamplerType{Couple{V, B, T} where B}} where T) where V","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:B, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/Grassmann.jl
src/multivectors.jl,valuetype,mtsig,"Tuple{Type{Couple{V, B, T} where {V, B}}} where T","Tuple{Type{(Couple{V, B, T} where V) where B}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:B, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/Grassmann.jl
src/generic/product.jl,VcatGrid,mtsig,"Tuple{Vararg{AbstractGrid{<:Any, <:Any}, M}} where M","Tuple{Vararg{(AbstractGrid{var""##ANON_TV#2040"", var""##ANON_TV#2041""} where var""##ANON_TV#2040"" <: Any) where var""##ANON_TV#2041"" <: Any, M}} where M","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2040""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2041""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/GridArrays.jl
src/generic/product.jl,VcatGrid,mtsig,"((Tuple{Vararg{AbstractGrid{<:Any, <:Any}, M}} where M) where T) where N","((Tuple{Vararg{(AbstractGrid{var""##ANON_TV#2042"", var""##ANON_TV#2043""} where var""##ANON_TV#2042"" <: Any) where var""##ANON_TV#2043"" <: Any, M}} where M) where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2042""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2043""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,true,true,true,true,true,true,data/ta-info/all/GridArrays.jl
src/Arrays/Maps.jl,evaluate!,mtsig,"Tuple{Any, Broadcasting, Vararg{Union{Number, AbstractArray{<:Number}}}}","Tuple{Any, Broadcasting, Vararg{Union{Number, AbstractArray{var""##ANON_TV#1190""} where var""##ANON_TV#1190"" <: Number}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1190""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Gridap.jl
src/Arrays/Maps.jl,return_value,mtsig,"Tuple{Broadcasting, Vararg{Union{Number, AbstractArray{<:Number}}}}","Tuple{Broadcasting, Vararg{Union{Number, AbstractArray{var""##ANON_TV#1192""} where var""##ANON_TV#1192"" <: Number}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1192""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Gridap.jl
src/Arrays/Maps.jl,return_cache,mtsig,"Tuple{Broadcasting, Vararg{Union{Number, AbstractArray{<:Number}}}}","Tuple{Broadcasting, Vararg{Union{Number, AbstractArray{var""##ANON_TV#1193""} where var""##ANON_TV#1193"" <: Number}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1193""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Gridap.jl
src/Arrays/PosNegReindex.jl,lazy_map,mtsig,"Tuple{typeof(evaluate), Type{T}, Vararg{LazyArray{<:Fill{<:PosNegReindex}}}} where T","Tuple{typeof(evaluate), Type{T}, Vararg{LazyArray{var""##ANON_TV#1194""} where var""##ANON_TV#1194"" <: (Fill{var""##ANON_TV#1195""} where var""##ANON_TV#1195"" <: PosNegReindex)}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1195""), :(Union{}), :PosNegReindex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1194""), :(Union{}), :(Fill{var""##ANON_TV#1195""} where var""##ANON_TV#1195"" <: PosNegReindex), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Gridap.jl
src/Arrays/PosNegReindex.jl,lazy_map,mtsig,"Tuple{typeof(evaluate), Type{T}, Fill, Vararg{LazyArray{<:Fill{<:PosNegReindex}}}} where T","Tuple{typeof(evaluate), Type{T}, Fill, Vararg{LazyArray{var""##ANON_TV#1198""} where var""##ANON_TV#1198"" <: (Fill{var""##ANON_TV#1199""} where var""##ANON_TV#1199"" <: PosNegReindex)}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1199""), :(Union{}), :PosNegReindex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1198""), :(Union{}), :(Fill{var""##ANON_TV#1199""} where var""##ANON_TV#1199"" <: PosNegReindex), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Gridap.jl
src/CellData/CellFields.jl,evaluate!,mtsig,"Tuple{Any, Operation, Vararg{Union{AbstractArray{<:Number}, CellField}}}","Tuple{Any, Operation, Vararg{Union{AbstractArray{var""##ANON_TV#1237""} where var""##ANON_TV#1237"" <: Number, CellField}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1237""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Gridap.jl
src/CellData/CellFields.jl,Base.:∘,mtsig,"Tuple{Function, Tuple{Vararg{Union{AbstractArray{<:Number}, CellField}}}}","Tuple{Function, Tuple{Vararg{Union{AbstractArray{var""##ANON_TV#1238""} where var""##ANON_TV#1238"" <: Number, CellField}}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1238""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Gridap.jl
src/Fields/ArrayBlocks.jl,return_value,mtsig,"Tuple{BroadcastingFieldOpMap, Vararg{ArrayBlock{A, N} where A}} where N","Tuple{BroadcastingFieldOpMap, Vararg{ArrayBlock{A, N} where A}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/Gridap.jl
src/Fields/ArrayBlocks.jl,return_cache,mtsig,"Tuple{BroadcastingFieldOpMap, Vararg{ArrayBlock{A, N} where A}} where N","Tuple{BroadcastingFieldOpMap, Vararg{ArrayBlock{A, N} where A}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/Gridap.jl
src/Fields/ArrayBlocks.jl,evaluate!,mtsig,"Tuple{Any, BroadcastingFieldOpMap, Vararg{ArrayBlock{A, N} where A}} where N","Tuple{Any, BroadcastingFieldOpMap, Vararg{ArrayBlock{A, N} where A}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/Gridap.jl
src/Fields/FieldArrays.jl,return_value,mtsig,"Tuple{Broadcasting{<:Operation}, Vararg{Union{Field, AbstractArray{<:Field}}}}","Tuple{Broadcasting{var""##ANON_TV#1449""} where var""##ANON_TV#1449"" <: Operation, Vararg{Union{Field, AbstractArray{var""##ANON_TV#1450""} where var""##ANON_TV#1450"" <: Field}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1449""), :(Union{}), :Operation, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1450""), :(Union{}), :Field, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Gridap.jl
src/Fields/FieldArrays.jl,evaluate!,mtsig,"Tuple{Any, Broadcasting{<:Operation}, Vararg{Union{Field, AbstractArray{<:Field}}}}","Tuple{Any, Broadcasting{var""##ANON_TV#1451""} where var""##ANON_TV#1451"" <: Operation, Vararg{Union{Field, AbstractArray{var""##ANON_TV#1452""} where var""##ANON_TV#1452"" <: Field}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1451""), :(Union{}), :Operation, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1452""), :(Union{}), :Field, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Gridap.jl
src/Fields/FieldArrays.jl,BroadcastOpFieldArray,mtsig,"Tuple{Any, Vararg{Union{Field, AbstractArray{<:Field}}}}","Tuple{Any, Vararg{Union{Field, AbstractArray{var""##ANON_TV#1453""} where var""##ANON_TV#1453"" <: Field}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1453""), :(Union{}), :Field, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Gridap.jl
src/MultiField.jl,FESpaces.interpolate_everywhere!,mtsig,"Tuple{Any, AbstractVector, Vector{AbstractPData{<:AbstractVector}}, DistributedMultiFieldFESpace}","Tuple{Any, AbstractVector, Vector{AbstractPData{var""##ANON_TV#1144""} where var""##ANON_TV#1144"" <: AbstractVector}, DistributedMultiFieldFESpace}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1144""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/GridapDistributed.jl
src/utils.jl,row_group_slots,mtsig,"Tuple{NTuple{N, AbstractVector}, NTuple{N, AbstractVector}, NTuple{N, Union{AbstractVector{<:Real}, Missings.EachReplaceMissing{<:AbstractVector{<:Union{Real, Missing}}}}}, Val{false}, Vector{Int}, Bool, Bool} where N","Tuple{NTuple{N, AbstractVector}, NTuple{N, AbstractVector}, NTuple{N, Union{AbstractVector{var""##ANON_TV#1444""} where var""##ANON_TV#1444"" <: Real, Missings.EachReplaceMissing{var""##ANON_TV#1445""} where var""##ANON_TV#1445"" <: (AbstractVector{var""##ANON_TV#1446""} where var""##ANON_TV#1446"" <: Union{Real, Missing})}}, Val{false}, Vector{Int}, Bool, Bool} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1444""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1446""), :(Union{}), :(Union{Real, Missing}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1445""), :(Union{}), :(AbstractVector{var""##ANON_TV#1446""} where var""##ANON_TV#1446"" <: Union{Real, Missing}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,true,true,true,data/ta-info/all/GroupedArrays.jl
src/widgets.jl,_init_wobsval,mtsig,"Tuple{Type{Union{Nothing, T}}, Observable{T}, Nothing} where T","Tuple{Type{Union{Nothing, T}}, Observable{T}, Nothing} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/GtkObservables.jl
src/map.jl,HealpixMap,mtsig,"((Tuple{Number} where AA <: AbstractArray{Union{T, Nothing}, 1}) where O <: Order) where T","((Tuple{Number} where AA <: AbstractArray{Union{T, Nothing}, 1}) where O <: Order) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:AA, :(Union{}), :(AbstractArray{Union{T, Nothing}, 1}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:O, :(Union{}), :Order, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/Healpix.jl
src/map_io.jl,readpixelsfromfits,mtsig,"Tuple{CFITSIO.FITSFile, Any, Any, Union{Type{RingOrder}, Type{NestedOrder}}, Type{Union{Nothing, T}}} where T <: Number","Tuple{CFITSIO.FITSFile, Any, Any, Union{Type{RingOrder}, Type{NestedOrder}}, Type{Union{Nothing, T}}} where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Healpix.jl
src/map_io.jl,writepixelstofits,mtsig,"Tuple{CFITSIO.FITSFile, Any, Vector{Union{T, Nothing}}} where T <: Number","Tuple{CFITSIO.FITSFile, Any, Vector{Union{T, Nothing}}} where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Healpix.jl
examples/Petri.jl,Data,mtsig,"Tuple{Symbol, Vararg{Pair{Symbol, <:Any}}}","Tuple{Symbol, Vararg{Pair{Symbol, var""##ANON_TV#1520""} where var""##ANON_TV#1520"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1520""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Hecke.jl
src/Hecke.jl,_is_attribute_storing_type,mtsig,"Tuple{Type{Map{<:Any, <:Any, HeckeMap, <:Any}}}","Tuple{Type{((Map{var""##ANON_TV#1544"", var""##ANON_TV#1545"", HeckeMap, var""##ANON_TV#1546""} where var""##ANON_TV#1544"" <: Any) where var""##ANON_TV#1545"" <: Any) where var""##ANON_TV#1546"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1544""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1545""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1546""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Hecke.jl
src/GrpAb/ChainComplex.jl,chain_complex,mtsig,"Tuple{Vararg{Map{GrpAbFinGen, GrpAbFinGen, <:Any, <:Any}}, Int}","Tuple{Vararg{(Map{GrpAbFinGen, GrpAbFinGen, var""##ANON_TV#1656"", var""##ANON_TV#1657""} where var""##ANON_TV#1656"" <: Any) where var""##ANON_TV#1657"" <: Any}, Int}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1656""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1657""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Hecke.jl
src/GrpAb/ChainComplex.jl,cochain_complex,mtsig,"Tuple{Vararg{Map{GrpAbFinGen, GrpAbFinGen, <:Any, <:Any}}, Int}","Tuple{Vararg{(Map{GrpAbFinGen, GrpAbFinGen, var""##ANON_TV#1661"", var""##ANON_TV#1662""} where var""##ANON_TV#1661"" <: Any) where var""##ANON_TV#1662"" <: Any}, Int}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1661""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1662""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Hecke.jl
src/00_SortedDataFrame.jl,DataFrames.combine,mtsig,"Tuple{Vector{SortedDataFrame{<:Integer}}, Symbol, Symbol, Symbol, Dates.Period}","Tuple{Vector{SortedDataFrame{var""##ANON_TV#1364""} where var""##ANON_TV#1364"" <: Integer}, Symbol, Symbol, Symbol, Dates.Period}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1364""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/HighFrequencyCovariance.jl
src/literals.jl,parseunsigned,mtsig,"Tuple{String, Vector{Type{<:Signed}}}","Tuple{String, Vector{Type{var""##ANON_TV#1385""} where var""##ANON_TV#1385"" <: Signed}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1385""), :(Union{}), :Signed, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/HumanReadableSExpressions.jl
src/literals.jl,parseint,mtsig,"Tuple{String, UInt16, Type{BigInt}, Vector{Type{<:Signed}}, BigInt}","Tuple{String, UInt16, Type{BigInt}, Vector{Type{var""##ANON_TV#1386""} where var""##ANON_TV#1386"" <: Signed}, BigInt}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1386""), :(Union{}), :Signed, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/HumanReadableSExpressions.jl
src/literals.jl,parseint,mtsig,"Tuple{String, UInt16, Type{T}, Vector{Type{<:Signed}}, T} where T <: Signed","Tuple{String, UInt16, Type{T}, Vector{Type{var""##ANON_TV#1387""} where var""##ANON_TV#1387"" <: Signed}, T} where T <: Signed","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1387""), :(Union{}), :Signed, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Signed, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,true,true,true,data/ta-info/all/HumanReadableSExpressions.jl
src/HybridArrays.jl,all_dynamic_fixed_val,mtsig,"Tuple{Type{Size}, Vararg{StaticArrays.StaticIndexing{<:Union{Int, AbstractArray, Colon}}}} where Size <: Tuple","Tuple{Type{Size}, Vararg{StaticArrays.StaticIndexing{var""##ANON_TV#1085""} where var""##ANON_TV#1085"" <: Union{Int, AbstractArray, Colon}}} where Size <: Tuple","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1085""), :(Union{}), :(Union{Int, AbstractArray, Colon}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Size, :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/HybridArrays.jl
src/convert.jl,convert,mtsig,"(Tuple{Type{Array{T, N} where T}, HybridArray{S}} where N) where S","(Tuple{Type{Array{T, N} where T}, HybridArray{S}} where N) where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/HybridArrays.jl
src/indexing.jl,getindex,mtsig,"Tuple{HybridArray{S}, Vararg{Union{Int, StaticArray{<:Tuple, Int}, Colon}}} where S","Tuple{HybridArray{S}, Vararg{Union{Int, StaticArray{var""##ANON_TV#1100"", Int} where var""##ANON_TV#1100"" <: Tuple, Colon}}} where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1100""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/HybridArrays.jl
src/indexing.jl,_totally_linear,mtsig,Tuple{Vararg{Type{<:Base.Slice}}},"Tuple{Vararg{Type{var""##ANON_TV#1102""} where var""##ANON_TV#1102"" <: Base.Slice}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1102""), :(Union{}), :(Base.Slice), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/HybridArrays.jl
src/indexing.jl,setindex!,mtsig,"Tuple{HybridArray{S}, Any, Vararg{Union{Int, StaticArray{<:Tuple, Int}, Colon}}} where S","Tuple{HybridArray{S}, Any, Vararg{Union{Int, StaticArray{var""##ANON_TV#1106"", Int} where var""##ANON_TV#1106"" <: Tuple, Colon}}} where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1106""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/HybridArrays.jl
src/indexing.jl,_setindex!,mtsig,"Tuple{Val{:dynamic_fixed_false}, HybridArray{S}, Any, Vararg{Union{Int, StaticArray{<:Tuple, Int}, Colon}}} where S","Tuple{Val{:dynamic_fixed_false}, HybridArray{S}, Any, Vararg{Union{Int, StaticArray{var""##ANON_TV#1107"", Int} where var""##ANON_TV#1107"" <: Tuple, Colon}}} where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1107""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/HybridArrays.jl
src/indexing.jl,_setindex!,mtsig,"Tuple{Val{:dynamic_fixed_true}, HybridArray, Any, Vararg{Union{Int, StaticArray{<:Tuple, Int}, Colon}}}","Tuple{Val{:dynamic_fixed_true}, HybridArray, Any, Vararg{Union{Int, StaticArray{var""##ANON_TV#1108"", Int} where var""##ANON_TV#1108"" <: Tuple, Colon}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1108""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/HybridArrays.jl
src/indexing.jl,_setindex!_all_static,mtsig,"(Tuple{HybridArray{S, T}, AbstractArray, Vararg{Union{Int, StaticArray{<:Tuple, Int}, Colon}}} where T) where S","(Tuple{HybridArray{S, T}, AbstractArray, Vararg{Union{Int, StaticArray{var""##ANON_TV#1109"", Int} where var""##ANON_TV#1109"" <: Tuple, Colon}}} where T) where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1109""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/HybridArrays.jl
src/var_equality.jl,anova,mtsig,Tuple{Vararg{AbstractVector{<:Real}}},"Tuple{Vararg{AbstractVector{var""##ANON_TV#1934""} where var""##ANON_TV#1934"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1934""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/HypothesisTests.jl
src/var_equality.jl,OneWayANOVATest,mtsig,Tuple{Vararg{AbstractVector{<:Real}}},"Tuple{Vararg{AbstractVector{var""##ANON_TV#1935""} where var""##ANON_TV#1935"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1935""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/HypothesisTests.jl
src/var_equality.jl,LeveneTest,mtsig,"Tuple{Vararg{AbstractVector{<:Real}}, Any, Any}","Tuple{Vararg{AbstractVector{var""##ANON_TV#1936""} where var""##ANON_TV#1936"" <: Real}, Any, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1936""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/HypothesisTests.jl
src/var_equality.jl,BrownForsytheTest,mtsig,Tuple{Vararg{AbstractVector{<:Real}}},"Tuple{Vararg{AbstractVector{var""##ANON_TV#1937""} where var""##ANON_TV#1937"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1937""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/HypothesisTests.jl
src/var_equality.jl,FlignerKilleenTest,mtsig,Tuple{Vararg{AbstractVector{<:Real}}},"Tuple{Vararg{AbstractVector{var""##ANON_TV#1938""} where var""##ANON_TV#1938"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1938""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/HypothesisTests.jl
src/IJulia.jl,history,mtsig,"Tuple{IO, Vararg{Union{Integer, AbstractVector{<:Integer}}}}","Tuple{IO, Vararg{Union{Integer, AbstractVector{var""##ANON_TV#753""} where var""##ANON_TV#753"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#753""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/IJulia.jl
src/IPyCells.jl,getindex,mtsig,"Tuple{Vector{Cell{<:Any}}, String}","Tuple{Vector{Cell{var""##ANON_TV#776""} where var""##ANON_TV#776"" <: Any}, String}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#776""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/IPyCells.jl
src/abstractitensornetwork.jl,⊗,mtsig,"Tuple{Pair{<:Any, <:AbstractITensorNetwork}, Pair{<:Any, <:AbstractITensorNetwork}, Vararg{Pair{<:Any, <:AbstractITensorNetwork}}, Vararg{Any}}","Tuple{(Pair{var""##ANON_TV#2040"", var""##ANON_TV#2041""} where var""##ANON_TV#2040"" <: Any) where var""##ANON_TV#2041"" <: AbstractITensorNetwork, (Pair{var""##ANON_TV#2042"", var""##ANON_TV#2043""} where var""##ANON_TV#2042"" <: Any) where var""##ANON_TV#2043"" <: AbstractITensorNetwork, Vararg{(Pair{var""##ANON_TV#2044"", var""##ANON_TV#2045""} where var""##ANON_TV#2044"" <: Any) where var""##ANON_TV#2045"" <: AbstractITensorNetwork}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2040""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2041""), :(Union{}), :AbstractITensorNetwork, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2042""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2043""), :(Union{}), :AbstractITensorNetwork, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2044""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2045""), :(Union{}), :AbstractITensorNetwork, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,6,true,true,true,true,true,true,true,true,data/ta-info/all/ITensorNetworks.jl
NDTensors/src/abstractarray/to_shape.jl,to_shape,mtsig,Tuple{Tuple{Vararg{Vector{<:Integer}}}},"Tuple{Tuple{Vararg{Vector{var""##ANON_TV#1589""} where var""##ANON_TV#1589"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1589""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ITensors.jl
src/broadcast.jl,Base.copyto!,mtsig,"Tuple{ITensor, Broadcasted{ITensorStyle, <:Any, typeof(+), <:Tuple{Vararg{Union{<:ITensor, <:Broadcasted}}}}}","Tuple{ITensor, (Broadcasted{ITensorStyle, var""##ANON_TV#2044"", typeof(+), var""##ANON_TV#2045""} where var""##ANON_TV#2044"" <: Any) where var""##ANON_TV#2045"" <: Tuple{Vararg{(Union{var""##ANON_TV#2046"", var""##ANON_TV#2047""} where var""##ANON_TV#2046"" <: ITensor) where var""##ANON_TV#2047"" <: Broadcasted}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2046""), :(Union{}), :ITensor, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2047""), :(Union{}), :Broadcasted, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2044""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2045""), :(Union{}), :(Tuple{Vararg{(Union{var""##ANON_TV#2046"", var""##ANON_TV#2047""} where var""##ANON_TV#2046"" <: ITensor) where var""##ANON_TV#2047"" <: Broadcasted}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/ITensors.jl
src/indexset.jl,replaceinds,mtsig,"Tuple{Indices, Vararg{Pair{<:Index, <:Index}}}","Tuple{Indices, Vararg{(Pair{var""##ANON_TV#2067"", var""##ANON_TV#2068""} where var""##ANON_TV#2067"" <: Index) where var""##ANON_TV#2068"" <: Index}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2067""), :(Union{}), :Index, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2068""), :(Union{}), :Index, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ITensors.jl
src/indexset.jl,replaceinds,mtsig,"Tuple{Indices, Tuple{Vararg{Pair{<:Index, <:Index}}}}","Tuple{Indices, Tuple{Vararg{(Pair{var""##ANON_TV#2072"", var""##ANON_TV#2073""} where var""##ANON_TV#2072"" <: Index) where var""##ANON_TV#2073"" <: Index}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2072""), :(Union{}), :Index, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2073""), :(Union{}), :Index, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ITensors.jl
src/itensor.jl,onehot,mtsig,"Tuple{Type{<:Number}, Vararg{Pair{<:Index}}}","Tuple{Type{var""##ANON_TV#2118""} where var""##ANON_TV#2118"" <: Number, Vararg{Pair{var""##ANON_TV#2119""} where var""##ANON_TV#2119"" <: Index}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2118""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2119""), :(Union{}), :Index, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ITensors.jl
src/itensor.jl,setelt,mtsig,"Tuple{Type{<:Number}, Vararg{Pair{<:Index}}}","Tuple{Type{var""##ANON_TV#2123""} where var""##ANON_TV#2123"" <: Number, Vararg{Pair{var""##ANON_TV#2124""} where var""##ANON_TV#2124"" <: Index}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2123""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2124""), :(Union{}), :Index, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ITensors.jl
src/itensor.jl,onehot,mtsig,Tuple{Vararg{Pair{<:Index}}},"Tuple{Vararg{Pair{var""##ANON_TV#2125""} where var""##ANON_TV#2125"" <: Index}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2125""), :(Union{}), :Index, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ITensors.jl
src/itensor.jl,setelt,mtsig,Tuple{Vararg{Pair{<:Index}}},"Tuple{Vararg{Pair{var""##ANON_TV#2128""} where var""##ANON_TV#2128"" <: Index}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2128""), :(Union{}), :Index, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ITensors.jl
src/itensor.jl,setindex!,mtsig,"Tuple{ITensor, Number, Pair{<:Index, String}, Vararg{Pair{<:Index, String}}}","Tuple{ITensor, Number, Pair{var""##ANON_TV#2133"", String} where var""##ANON_TV#2133"" <: Index, Vararg{Pair{var""##ANON_TV#2134"", String} where var""##ANON_TV#2134"" <: Index}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2133""), :(Union{}), :Index, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2134""), :(Union{}), :Index, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ITensors.jl
src/itensor.jl,setindex!,mtsig,"Tuple{ITensor, AbstractArray, Vararg{Pair{<:Index}}}","Tuple{ITensor, AbstractArray, Vararg{Pair{var""##ANON_TV#2135""} where var""##ANON_TV#2135"" <: Index}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2135""), :(Union{}), :Index, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ITensors.jl
src/mps/mps.jl,expect,mtsig,"Tuple{MPS, Matrix{<:Number}, Vararg{Matrix{<:Number}}, Vararg{Any}}","Tuple{MPS, Matrix{var""##ANON_TV#2246""} where var""##ANON_TV#2246"" <: Number, Vararg{Matrix{var""##ANON_TV#2247""} where var""##ANON_TV#2247"" <: Number}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2246""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2247""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ITensors.jl
test/ITensorLegacyMPS/base/utils/util.jl,inner_add,mtsig,"Tuple{Vararg{Tuple{<:Number, <:MPST}}} where MPST <: AbstractMPS","Tuple{Vararg{(Tuple{var""##ANON_TV#2321"", var""##ANON_TV#2322""} where var""##ANON_TV#2321"" <: Number) where var""##ANON_TV#2322"" <: MPST}} where MPST <: AbstractMPS","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2321""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2322""), :(Union{}), :MPST, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:MPST, :(Union{}), :AbstractMPS, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/ITensors.jl
src/mri-sense.jl,mri_smap_basis,mtsig,"Tuple{AbstractArray{Bool, D}, Int, NTuple{D, Int}, NTuple{D, UnitRange{<:Integer}}, CartesianIndices{D}, NTuple{D, <:Number}, Function, Function, Function, DataType} where D","Tuple{AbstractArray{Bool, D}, Int, NTuple{D, Int}, NTuple{D, UnitRange{var""##ANON_TV#1066""} where var""##ANON_TV#1066"" <: Integer}, CartesianIndices{D}, NTuple{D, var""##ANON_TV#1067""} where var""##ANON_TV#1067"" <: Number, Function, Function, Function, DataType} where D","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1066""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1067""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/ImagePhantoms.jl
src/declaremissings.jl,apply!,mtsig,"Tuple{AbstractArray{Union{T, Missing}}, DeclareMissings} where T","Tuple{AbstractArray{Union{T, Missing}}, DeclareMissings} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/deprecated.jl,_impute!,mtsig,"Tuple{AbstractArray{Union{T, Missing}}, Fill} where T","Tuple{AbstractArray{Union{T, Missing}}, Fill} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/deprecated.jl,impute,mtsig,"Tuple{AbstractMatrix{Union{T, Missing}}, DropObs, Any} where T","Tuple{AbstractMatrix{Union{T, Missing}}, DropObs, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/deprecated.jl,impute,mtsig,"Tuple{AbstractMatrix{Union{T, Missing}}, DropVars, Any} where T","Tuple{AbstractMatrix{Union{T, Missing}}, DropVars, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/deprecated.jl,impute!,mtsig,"Tuple{AbstractMatrix{Union{T, Missing}}, Union{DropObs, DropVars}} where T","Tuple{AbstractMatrix{Union{T, Missing}}, Union{DropObs, DropVars}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/filter.jl,apply,mtsig,"Tuple{AbstractArray{Union{T, Missing}}, Filter, Any} where T","Tuple{AbstractArray{Union{T, Missing}}, Filter, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/imputors.jl,impute!,mtsig,"(Tuple{A, Imputor, Any, Vararg{Any}} where A <: AbstractArray{Union{T, Missing}}) where T","(Tuple{A, Imputor, Any, Vararg{Any}} where A <: AbstractArray{Union{T, Missing}}) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:A, :(Union{}), :(AbstractArray{Union{T, Missing}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/imputors.jl,impute!,mtsig,"(Tuple{M, Imputor, Any, Vararg{Any}} where M <: AbstractMatrix{Union{T, Missing}}) where T","(Tuple{M, Imputor, Any, Vararg{Any}} where M <: AbstractMatrix{Union{T, Missing}}) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:M, :(Union{}), :(AbstractMatrix{Union{T, Missing}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/imputors/knn.jl,impute!,mtsig,"Tuple{AbstractMatrix{Union{T, Missing}}, KNN, Any} where T <: Real","Tuple{AbstractMatrix{Union{T, Missing}}, KNN, Any} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/imputors/knn.jl,impute,mtsig,"Tuple{AbstractMatrix{Union{T, Missing}}, KNN, Vararg{Any}} where T <: Real","Tuple{AbstractMatrix{Union{T, Missing}}, KNN, Vararg{Any}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/imputors/locf.jl,_impute!,mtsig,"Tuple{AbstractVector{Union{T, Missing}}, LOCF} where T","Tuple{AbstractVector{Union{T, Missing}}, LOCF} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/imputors/nocb.jl,_impute!,mtsig,"Tuple{AbstractVector{Union{T, Missing}}, NOCB} where T","Tuple{AbstractVector{Union{T, Missing}}, NOCB} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/imputors/replace.jl,_impute!,mtsig,"Tuple{AbstractArray{Union{T, Missing}}, Replace} where T","Tuple{AbstractArray{Union{T, Missing}}, Replace} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/imputors/srs.jl,_impute!,mtsig,"Tuple{AbstractArray{Union{T, Missing}}, SRS} where T","Tuple{AbstractArray{Union{T, Missing}}, SRS} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/imputors/substitute.jl,_impute!,mtsig,"Tuple{AbstractArray{Union{T, Missing}}, Substitute} where T","Tuple{AbstractArray{Union{T, Missing}}, Substitute} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/imputors/substitute.jl,_impute!,mtsig,"Tuple{AbstractArray{Union{T, Missing}}, WeightedSubstitute} where T","Tuple{AbstractArray{Union{T, Missing}}, WeightedSubstitute} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/imputors/svd.jl,impute!,mtsig,"Tuple{AbstractMatrix{Union{T, Missing}}, SVD, Any} where T <: Real","Tuple{AbstractMatrix{Union{T, Missing}}, SVD, Any} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/imputors/svd.jl,impute,mtsig,"Tuple{AbstractMatrix{Union{T, Missing}}, SVD, Vararg{Any}} where T <: Real","Tuple{AbstractMatrix{Union{T, Missing}}, SVD, Vararg{Any}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/validators/threshold.jl,_validate,mtsig,"Tuple{AbstractArray{Union{T, Missing}}, Threshold} where T","Tuple{AbstractArray{Union{T, Missing}}, Threshold} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/validators/threshold.jl,_validate,mtsig,"Tuple{AbstractArray{Union{T, Missing}}, WeightedThreshold} where T","Tuple{AbstractArray{Union{T, Missing}}, WeightedThreshold} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Impute.jl
src/dataset/constructor.jl,Dataset,mtsig,"Tuple{Vararg{Pair{Symbol, <:Any}}, Bool}","Tuple{Vararg{Pair{Symbol, var""##ANON_TV#850""} where var""##ANON_TV#850"" <: Any}, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#850""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InMemoryDatasets.jl
src/dataset/constructor.jl,Dataset,mtsig,"Tuple{Vararg{Pair{<:AbstractString, <:Any}}, Bool}","Tuple{Vararg{(Pair{var""##ANON_TV#851"", var""##ANON_TV#852""} where var""##ANON_TV#851"" <: AbstractString) where var""##ANON_TV#852"" <: Any}, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#851""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#852""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/InMemoryDatasets.jl
src/dataset/setindex.jl,insertcols!,mtsig,"Tuple{Dataset, ColumnIndex, Vararg{Pair{Symbol, <:Any}}, Bool, Any}","Tuple{Dataset, ColumnIndex, Vararg{Pair{Symbol, var""##ANON_TV#870""} where var""##ANON_TV#870"" <: Any}, Bool, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#870""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InMemoryDatasets.jl
src/dataset/setindex.jl,insertcols!,mtsig,"Tuple{Dataset, ColumnIndex, Vararg{Pair{<:AbstractString, <:Any}}, Bool}","Tuple{Dataset, ColumnIndex, Vararg{(Pair{var""##ANON_TV#871"", var""##ANON_TV#872""} where var""##ANON_TV#871"" <: AbstractString) where var""##ANON_TV#872"" <: Any}, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#871""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#872""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/InMemoryDatasets.jl
src/dataset/setindex.jl,insertcols!,mtsig,"Tuple{Dataset, Vararg{Pair{Symbol, <:Any}}, Bool}","Tuple{Dataset, Vararg{Pair{Symbol, var""##ANON_TV#873""} where var""##ANON_TV#873"" <: Any}, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#873""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InMemoryDatasets.jl
src/dataset/setindex.jl,insertcols!,mtsig,"Tuple{Dataset, Vararg{Pair{<:AbstractString, <:Any}}, Bool}","Tuple{Dataset, Vararg{(Pair{var""##ANON_TV#874"", var""##ANON_TV#875""} where var""##ANON_TV#874"" <: AbstractString) where var""##ANON_TV#875"" <: Any}, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#874""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#875""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,maximum,mtsig,"Tuple{Any, AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS, TimeType}","Tuple{Any, AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS, TimeType}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS, TimeType}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,maximum,mtsig,"Tuple{AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS, TimeType}","Tuple{AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS, TimeType}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS, TimeType}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,minimum,mtsig,"Tuple{Any, AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS, TimeType}","Tuple{Any, AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS, TimeType}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS, TimeType}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,minimum,mtsig,"Tuple{AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS, TimeType}","Tuple{AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS, TimeType}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS, TimeType}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,maximum,mtsig,"Tuple{Any, AbstractVector{Union{Missing, T}}, Any} where T <: AbstractString","Tuple{Any, AbstractVector{Union{Missing, T}}, Any} where T <: AbstractString","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,minimum,mtsig,"Tuple{Any, AbstractVector{Union{Missing, T}}, Any} where T <: AbstractString","Tuple{Any, AbstractVector{Union{Missing, T}}, Any} where T <: AbstractString","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,maximum,mtsig,"Tuple{AbstractVector{Union{Missing, T}}, Any} where T <: AbstractString","Tuple{AbstractVector{Union{Missing, T}}, Any} where T <: AbstractString","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,minimum,mtsig,"Tuple{AbstractVector{Union{Missing, T}}, Any} where T <: AbstractString","Tuple{AbstractVector{Union{Missing, T}}, Any} where T <: AbstractString","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,sum,mtsig,"Tuple{Any, AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","Tuple{Any, AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,sum,mtsig,"Tuple{AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","Tuple{AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,mean,mtsig,"Tuple{Any, AbstractArray{Union{T, Missing}, 1}} where T <: Union{INTEGERS, FLOATS}","Tuple{Any, AbstractArray{Union{T, Missing}, 1}} where T <: Union{INTEGERS, FLOATS}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,mean,mtsig,"Tuple{AbstractArray{Union{T, Missing}, 1}} where T <: Union{INTEGERS, FLOATS}","Tuple{AbstractArray{Union{T, Missing}, 1}} where T <: Union{INTEGERS, FLOATS}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,var,mtsig,"Tuple{Any, AbstractArray{Union{T, Missing}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","Tuple{Any, AbstractArray{Union{T, Missing}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,var,mtsig,"Tuple{AbstractArray{Union{T, Missing}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","Tuple{AbstractArray{Union{T, Missing}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,std,mtsig,"Tuple{Any, AbstractArray{Union{T, Missing}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","Tuple{Any, AbstractArray{Union{T, Missing}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,std,mtsig,"Tuple{AbstractArray{Union{T, Missing}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","Tuple{AbstractArray{Union{T, Missing}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,median,mtsig,"Tuple{AbstractArray{Union{T, Missing}, 1}} where T","Tuple{AbstractArray{Union{T, Missing}, 1}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,median!,mtsig,"Tuple{AbstractArray{Union{T, Missing}, 1}} where T","Tuple{AbstractArray{Union{T, Missing}, 1}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,extrema,mtsig,"Tuple{Any, AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS, TimeType}","Tuple{Any, AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS, TimeType}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS, TimeType}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,extrema,mtsig,"Tuple{AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS, TimeType}","Tuple{AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS, TimeType}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS, TimeType}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,findmax,mtsig,"Tuple{Any, AbstractArray{Union{Missing, T}, 1}} where T <: Union{INTEGERS, FLOATS, TimeType, AbstractString}","Tuple{Any, AbstractArray{Union{Missing, T}, 1}} where T <: Union{INTEGERS, FLOATS, TimeType, AbstractString}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS, TimeType, AbstractString}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,findmax,mtsig,"Tuple{AbstractArray{Union{Missing, T}, 1}} where T <: Union{INTEGERS, FLOATS, TimeType, AbstractString}","Tuple{AbstractArray{Union{Missing, T}, 1}} where T <: Union{INTEGERS, FLOATS, TimeType, AbstractString}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS, TimeType, AbstractString}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,findmin,mtsig,"Tuple{Any, AbstractArray{Union{Missing, T}, 1}} where T <: Union{INTEGERS, FLOATS, TimeType, AbstractString}","Tuple{Any, AbstractArray{Union{Missing, T}, 1}} where T <: Union{INTEGERS, FLOATS, TimeType, AbstractString}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS, TimeType, AbstractString}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,findmin,mtsig,"Tuple{AbstractArray{Union{Missing, T}, 1}} where T <: Union{INTEGERS, FLOATS, TimeType, AbstractString}","Tuple{AbstractArray{Union{Missing, T}, 1}} where T <: Union{INTEGERS, FLOATS, TimeType, AbstractString}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS, TimeType, AbstractString}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,cumsum,mtsig,"Tuple{AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","Tuple{AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,cumsum!,mtsig,"Tuple{AbstractVector, AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","Tuple{AbstractVector, AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,cumprod,mtsig,"Tuple{AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","Tuple{AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
src/stat/stat.jl,cumprod!,mtsig,"Tuple{AbstractVector, AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","Tuple{AbstractVector, AbstractArray{Union{Missing, T}, 1}, Any} where T <: Union{INTEGERS, FLOATS}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{INTEGERS, FLOATS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/InMemoryDatasets.jl
test/testDeadReckoningTether.jl,DFG.getDimension,mtsig,"Tuple{Type{MutableLinearRelative{N, <:SamplableBelief}}} where N","Tuple{Type{MutableLinearRelative{N, var""##ANON_TV#2252""} where var""##ANON_TV#2252"" <: SamplableBelief}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2252""), :(Union{}), :SamplableBelief, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/IncrementalInference.jl
src/convert_inference_data.jl,convert_to_inference_data,mtsig,"Tuple{NamedTuple{<:Any, <:Tuple{Vararg{AbstractArray{<:Real}}}}, Any, Vararg{Any}}","Tuple{(NamedTuple{var""##ANON_TV#1174"", var""##ANON_TV#1175""} where var""##ANON_TV#1174"" <: Any) where var""##ANON_TV#1175"" <: Tuple{Vararg{AbstractArray{var""##ANON_TV#1176""} where var""##ANON_TV#1176"" <: Real}}, Any, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1176""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1174""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1175""), :(Union{}), :(Tuple{Vararg{AbstractArray{var""##ANON_TV#1176""} where var""##ANON_TV#1176"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/InferenceObjects.jl
src/infarrays.jl,BroadcastStyle,mtsig,"(Tuple{Type{($typ){T, N, NTuple{N, <:OneToInf}}}} where N) where T","(Tuple{Type{($typ){T, N, NTuple{N, var""##ANON_TV#2154""} where var""##ANON_TV#2154"" <: OneToInf}}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2154""), :(Union{}), :OneToInf, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/InfiniteArrays.jl
src/infarrays.jl,BroadcastStyle,mtsig,"Tuple{Type{($typ){T, 2, <:Tuple{<:Any, <:OneToInf}}}} where T","Tuple{Type{($typ){T, 2, var""##ANON_TV#2155""} where var""##ANON_TV#2155"" <: ((Tuple{var""##ANON_TV#2156"", var""##ANON_TV#2157""} where var""##ANON_TV#2156"" <: Any) where var""##ANON_TV#2157"" <: OneToInf)}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2156""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2157""), :(Union{}), :OneToInf, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2155""), :(Union{}), :((Tuple{var""##ANON_TV#2156"", var""##ANON_TV#2157""} where var""##ANON_TV#2156"" <: Any) where var""##ANON_TV#2157"" <: OneToInf), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/InfiniteArrays.jl
src/infarrays.jl,BroadcastStyle,mtsig,"Tuple{Type{($typ){T, 2, <:Tuple{<:OneToInf, <:Any}}}} where T","Tuple{Type{($typ){T, 2, var""##ANON_TV#2158""} where var""##ANON_TV#2158"" <: ((Tuple{var""##ANON_TV#2159"", var""##ANON_TV#2160""} where var""##ANON_TV#2159"" <: OneToInf) where var""##ANON_TV#2160"" <: Any)}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2159""), :(Union{}), :OneToInf, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2160""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2158""), :(Union{}), :((Tuple{var""##ANON_TV#2159"", var""##ANON_TV#2160""} where var""##ANON_TV#2159"" <: OneToInf) where var""##ANON_TV#2160"" <: Any), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/InfiniteArrays.jl
src/infrange.jl,BroadcastStyle,mtsig,"Tuple{Type{<:SubArray{<:Any, 1, <:Any, Tuple{<:InfIndexRanges}}}}","Tuple{Type{var""##ANON_TV#2293""} where var""##ANON_TV#2293"" <: ((SubArray{var""##ANON_TV#2294"", 1, var""##ANON_TV#2295"", Tuple{var""##ANON_TV#2296""} where var""##ANON_TV#2296"" <: InfIndexRanges} where var""##ANON_TV#2294"" <: Any) where var""##ANON_TV#2295"" <: Any)}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2296""), :(Union{}), :InfIndexRanges, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2294""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2295""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2293""), :(Union{}), :((SubArray{var""##ANON_TV#2294"", 1, var""##ANON_TV#2295"", Tuple{var""##ANON_TV#2296""} where var""##ANON_TV#2296"" <: InfIndexRanges} where var""##ANON_TV#2294"" <: Any) where var""##ANON_TV#2295"" <: Any), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/InfiniteArrays.jl
src/banded/infbanded.jl,BandedMatrix,mtsig,"Tuple{Tuple{Vararg{Pair{<:Integer, <:AbstractVector}}}, NTuple{2, PosInfinity}, NTuple{2, Integer}} where T","Tuple{Tuple{Vararg{(Pair{var""##ANON_TV#962"", var""##ANON_TV#963""} where var""##ANON_TV#962"" <: Integer) where var""##ANON_TV#963"" <: AbstractVector}}, NTuple{2, PosInfinity}, NTuple{2, Integer}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#962""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#963""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,true,true,true,true,true,true,data/ta-info/all/InfiniteLinearAlgebra.jl
src/banded/infbanded.jl,BandedMatrix,mtsig,"Tuple{Tuple{Vararg{Pair{<:Integer, <:Fill{<:Any, 1, Tuple{OneToInf{Int}}}}}}, NTuple{2, PosInfinity}, NTuple{2, Integer}} where T","Tuple{Tuple{Vararg{(Pair{var""##ANON_TV#964"", var""##ANON_TV#965""} where var""##ANON_TV#964"" <: Integer) where var""##ANON_TV#965"" <: (Fill{var""##ANON_TV#966"", 1, Tuple{OneToInf{Int}}} where var""##ANON_TV#966"" <: Any)}}, NTuple{2, PosInfinity}, NTuple{2, Integer}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#966""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#964""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#965""), :(Union{}), :(Fill{var""##ANON_TV#966"", 1, Tuple{OneToInf{Int}}} where var""##ANON_TV#966"" <: Any), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,true,true,true,true,true,true,data/ta-info/all/InfiniteLinearAlgebra.jl
src/banded/infbanded.jl,BandedMatrix,mtsig,"Tuple{Tuple{Vararg{Pair{<:Integer, <:Vcat{<:Any, 1, <:Tuple{<:AbstractVector, Fill{<:Any, 1, Tuple{OneToInf{Int}}}}}}}}, NTuple{2, PosInfinity}, NTuple{2, Integer}} where T","Tuple{Tuple{Vararg{(Pair{var""##ANON_TV#967"", var""##ANON_TV#968""} where var""##ANON_TV#967"" <: Integer) where var""##ANON_TV#968"" <: ((Vcat{var""##ANON_TV#969"", 1, var""##ANON_TV#970""} where var""##ANON_TV#969"" <: Any) where var""##ANON_TV#970"" <: (Tuple{var""##ANON_TV#971"", Fill{var""##ANON_TV#972"", 1, Tuple{OneToInf{Int}}} where var""##ANON_TV#972"" <: Any} where var""##ANON_TV#971"" <: AbstractVector))}}, NTuple{2, PosInfinity}, NTuple{2, Integer}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#972""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#971""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#969""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#970""), :(Union{}), :(Tuple{var""##ANON_TV#971"", Fill{var""##ANON_TV#972"", 1, Tuple{OneToInf{Int}}} where var""##ANON_TV#972"" <: Any} where var""##ANON_TV#971"" <: AbstractVector), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#967""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#968""), :(Union{}), :((Vcat{var""##ANON_TV#969"", 1, var""##ANON_TV#970""} where var""##ANON_TV#969"" <: Any) where var""##ANON_TV#970"" <: (Tuple{var""##ANON_TV#971"", Fill{var""##ANON_TV#972"", 1, Tuple{OneToInf{Int}}} where var""##ANON_TV#972"" <: Any} where var""##ANON_TV#971"" <: AbstractVector)), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,7,true,false,true,true,true,true,true,true,data/ta-info/all/InfiniteLinearAlgebra.jl
src/blockbanded/blockbanded.jl,BroadcastStyle,mtsig,"(Tuple{Type{<:BlockArray{T, N, <:AbstractArray{<:AbstractArray{T, N}, N}, <:NTuple{N, BlockedUnitRange{<:InfRanges}}}}} where N) where T","(Tuple{Type{var""##ANON_TV#1051""} where var""##ANON_TV#1051"" <: ((BlockArray{T, N, var""##ANON_TV#1052"", var""##ANON_TV#1054""} where var""##ANON_TV#1052"" <: (AbstractArray{var""##ANON_TV#1053"", N} where var""##ANON_TV#1053"" <: AbstractArray{T, N})) where var""##ANON_TV#1054"" <: NTuple{N, BlockedUnitRange{var""##ANON_TV#1055""} where var""##ANON_TV#1055"" <: InfRanges})} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1055""), :(Union{}), :InfRanges, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1053""), :(Union{}), :(AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1052""), :(Union{}), :(AbstractArray{var""##ANON_TV#1053"", N} where var""##ANON_TV#1053"" <: AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1054""), :(Union{}), :(NTuple{N, BlockedUnitRange{var""##ANON_TV#1055""} where var""##ANON_TV#1055"" <: InfRanges}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1051""), :(Union{}), :((BlockArray{T, N, var""##ANON_TV#1052"", var""##ANON_TV#1054""} where var""##ANON_TV#1052"" <: (AbstractArray{var""##ANON_TV#1053"", N} where var""##ANON_TV#1053"" <: AbstractArray{T, N})) where var""##ANON_TV#1054"" <: NTuple{N, BlockedUnitRange{var""##ANON_TV#1055""} where var""##ANON_TV#1055"" <: InfRanges}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,7,true,false,false,true,true,true,true,true,data/ta-info/all/InfiniteLinearAlgebra.jl
src/blockbanded/blockbanded.jl,BroadcastStyle,mtsig,"(Tuple{Type{<:PseudoBlockArray{T, N, <:AbstractArray{T, N}, <:NTuple{N, BlockedUnitRange{<:InfRanges}}}}} where N) where T","(Tuple{Type{var""##ANON_TV#1056""} where var""##ANON_TV#1056"" <: ((PseudoBlockArray{T, N, var""##ANON_TV#1057"", var""##ANON_TV#1058""} where var""##ANON_TV#1057"" <: AbstractArray{T, N}) where var""##ANON_TV#1058"" <: NTuple{N, BlockedUnitRange{var""##ANON_TV#1059""} where var""##ANON_TV#1059"" <: InfRanges})} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1059""), :(Union{}), :InfRanges, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1057""), :(Union{}), :(AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1058""), :(Union{}), :(NTuple{N, BlockedUnitRange{var""##ANON_TV#1059""} where var""##ANON_TV#1059"" <: InfRanges}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1056""), :(Union{}), :((PseudoBlockArray{T, N, var""##ANON_TV#1057"", var""##ANON_TV#1058""} where var""##ANON_TV#1057"" <: AbstractArray{T, N}) where var""##ANON_TV#1058"" <: NTuple{N, BlockedUnitRange{var""##ANON_TV#1059""} where var""##ANON_TV#1059"" <: InfRanges}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,6,true,false,false,true,true,true,true,true,data/ta-info/all/InfiniteLinearAlgebra.jl
src/blockbanded/blockbanded.jl,BroadcastStyle,mtsig,"(Tuple{Type{<:BlockArray{T, N, <:AbstractArray{<:AbstractArray{T, N}, N}, <:NTuple{N, BlockedUnitRange{<:RangeCumsum{Int, <:InfRanges}}}}}} where N) where T","(Tuple{Type{var""##ANON_TV#1060""} where var""##ANON_TV#1060"" <: ((BlockArray{T, N, var""##ANON_TV#1061"", var""##ANON_TV#1063""} where var""##ANON_TV#1061"" <: (AbstractArray{var""##ANON_TV#1062"", N} where var""##ANON_TV#1062"" <: AbstractArray{T, N})) where var""##ANON_TV#1063"" <: NTuple{N, BlockedUnitRange{var""##ANON_TV#1064""} where var""##ANON_TV#1064"" <: (RangeCumsum{Int, var""##ANON_TV#1065""} where var""##ANON_TV#1065"" <: InfRanges)})} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1065""), :(Union{}), :InfRanges, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1064""), :(Union{}), :(RangeCumsum{Int, var""##ANON_TV#1065""} where var""##ANON_TV#1065"" <: InfRanges), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1062""), :(Union{}), :(AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1061""), :(Union{}), :(AbstractArray{var""##ANON_TV#1062"", N} where var""##ANON_TV#1062"" <: AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1063""), :(Union{}), :(NTuple{N, BlockedUnitRange{var""##ANON_TV#1064""} where var""##ANON_TV#1064"" <: (RangeCumsum{Int, var""##ANON_TV#1065""} where var""##ANON_TV#1065"" <: InfRanges)}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1060""), :(Union{}), :((BlockArray{T, N, var""##ANON_TV#1061"", var""##ANON_TV#1063""} where var""##ANON_TV#1061"" <: (AbstractArray{var""##ANON_TV#1062"", N} where var""##ANON_TV#1062"" <: AbstractArray{T, N})) where var""##ANON_TV#1063"" <: NTuple{N, BlockedUnitRange{var""##ANON_TV#1064""} where var""##ANON_TV#1064"" <: (RangeCumsum{Int, var""##ANON_TV#1065""} where var""##ANON_TV#1065"" <: InfRanges)}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,8,true,false,false,true,true,true,true,true,data/ta-info/all/InfiniteLinearAlgebra.jl
src/blockbanded/blockbanded.jl,BroadcastStyle,mtsig,"(Tuple{Type{<:PseudoBlockArray{T, N, <:AbstractArray{T, N}, <:NTuple{N, BlockedUnitRange{<:RangeCumsum{Int, <:InfRanges}}}}}} where N) where T","(Tuple{Type{var""##ANON_TV#1066""} where var""##ANON_TV#1066"" <: ((PseudoBlockArray{T, N, var""##ANON_TV#1067"", var""##ANON_TV#1068""} where var""##ANON_TV#1067"" <: AbstractArray{T, N}) where var""##ANON_TV#1068"" <: NTuple{N, BlockedUnitRange{var""##ANON_TV#1069""} where var""##ANON_TV#1069"" <: (RangeCumsum{Int, var""##ANON_TV#1070""} where var""##ANON_TV#1070"" <: InfRanges)})} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1070""), :(Union{}), :InfRanges, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1069""), :(Union{}), :(RangeCumsum{Int, var""##ANON_TV#1070""} where var""##ANON_TV#1070"" <: InfRanges), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1067""), :(Union{}), :(AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1068""), :(Union{}), :(NTuple{N, BlockedUnitRange{var""##ANON_TV#1069""} where var""##ANON_TV#1069"" <: (RangeCumsum{Int, var""##ANON_TV#1070""} where var""##ANON_TV#1070"" <: InfRanges)}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1066""), :(Union{}), :((PseudoBlockArray{T, N, var""##ANON_TV#1067"", var""##ANON_TV#1068""} where var""##ANON_TV#1067"" <: AbstractArray{T, N}) where var""##ANON_TV#1068"" <: NTuple{N, BlockedUnitRange{var""##ANON_TV#1069""} where var""##ANON_TV#1069"" <: (RangeCumsum{Int, var""##ANON_TV#1070""} where var""##ANON_TV#1070"" <: InfRanges)}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,7,true,false,false,true,true,true,true,true,data/ta-info/all/InfiniteLinearAlgebra.jl
src/datatypes.jl,<NOT A FUNSIG>,tyassorann,"MOIUC.CleverDict{IndependentParameterIndex, ScalarParameterData{<:IndependentParameter}}","MOIUC.CleverDict{IndependentParameterIndex, ScalarParameterData{var""##ANON_TV#2083""} where var""##ANON_TV#2083"" <: IndependentParameter}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2083""), :(Union{}), :IndependentParameter, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InfiniteOpt.jl
src/datatypes.jl,_expand_parameter_tuple,mtsig,"Tuple{NTuple{N, Pair{<:Union{GeneralVariableRef, AbstractArray{<:GeneralVariableRef}}, IntervalDomain}}} where N","Tuple{NTuple{N, Pair{var""##ANON_TV#2099"", IntervalDomain} where var""##ANON_TV#2099"" <: Union{GeneralVariableRef, AbstractArray{var""##ANON_TV#2100""} where var""##ANON_TV#2100"" <: GeneralVariableRef}}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2100""), :(Union{}), :GeneralVariableRef, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2099""), :(Union{}), :(Union{GeneralVariableRef, AbstractArray{var""##ANON_TV#2100""} where var""##ANON_TV#2100"" <: GeneralVariableRef}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/InfiniteOpt.jl
src/datatypes.jl,_expand_parameter_tuple,mtsig,"Tuple{NTuple{N, Pair{<:Any, <:Union{Real, Vector{<:Real}}}}} where N","Tuple{NTuple{N, (Pair{var""##ANON_TV#2102"", var""##ANON_TV#2103""} where var""##ANON_TV#2102"" <: Any) where var""##ANON_TV#2103"" <: Union{Real, Vector{var""##ANON_TV#2104""} where var""##ANON_TV#2104"" <: Real}}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2104""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2102""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2103""), :(Union{}), :(Union{Real, Vector{var""##ANON_TV#2104""} where var""##ANON_TV#2104"" <: Real}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/InfiniteOpt.jl
src/expressions.jl,_data_dictionary,retty,"MOIUC.CleverDict{ParameterFunctionIndex, ParameterFunctionData{<:ParameterFunction}}","MOIUC.CleverDict{ParameterFunctionIndex, ParameterFunctionData{var""##ANON_TV#2106""} where var""##ANON_TV#2106"" <: ParameterFunction}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2106""), :(Union{}), :ParameterFunction, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InfiniteOpt.jl
src/infinite_variables.jl,_data_dictionary,retty,"MOIUC.CleverDict{InfiniteVariableIndex, VariableData{<:InfiniteVariable}}","MOIUC.CleverDict{InfiniteVariableIndex, VariableData{var""##ANON_TV#2151""} where var""##ANON_TV#2151"" <: InfiniteVariable}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2151""), :(Union{}), :InfiniteVariable, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InfiniteOpt.jl
src/infinite_variables.jl,_data_dictionary,retty,"MOIUC.CleverDict{InfiniteVariableIndex, VariableData{<:InfiniteVariable}}","MOIUC.CleverDict{InfiniteVariableIndex, VariableData{var""##ANON_TV#2152""} where var""##ANON_TV#2152"" <: InfiniteVariable}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2152""), :(Union{}), :InfiniteVariable, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InfiniteOpt.jl
src/measures.jl,_data_dictionary,retty,"MOIUC.CleverDict{MeasureIndex, MeasureData{<:Measure}}","MOIUC.CleverDict{MeasureIndex, MeasureData{var""##ANON_TV#2166""} where var""##ANON_TV#2166"" <: Measure}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2166""), :(Union{}), :Measure, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InfiniteOpt.jl
src/measures.jl,_data_dictionary,retty,"MOIUC.CleverDict{MeasureIndex, MeasureData{<:Measure}}","MOIUC.CleverDict{MeasureIndex, MeasureData{var""##ANON_TV#2167""} where var""##ANON_TV#2167"" <: Measure}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2167""), :(Union{}), :Measure, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InfiniteOpt.jl
test/extensions/optimizer_model.jl,<NOT A FUNSIG>,tyassorann,"Dict{GeneralVariableRef, Vector{<:Tuple}}","Dict{GeneralVariableRef, Vector{var""##ANON_TV#2277""} where var""##ANON_TV#2277"" <: Tuple}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2277""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InfiniteOpt.jl
test/extensions/optimizer_model.jl,<NOT A FUNSIG>,tyassorann,"Dict{GeneralVariableRef, Vector{<:Tuple}}","Dict{GeneralVariableRef, Vector{var""##ANON_TV#2278""} where var""##ANON_TV#2278"" <: Tuple}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2278""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InfiniteOpt.jl
test/extensions/optimizer_model.jl,<NOT A FUNSIG>,tyassorann,"Dict{InfOptConstraintRef, Vector{<:Tuple}}","Dict{InfOptConstraintRef, Vector{var""##ANON_TV#2279""} where var""##ANON_TV#2279"" <: Tuple}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2279""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InfiniteOpt.jl
src/ConfidenceRegions.jl,VarCholeskyN,mtsig,Tuple{AbstractVector{AbstractVector{<:Number}}},"Tuple{AbstractVector{AbstractVector{var""##ANON_TV#1001""} where var""##ANON_TV#1001"" <: Number}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1001""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InformationGeometry.jl
src/ConfidenceRegions.jl,VarSqrtN,mtsig,Tuple{AbstractVector{AbstractVector{<:Number}}},"Tuple{AbstractVector{AbstractVector{var""##ANON_TV#1003""} where var""##ANON_TV#1003"" <: Number}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1003""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InformationGeometry.jl
src/inpaint.jl,inpaint,mtsig,"Tuple{AbstractArray{Union{Missing, T}}, Any, Any} where T <: AbstractFloat","Tuple{AbstractArray{Union{Missing, T}}, Any, Any} where T <: AbstractFloat","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Inpaintings.jl
src/InterpolationKernels.jl,floating_point_type,mtsig,Tuple{Vararg{Type{<:Real}}},"Tuple{Vararg{Type{var""##ANON_TV#1206""} where var""##ANON_TV#1206"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1206""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InterpolationKernels.jl
src/solvers.jl,ISolver,mtsig,"Tuple{Vararg{Pair{Symbol, <:Any}}}","Tuple{Vararg{Pair{Symbol, var""##ANON_TV#1123""} where var""##ANON_TV#1123"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1123""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/InvariantSetApproximation.jl
src/ions.jl,<NOT A FUNSIG>,tyassorann,"OrderedDict{String, NamedTuple{(:n, :l, :j, :f, :E), T} where T <: Tuple}","OrderedDict{String, NamedTuple{(:n, :l, :j, :f, :E), T} where T <: Tuple}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/IonSim.jl
src/tables.jl,jdbcconvert,mtsig,"Tuple{Type{Union{T, Missing}}, Any, Any} where T","Tuple{Type{Union{T, Missing}}, Any, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JDBC.jl
src/type_compress.jl,type_compress,mtsig,"Tuple{Vector{Union{Missing, T}}} where T <: Union{UInt128, UInt64, UInt32, UInt16}","Tuple{Vector{Union{Missing, T}}} where T <: Union{UInt128, UInt64, UInt32, UInt16}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{UInt128, UInt64, UInt32, UInt16}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JDF.jl
src/type_compress.jl,type_compress,mtsig,"Tuple{Vector{Union{Missing, T}}} where T <: Union{Int128, Int64, Int32, Int16}","Tuple{Vector{Union{Missing, T}}} where T <: Union{Int128, Int64, Int32, Int16}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{Int128, Int64, Int32, Int16}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JDF.jl
src/type-writer-loader/Missing.jl,compress_then_write,mtsig,"Tuple{Vector{Union{T, Missing}}, Any} where T","Tuple{Vector{Union{T, Missing}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JDF.jl
src/type-writer-loader/Missing.jl,column_loader!,mtsig,"Tuple{Any, Type{Union{Missing, T}}, Any, Any} where T","Tuple{Any, Type{Union{Missing, T}}, Any, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JDF.jl
src/type-writer-loader/Nothing.jl,compress_then_write,mtsig,"Tuple{Vector{Union{T, Nothing}}, Any} where T","Tuple{Vector{Union{T, Nothing}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JDF.jl
src/type-writer-loader/Nothing.jl,column_loader!,mtsig,"Tuple{Any, Type{Union{Nothing, T}}, Any, Any} where T","Tuple{Any, Type{Union{Nothing, T}}, Any, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JDF.jl
src/joTypes/joPAsetup.jl,<NOT A FUNSIG>,tyassorann,Array{Tuple{Vararg{UnitRange{<:Integer}}}},"Array{Tuple{Vararg{UnitRange{var""##ANON_TV#1130""} where var""##ANON_TV#1130"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1130""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/JOLI.jl
src/joTypes/joPAsetup.jl,<NOT A FUNSIG>,tyassorann,Vector{Vector{<:Integer}},"Vector{Vector{var""##ANON_TV#1131""} where var""##ANON_TV#1131"" <: Integer}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1131""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/JOLI.jl
src/read.jl,nonNothingT,mtsig,"Tuple{Type{Union{Nothing, T}}} where T","Tuple{Type{Union{Nothing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JSON2.jl
src/structs.jl,read,mtsig,"Tuple{NumberType, Any, Any, Any, Any, Type{Union{Bool, T}}, Vararg{Any}} where T <: Real","Tuple{NumberType, Any, Any, Any, Any, Type{Union{Bool, T}}, Vararg{Any}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JSON3.jl
src/JSONSchemaGenerator.jl,_is_nothing_union,mtsig,"Tuple{Type{Union{Nothing, T}}} where T","Tuple{Type{Union{Nothing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JSONSchemaGenerator.jl
src/JSONSchemaGenerator.jl,_get_optional_type,mtsig,"Tuple{Type{Union{Nothing, T}}} where T","Tuple{Type{Union{Nothing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JSONSchemaGenerator.jl
src/JSONTables.jl,misselT,mtsig,"Tuple{Type{Union{Nothing, T}}} where T","Tuple{Type{Union{Nothing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JSONTables.jl
src/objects/controllers.jl,<NOT A FUNSIG>,tyassorann,Vector{Vector{<:Real}},"Vector{Vector{var""##ANON_TV#1963""} where var""##ANON_TV#1963"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1963""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/JSXGraph.jl
JProxies/src/proxy.jl,convert_arg,mtsig,"(Tuple{Type{<:JProxy{<:Union{Array{A, N}, java_lang_Object}, false}}, JProxy{Array{<:A, N}, false}} where N) where A","(Tuple{Type{var""##ANON_TV#2329""} where var""##ANON_TV#2329"" <: (JProxy{var""##ANON_TV#2330"", false} where var""##ANON_TV#2330"" <: Union{Array{A, N}, java_lang_Object}), JProxy{Array{var""##ANON_TV#2331"", N} where var""##ANON_TV#2331"" <: A, false}} where N) where A","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2330""), :(Union{}), :(Union{Array{A, N}, java_lang_Object}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2329""), :(Union{}), :(JProxy{var""##ANON_TV#2330"", false} where var""##ANON_TV#2330"" <: Union{Array{A, N}, java_lang_Object}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2331""), :(Union{}), :A, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,false,true,true,data/ta-info/all/JavaCall.jl
JProxies/src/proxy.jl,convert_arg,mtsig,"Tuple{Type{JProxy{<:Union{Array{String, 1}, java_lang_Object}, false}}, Array{String, 1}}","Tuple{Type{JProxy{var""##ANON_TV#2334"", false} where var""##ANON_TV#2334"" <: Union{Array{String, 1}, java_lang_Object}}, Array{String, 1}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2334""), :(Union{}), :(Union{Array{String, 1}, java_lang_Object}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/JavaCall.jl
JProxies/src/proxy.jl,Base.fieldnames,mtsig,"Tuple{Type{JProxy{<:Array, false}}}","Tuple{Type{JProxy{var""##ANON_TV#2349"", false} where var""##ANON_TV#2349"" <: Array}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2349""), :(Union{}), :Array, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/JavaCall.jl
JProxies/src/proxy.jl,Base.fieldnames,mtsig,"(Tuple{Type{JProxy{<:Array{T}, true}}} where STATIC) where T","(Tuple{Type{JProxy{var""##ANON_TV#2350"", true} where var""##ANON_TV#2350"" <: Array{T}}} where STATIC) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2350""), :(Union{}), :(Array{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:STATIC, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/JavaCall.jl
src/core/address_maps/dynamic.jl,<NOT A FUNSIG>,tyassorann,"Dict{Any, AddressMap{<:K}}","Dict{Any, AddressMap{var""##ANON_TV#1333""} where var""##ANON_TV#1333"" <: K}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1333""), :(Union{}), :K, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Jaynes.jl
src/parser/ocblocks.jl,merge_blocks,mtsig,Tuple{Vararg{Vector{<:AbstractBlock}}},"Tuple{Vararg{Vector{var""##ANON_TV#1524""} where var""##ANON_TV#1524"" <: AbstractBlock}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1524""), :(Union{}), :AbstractBlock, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/JuDoc.jl
src/Containers/DenseAxisArray.jl,Base.getindex,mtsig,"(Tuple{_AxisLookup{Dict{K, Int}}, T} where K >: T) where T <: AbstractVector","(Tuple{_AxisLookup{Dict{K, Int}}, T} where K >: T) where T <: AbstractVector","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:K, :T, :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCLoBnd), list(JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,true,false,true,data/ta-info/all/JuMP.jl
src/ml.jl,schema,mtsig,"Tuple{Vector{Union{Missing, S}}, Type} where S","Tuple{Vector{Union{Missing, S}}, Type} where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JuliaDB.jl
src/ml.jl,schema,mtsig,"Tuple{Vector{Union{T, Missing}}} where T","Tuple{Vector{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/JuliaDB.jl
test/files/ChainRules.jl/src/rulesets/Base/array.jl,rrule,mtsig,"Tuple{typeof(Base.vect), Vararg{Union{Number, AbstractArray{<:Number}}, N}} where N","Tuple{typeof(Base.vect), Vararg{Union{Number, AbstractArray{var""##ANON_TV#2293""} where var""##ANON_TV#2293"" <: Number}, N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2293""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/JuliaFormatter.jl
test/files/ChainRules.jl/src/rulesets/LinearAlgebra/structured.jl,rrule,mtsig,"Tuple{typeof(diagm), Integer, Integer, Vararg{Pair{<:Integer, <:AbstractVector}}}","Tuple{typeof(diagm), Integer, Integer, Vararg{(Pair{var""##ANON_TV#2375"", var""##ANON_TV#2376""} where var""##ANON_TV#2375"" <: Integer) where var""##ANON_TV#2376"" <: AbstractVector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2375""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2376""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/JuliaFormatter.jl
test/files/ChainRules.jl/src/rulesets/LinearAlgebra/structured.jl,rrule,mtsig,"Tuple{typeof(diagm), Vararg{Pair{<:Integer, <:AbstractVector}}}","Tuple{typeof(diagm), Vararg{(Pair{var""##ANON_TV#2377"", var""##ANON_TV#2378""} where var""##ANON_TV#2377"" <: Integer) where var""##ANON_TV#2378"" <: AbstractVector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2377""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2378""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/JuliaFormatter.jl
test/toplevel_script.jl,f2,mtsig,Tuple{T} where Unsigned <: T <: Real,Tuple{T} where Unsigned <: T <: Real,"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :Unsigned, :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/JuliaInterpreter.jl
src/MOI_wrapper/results.jl,MOI.get,mtsig,"Tuple{Optimizer, MOI.ConstraintPrimal, Vector{MOI.ConstraintIndex{MOI.VariableIndex, <:Union{MOI.EqualTo{Float64}, MOI.GreaterThan{Float64}, MOI.LessThan{Float64}}}}}","Tuple{Optimizer, MOI.ConstraintPrimal, Vector{MOI.ConstraintIndex{MOI.VariableIndex, var""##ANON_TV#2365""} where var""##ANON_TV#2365"" <: Union{MOI.EqualTo{Float64}, MOI.GreaterThan{Float64}, MOI.LessThan{Float64}}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2365""), :(Union{}), :(Union{MOI.EqualTo{Float64}, MOI.GreaterThan{Float64}, MOI.LessThan{Float64}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/KNITRO.jl
src/message.jl,kerbal,mtsig,"(Tuple{KRPCConnection, T} where T <: Tuple{Vararg{RT where {S, P, R, RT <: Request{S, P, R}}, K}}) where K","(Tuple{KRPCConnection, T} where T <: Tuple{Vararg{(((RT where S) where P) where R) where RT <: Request{S, P, R}, K}}) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:P, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:RT, :(Union{}), :(Request{S, P, R}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{(((RT where S) where P) where R) where RT <: Request{S, P, R}, K}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd)], nil(JuliaSub.TypeConstructor))]",false,false,6,true,false,true,true,true,true,true,true,data/ta-info/all/KRPC.jl
src/streams.jl,add_stream,mtsig,"(Tuple{KRPCConnection, T} where T <: Tuple{Vararg{RT where {S, P, R, RT <: Request{S, P, R}}, K}}) where K","(Tuple{KRPCConnection, T} where T <: Tuple{Vararg{(((RT where S) where P) where R) where RT <: Request{S, P, R}, K}}) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:P, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:RT, :(Union{}), :(Request{S, P, R}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{(((RT where S) where P) where R) where RT <: Request{S, P, R}, K}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd)], nil(JuliaSub.TypeConstructor))]",false,false,6,true,false,true,true,true,true,true,true,data/ta-info/all/KRPC.jl
src/streams.jl,add_stream,mtsig,"(Tuple{Function, KRPCConnection, T} where T <: Tuple{Vararg{RT where {S, P, R, RT <: Request{S, P, R}}, K}}) where K","(Tuple{Function, KRPCConnection, T} where T <: Tuple{Vararg{(((RT where S) where P) where R) where RT <: Request{S, P, R}, K}}) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:P, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:RT, :(Union{}), :(Request{S, P, R}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Tuple{Vararg{(((RT where S) where P) where R) where RT <: Request{S, P, R}, K}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd)], nil(JuliaSub.TypeConstructor))]",false,false,6,true,false,true,true,true,true,true,true,data/ta-info/all/KRPC.jl
src/types.jl,getJuliaValue,mtsig,"Tuple{Any, Array{UInt8, 1}, Type{Union{T, Nothing}}} where T <: kRPCTypes.Class","Tuple{Any, Array{UInt8, 1}, Type{Union{T, Nothing}}} where T <: kRPCTypes.Class","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(kRPCTypes.Class), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/KRPC.jl
src/KernelDensityEstimatePlotting.jl,plotKDE,mtsig,"Tuple{Array{BallTreeDensity, 1}, NothingUnion{<:AbstractVector}, Int, Any, Any, NothingUnion{Array{Float64, 2}}, NothingUnion{VectorRange{Int}}, AbstractString, NothingUnion{<:AbstractString}, NothingUnion{Vector{<:AbstractString}}, NothingUnion{Vector{<:AbstractString}}, NothingUnion{Int}, Any, Bool, Any, Bool, Any}","Tuple{Array{BallTreeDensity, 1}, NothingUnion{var""##ANON_TV#1351""} where var""##ANON_TV#1351"" <: AbstractVector, Int, Any, Any, NothingUnion{Array{Float64, 2}}, NothingUnion{VectorRange{Int}}, AbstractString, NothingUnion{var""##ANON_TV#1352""} where var""##ANON_TV#1352"" <: AbstractString, NothingUnion{Vector{var""##ANON_TV#1353""} where var""##ANON_TV#1353"" <: AbstractString}, NothingUnion{Vector{var""##ANON_TV#1354""} where var""##ANON_TV#1354"" <: AbstractString}, NothingUnion{Int}, Any, Bool, Any, Bool, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1351""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1352""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1353""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1354""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/KernelDensityEstimatePlotting.jl
src/Backend.jl,BackendParameter,mtsig,"Tuple{Any, Vararg{Pair{<:Backend}}}","Tuple{Any, Vararg{Pair{var""##ANON_TV#1323""} where var""##ANON_TV#1323"" <: Backend}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1323""), :(Union{}), :Backend, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/KhepriBase.jl
src/Backend.jl,BackendParameter,mtsig,Tuple{Vararg{Pair{<:Backend}}},"Tuple{Vararg{Pair{var""##ANON_TV#1324""} where var""##ANON_TV#1324"" <: Backend}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1324""), :(Union{}), :Backend, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/KhepriBase.jl
src/Paths.jl,convert,mtsig,"Tuple{Type{Vector{<:ClosedPath}}, Vector{<:Any}}","Tuple{Type{Vector{var""##ANON_TV#1334""} where var""##ANON_TV#1334"" <: ClosedPath}, Vector{var""##ANON_TV#1335""} where var""##ANON_TV#1335"" <: Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1334""), :(Union{}), :ClosedPath, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1335""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/KhepriBase.jl
src/Shapes.jl,convert,mtsig,"Tuple{Type{Matrix{XYZ}}, Vector{Vector{<:Loc}}}","Tuple{Type{Matrix{XYZ}}, Vector{Vector{var""##ANON_TV#1345""} where var""##ANON_TV#1345"" <: Loc}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1345""), :(Union{}), :Loc, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/KhepriBase.jl
src/Types.jl,Base.convert,mtsig,"Tuple{Type{Optional{S} where S}, Any}","Tuple{Type{Optional{S} where S}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/KirUtil.jl
src/Types.jl,Base.convert,mtsig,"Tuple{Type{Optional{S, T} where S}, Any} where T","Tuple{Type{Optional{S, T} where S}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/KirUtil.jl
src/Types.jl,Base.convert,mtsig,"Tuple{Type{Optional{S} where S}, Optional}","Tuple{Type{Optional{S} where S}, Optional}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/KirUtil.jl
src/Types.jl,Base.convert,mtsig,"Tuple{Type{Optional{S1, T} where S1}, Optional{S2, T} where S2} where T","Tuple{Type{Optional{S1, T} where S1}, Optional{S2, T} where S2} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/KirUtil.jl
src/Types.jl,Base.convert,mtsig,"(Tuple{Type{Optional{S1, T} where S1}, Optional{S2}} where T) where S2","(Tuple{Type{Optional{S1, T} where S1}, Optional{S2}} where T) where S2","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/KirUtil.jl
src/layers21/conv.jl,<NOT A FUNSIG>,tyassorann,"Union{Integer, Vector{<:Integer}, Tuple{Vararg{<:Integer}}, Tuple{Vararg{NTuple{2, <:Integer}}}}","Union{Integer, Vector{var""##ANON_TV#992""} where var""##ANON_TV#992"" <: Integer, Tuple{Vararg{var""##ANON_TV#993""} where var""##ANON_TV#993"" <: Integer}, Tuple{Vararg{NTuple{2, var""##ANON_TV#994""} where var""##ANON_TV#994"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#992""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#993""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCUnion)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#994""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Knet.jl
src/layers21/conv.jl,Conv,mtsig,"Tuple{Vararg{Integer}, Any, Any, Bool, Bool, Any, Any, Any, Any, Union{Integer, Vector{<:Integer}, Tuple{Vararg{<:Integer}}, Tuple{Vararg{NTuple{2, <:Integer}}}}, Union{Integer, Vector{<:Integer}, Tuple{Vararg{<:Integer}}}, Union{Integer, Vector{<:Integer}, Tuple{Vararg{<:Integer}}}, Integer, Real, Real}","Tuple{Vararg{Integer}, Any, Any, Bool, Bool, Any, Any, Any, Any, Union{Integer, Vector{var""##ANON_TV#999""} where var""##ANON_TV#999"" <: Integer, Tuple{Vararg{var""##ANON_TV#1000""} where var""##ANON_TV#1000"" <: Integer}, Tuple{Vararg{NTuple{2, var""##ANON_TV#1001""} where var""##ANON_TV#1001"" <: Integer}}}, Union{Integer, Vector{var""##ANON_TV#1002""} where var""##ANON_TV#1002"" <: Integer, Tuple{Vararg{var""##ANON_TV#1003""} where var""##ANON_TV#1003"" <: Integer}}, Union{Integer, Vector{var""##ANON_TV#1004""} where var""##ANON_TV#1004"" <: Integer, Tuple{Vararg{var""##ANON_TV#1005""} where var""##ANON_TV#1005"" <: Integer}}, Integer, Real, Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#999""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1000""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1001""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1002""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1003""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1004""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1005""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,false,7,true,true,true,true,true,true,true,true,data/ta-info/all/Knet.jl
src/ops21/zeropad.jl,padtuple,mtsig,"Tuple{NTuple{P, NTuple{2, <:Integer}}, Any} where P","Tuple{NTuple{P, NTuple{2, var""##ANON_TV#1032""} where var""##ANON_TV#1032"" <: Integer}, Any} where P","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1032""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:P, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Knet.jl
src/ops21/zeropad.jl,symmetric,mtsig,"Tuple{NTuple{P, NTuple{2, <:Integer}}} where P","Tuple{NTuple{P, NTuple{2, var""##ANON_TV#1035""} where var""##ANON_TV#1035"" <: Integer}} where P","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1035""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:P, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Knet.jl
src/types.jl,<NOT A FUNSIG>,tyassorann,"Dict{Type{<:Attribute}, Union{Function, Attribute}}","Dict{Type{var""##ANON_TV#1177""} where var""##ANON_TV#1177"" <: Attribute, Union{Function, Attribute}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1177""), :(Union{}), :Attribute, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Layered.jl
src/vectors.jl,vdot,mtsig,"Tuple{Type{Complex{<:AbstractFloat}}, AbstractArray{<:Complex{<:AbstractFloat}, N}, AbstractArray{<:Complex{<:AbstractFloat}, N}} where N","Tuple{Type{Complex{var""##ANON_TV#2737""} where var""##ANON_TV#2737"" <: AbstractFloat}, AbstractArray{var""##ANON_TV#2738"", N} where var""##ANON_TV#2738"" <: (Complex{var""##ANON_TV#2739""} where var""##ANON_TV#2739"" <: AbstractFloat), AbstractArray{var""##ANON_TV#2740"", N} where var""##ANON_TV#2740"" <: (Complex{var""##ANON_TV#2741""} where var""##ANON_TV#2741"" <: AbstractFloat)} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2737""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2739""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2738""), :(Union{}), :(Complex{var""##ANON_TV#2739""} where var""##ANON_TV#2739"" <: AbstractFloat), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2741""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2740""), :(Union{}), :(Complex{var""##ANON_TV#2741""} where var""##ANON_TV#2741"" <: AbstractFloat), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,6,true,false,false,true,true,true,true,true,data/ta-info/all/LazyAlgebra.jl
src/vectors.jl,vdot,mtsig,"Tuple{Type{Complex{<:AbstractFloat}}, AbstractArray{<:AbstractFloat, N}, AbstractArray{<:Complex{<:AbstractFloat}, N}, AbstractArray{<:Complex{<:AbstractFloat}, N}} where N","Tuple{Type{Complex{var""##ANON_TV#2760""} where var""##ANON_TV#2760"" <: AbstractFloat}, AbstractArray{var""##ANON_TV#2761"", N} where var""##ANON_TV#2761"" <: AbstractFloat, AbstractArray{var""##ANON_TV#2762"", N} where var""##ANON_TV#2762"" <: (Complex{var""##ANON_TV#2763""} where var""##ANON_TV#2763"" <: AbstractFloat), AbstractArray{var""##ANON_TV#2764"", N} where var""##ANON_TV#2764"" <: (Complex{var""##ANON_TV#2765""} where var""##ANON_TV#2765"" <: AbstractFloat)} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2760""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2761""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2763""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2762""), :(Union{}), :(Complex{var""##ANON_TV#2763""} where var""##ANON_TV#2763"" <: AbstractFloat), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2765""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2764""), :(Union{}), :(Complex{var""##ANON_TV#2765""} where var""##ANON_TV#2765"" <: AbstractFloat), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,7,true,false,false,true,true,true,true,true,data/ta-info/all/LazyAlgebra.jl
src/vectors.jl,vdot,mtsig,"Tuple{Type{Complex{<:AbstractFloat}}, AbstractVector{Int}, AbstractArray{<:Complex{<:AbstractFloat}, N}, AbstractArray{<:Complex{<:AbstractFloat}, N}} where N","Tuple{Type{Complex{var""##ANON_TV#2780""} where var""##ANON_TV#2780"" <: AbstractFloat}, AbstractVector{Int}, AbstractArray{var""##ANON_TV#2781"", N} where var""##ANON_TV#2781"" <: (Complex{var""##ANON_TV#2782""} where var""##ANON_TV#2782"" <: AbstractFloat), AbstractArray{var""##ANON_TV#2783"", N} where var""##ANON_TV#2783"" <: (Complex{var""##ANON_TV#2784""} where var""##ANON_TV#2784"" <: AbstractFloat)} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2780""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2782""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2781""), :(Union{}), :(Complex{var""##ANON_TV#2782""} where var""##ANON_TV#2782"" <: AbstractFloat), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2784""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2783""), :(Union{}), :(Complex{var""##ANON_TV#2784""} where var""##ANON_TV#2784"" <: AbstractFloat), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,6,true,false,false,true,true,true,true,true,data/ta-info/all/LazyAlgebra.jl
src/lazyapplying.jl,ApplyStyle,mtsig,"Tuple{Any, Type{<:AbstractArray}, Vararg{Type{<:AbstractArray}}}","Tuple{Any, Type{var""##ANON_TV#1776""} where var""##ANON_TV#1776"" <: AbstractArray, Vararg{Type{var""##ANON_TV#1777""} where var""##ANON_TV#1777"" <: AbstractArray}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1776""), :(Union{}), :AbstractArray, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1777""), :(Union{}), :AbstractArray, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/LazyArrays.jl
src/lazyconcat.jl,vcat_copyto!,mtsig,"Tuple{AbstractMatrix, Vararg{Adjoint{<:Any, <:AbstractVector}}}","Tuple{AbstractMatrix, Vararg{(Adjoint{var""##ANON_TV#1936"", var""##ANON_TV#1937""} where var""##ANON_TV#1936"" <: Any) where var""##ANON_TV#1937"" <: AbstractVector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1936""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1937""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/LazyArrays.jl
src/linalg/mul.jl,ApplyStyle,mtsig,"Tuple{typeof(*), Type{<:Union{AbstractArray, AbstractQ}}, Vararg{Type{<:Union{AbstractArray, AbstractQ}}}}","Tuple{typeof(*), Type{var""##ANON_TV#2165""} where var""##ANON_TV#2165"" <: Union{AbstractArray, AbstractQ}, Vararg{Type{var""##ANON_TV#2166""} where var""##ANON_TV#2166"" <: Union{AbstractArray, AbstractQ}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2165""), :(Union{}), :(Union{AbstractArray, AbstractQ}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2166""), :(Union{}), :(Union{AbstractArray, AbstractQ}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/LazyArrays.jl
src/linalg/mul.jl,ApplyStyle,mtsig,"Tuple{typeof(*), Type{<:AbstractArray}, Vararg{Type{<:AbstractArray}}}","Tuple{typeof(*), Type{var""##ANON_TV#2167""} where var""##ANON_TV#2167"" <: AbstractArray, Vararg{Type{var""##ANON_TV#2168""} where var""##ANON_TV#2168"" <: AbstractArray}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2167""), :(Union{}), :AbstractArray, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2168""), :(Union{}), :AbstractArray, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/LazyArrays.jl
src/blockconcat.jl,BlockVcat,mtsig,"(Tuple{Vararg{AbstractArray{<:Any, N}}} where N) where T","(Tuple{Vararg{AbstractArray{var""##ANON_TV#1648"", N} where var""##ANON_TV#1648"" <: Any}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1648""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/LazyBandedMatrices.jl
src/blockconcat.jl,blockbandwidths,mtsig,"Tuple{PseudoBlockMatrix{<:Any, <:Any, <:NTuple{2, BlockedUnitRange{<:AbstractUnitRange{Int}}}}}","Tuple{((PseudoBlockMatrix{var""##ANON_TV#1752"", var""##ANON_TV#1753"", var""##ANON_TV#1754""} where var""##ANON_TV#1752"" <: Any) where var""##ANON_TV#1753"" <: Any) where var""##ANON_TV#1754"" <: NTuple{2, BlockedUnitRange{var""##ANON_TV#1755""} where var""##ANON_TV#1755"" <: AbstractUnitRange{Int}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1755""), :(Union{}), :(AbstractUnitRange{Int}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1752""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1753""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1754""), :(Union{}), :(NTuple{2, BlockedUnitRange{var""##ANON_TV#1755""} where var""##ANON_TV#1755"" <: AbstractUnitRange{Int}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/LazyBandedMatrices.jl
src/blockconcat.jl,subblockbandwidths,mtsig,"Tuple{PseudoBlockMatrix{<:Any, <:Any, <:NTuple{2, BlockedUnitRange{<:AbstractUnitRange{Int}}}}}","Tuple{((PseudoBlockMatrix{var""##ANON_TV#1756"", var""##ANON_TV#1757"", var""##ANON_TV#1758""} where var""##ANON_TV#1756"" <: Any) where var""##ANON_TV#1757"" <: Any) where var""##ANON_TV#1758"" <: NTuple{2, BlockedUnitRange{var""##ANON_TV#1759""} where var""##ANON_TV#1759"" <: AbstractUnitRange{Int}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1759""), :(Union{}), :(AbstractUnitRange{Int}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1756""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1757""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1758""), :(Union{}), :(NTuple{2, BlockedUnitRange{var""##ANON_TV#1759""} where var""##ANON_TV#1759"" <: AbstractUnitRange{Int}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/LazyBandedMatrices.jl
src/blockkron.jl,sublayout,mtsig,"Tuple{KronTravLayout{2}, Type{<:NTuple{2, BlockSlice{<:BlockRange1}}}}","Tuple{KronTravLayout{2}, Type{var""##ANON_TV#1782""} where var""##ANON_TV#1782"" <: NTuple{2, BlockSlice{var""##ANON_TV#1783""} where var""##ANON_TV#1783"" <: BlockRange1}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1783""), :(Union{}), :BlockRange1, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1782""), :(Union{}), :(NTuple{2, BlockSlice{var""##ANON_TV#1783""} where var""##ANON_TV#1783"" <: BlockRange1}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/LazyBandedMatrices.jl
src/blockkron.jl,krontavbroadcaststyle,mtsig,"Tuple{Vararg{Union{BandedStyle, StructuredMatrixStyle{<:Diagonal}}}}","Tuple{Vararg{Union{BandedStyle, StructuredMatrixStyle{var""##ANON_TV#1787""} where var""##ANON_TV#1787"" <: Diagonal}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1787""), :(Union{}), :Diagonal, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/LazyBandedMatrices.jl
src/LazyOperations/CartesianProduct.jl,project,mtsig,"(((Tuple{CartesianProduct{N, IT, Union{VP1, VP2}}, AbstractVector{Int}, Vararg{Any}} where VP2 <: VPolytope{N}) where VP1 <: VPolygon{N}) where IT <: Interval) where N","(((Tuple{CartesianProduct{N, IT, Union{VP1, VP2}}, AbstractVector{Int}, Vararg{Any}} where VP2 <: VPolytope{N}) where VP1 <: VPolygon{N}) where IT <: Interval) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:VP2, :(Union{}), :(VPolytope{N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:VP1, :(Union{}), :(VPolygon{N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:IT, :(Union{}), :Interval, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,false,true,true,data/ta-info/all/LazySets.jl
src/parsing.jl,parse_numeric_element,mtsig,"Tuple{Type{Union{T, Missing}}, Any} where T","Tuple{Type{Union{T, Missing}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/LibPQ.jl
src/reader.jl,read_field_,mtsig,"Tuple{AbstractBSONReader, Type{Union{Nothing, T}}} where T","Tuple{AbstractBSONReader, Type{Union{Nothing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/LightBSON.jl
src/writer.jl,Base.setindex!,mtsig,"Tuple{BSONWriter, Tuple{Vararg{Pair{String, T} where T}}}","Tuple{BSONWriter, Tuple{Vararg{Pair{String, T} where T}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/LightBSON.jl
src/list.jl,<NOT A FUNSIG>,tyassorann,"Vector{Union{Nothing, T} where T <: AbstractNode}","Vector{Union{Nothing, T} where T <: AbstractNode}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractNode, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/LinkedLists.jl
src/utils.jl,check_indices,mtsig,"Tuple{AbstractArray{<:Any, N}, Vararg{AbstractArray{<:Any, N}}} where N","Tuple{AbstractArray{var""##ANON_TV#1413"", N} where var""##ANON_TV#1413"" <: Any, Vararg{AbstractArray{var""##ANON_TV#1414"", N} where var""##ANON_TV#1414"" <: Any}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1413""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1414""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/LocalFilters.jl
src/utils.jl,check_indices,mtsig,"Tuple{Type{Bool}, AbstractArray{<:Any, N}, Vararg{AbstractArray{<:Any, N}}} where N","Tuple{Type{Bool}, AbstractArray{var""##ANON_TV#1415"", N} where var""##ANON_TV#1415"" <: Any, Vararg{AbstractArray{var""##ANON_TV#1416"", N} where var""##ANON_TV#1416"" <: Any}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1415""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1416""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/LocalFilters.jl
src/utils.jl,check_indices,mtsig,"Tuple{Type{Bool}, Tuple{Vararg{AbstractUnitRange{<:Integer}}}, Vararg{AbstractArray}}","Tuple{Type{Bool}, Tuple{Vararg{AbstractUnitRange{var""##ANON_TV#1417""} where var""##ANON_TV#1417"" <: Integer}}, Vararg{AbstractArray}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1417""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/LocalFilters.jl
src/utils.jl,check_indices,mtsig,"Tuple{Type{Bool}, NTuple{N, AbstractUnitRange{<:Integer}}, AbstractArray{<:Any, N}, Vararg{AbstractArray{<:Any, N}}} where N","Tuple{Type{Bool}, NTuple{N, AbstractUnitRange{var""##ANON_TV#1418""} where var""##ANON_TV#1418"" <: Integer}, AbstractArray{var""##ANON_TV#1419"", N} where var""##ANON_TV#1419"" <: Any, Vararg{AbstractArray{var""##ANON_TV#1420"", N} where var""##ANON_TV#1420"" <: Any}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1418""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1419""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1420""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/LocalFilters.jl
src/utils.jl,check_indices,mtsig,"Tuple{Type{Bool}, NTuple{N, AbstractUnitRange{<:Integer}}, AbstractArray{<:Any, N}} where N","Tuple{Type{Bool}, NTuple{N, AbstractUnitRange{var""##ANON_TV#1421""} where var""##ANON_TV#1421"" <: Integer}, AbstractArray{var""##ANON_TV#1422"", N} where var""##ANON_TV#1422"" <: Any} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1421""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1422""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/LocalFilters.jl
src/Utils/data.jl,iscomplete_col,mtsig,"Tuple{AbstractVector{Union{<:AbstractFloat, Missing}}}","Tuple{AbstractVector{Union{var""##ANON_TV#1470"", Missing} where var""##ANON_TV#1470"" <: AbstractFloat}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1470""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/LogicCircuits.jl
src/bdd/bdds.jl,and,mtsig,"Tuple{Vararg{Union{T, Bdd}}} where T <: Integer","Tuple{Vararg{Union{T, Bdd}}} where T <: Integer","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/LogicCircuits.jl
src/bdd/bdds.jl,or,mtsig,"Tuple{Vararg{Union{T, Bdd}}} where T <: Integer","Tuple{Vararg{Union{T, Bdd}}} where T <: Integer","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/LogicCircuits.jl
ext/ForwardDiffExt.jl,∂vmap_singlethread!,mtsig,"((Tuple{F, Tuple{Vararg{DenseArray{T}, A}}, DenseArray{T}, Vararg{DenseArray{<:Base.HWReal}, A}} where A) where T <: Base.HWReal) where F","((Tuple{F, Tuple{Vararg{DenseArray{T}, A}}, DenseArray{T}, Vararg{DenseArray{var""##ANON_TV#1363""} where var""##ANON_TV#1363"" <: Base.HWReal, A}} where A) where T <: Base.HWReal) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1363""), :(Union{}), :(Base.HWReal), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Base.HWReal), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,true,true,true,data/ta-info/all/LoopVectorization.jl
src/simdfunctionals/mapreduce.jl,_vmapreduce,mtsig,"((((Tuple{F, OP, StaticInt{W}, Any, Type{T}, Vararg{AbstractArray{<:NativeTypes}, A}} where T) where W) where A) where OP) where F","((((Tuple{F, OP, StaticInt{W}, Any, Type{T}, Vararg{AbstractArray{var""##ANON_TV#1378""} where var""##ANON_TV#1378"" <: NativeTypes, A}} where T) where W) where A) where OP) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1378""), :(Union{}), :NativeTypes, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:W, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:OP, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,6,true,true,true,true,true,true,true,true,data/ta-info/all/LoopVectorization.jl
src/fit_dataframe.jl,observations,mtsig,"Tuple{Array{Union{T, Missing}}} where T","Tuple{Array{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/LowRankModels.jl
src/Lyra.jl,add!,mtsig,"Tuple{LyraWindow, Pair{Symbol, <:Any}, Vararg{Pair{Symbol, <:Any}}}","Tuple{LyraWindow, Pair{Symbol, var""##ANON_TV#1528""} where var""##ANON_TV#1528"" <: Any, Vararg{Pair{Symbol, var""##ANON_TV#1529""} where var""##ANON_TV#1529"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1528""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1529""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Lyra.jl
src/Lyra.jl,LyraWindow,mtsig,"Tuple{Pair{Symbol, <:Any}, Vararg{Pair{Symbol, <:Any}}}","Tuple{Pair{Symbol, var""##ANON_TV#1530""} where var""##ANON_TV#1530"" <: Any, Vararg{Pair{Symbol, var""##ANON_TV#1531""} where var""##ANON_TV#1531"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1530""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1531""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Lyra.jl
src/chains.jl,Chains,mtsig,"Tuple{Array{Union{T, Missing}, 3}, Any, Any, Any, Any, Any} where T <: Real","Tuple{Array{Union{T, Missing}, 3}, Any, Any, Any, Any, Any} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/MCMCChain.jl
src/Distance/Ratio.jl,<NOT A FUNSIG>,tyassorann,Vector{T where T <: GeneralNode},Vector{T where T <: GeneralNode},"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :GeneralNode, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MCPhyloTree.jl
test/_models/Transformers.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Vector{Pair{<:Unsigned, Symbol}}}","Dict{Symbol, Vector{Pair{var""##ANON_TV#1679"", Symbol} where var""##ANON_TV#1679"" <: Unsigned}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1679""), :(Union{}), :Unsigned, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MLJBase.jl
src/model_traits.jl,_density,mtsig,"Tuple{Type{AbstractArray{<:$T, D}}} where D","Tuple{Type{AbstractArray{var""##ANON_TV#1415"", D} where var""##ANON_TV#1415"" <: $T}} where D","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1415""), :(Union{}), :($(Expr(:$, :T))), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,true,2,true,true,false,true,true,false,true,true,data/ta-info/all/MLJModelInterface.jl
src/model_traits.jl,_density,mtsig,"(Tuple{Type{AbstractArray{<:($T){N}, D}}} where D) where N","(Tuple{Type{AbstractArray{var""##ANON_TV#1416"", D} where var""##ANON_TV#1416"" <: ($T){N}}} where D) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1416""), :(Union{}), :(($(Expr(:$, :T))){N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/MLJModelInterface.jl
src/builtins/Transformers.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Vector{Union{Pair{<:Unsigned, Symbol}, Pair{Missing, Symbol}}}}","Dict{Symbol, Vector{Union{Pair{var""##ANON_TV#2489"", Symbol} where var""##ANON_TV#2489"" <: Unsigned, Pair{Missing, Symbol}}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2489""), :(Union{}), :Unsigned, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MLJModels.jl
src/openml.jl,_scitype,mtsig,"Tuple{Any, Type{Union{Missing, T}}} where T","Tuple{Any, Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/MLJOpenML.jl
src/coerce.jl,$c,mtsig,"Tuple{Val{:table}, Any, Vararg{Pair{<:Union{Symbol, <:Type}, <:Type}}, Vararg{Any}}","Tuple{Val{:table}, Any, Vararg{(Pair{var""##ANON_TV#1554"", var""##ANON_TV#1556""} where var""##ANON_TV#1554"" <: (Union{Symbol, var""##ANON_TV#1555""} where var""##ANON_TV#1555"" <: Type)) where var""##ANON_TV#1556"" <: Type}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1555""), :(Union{}), :Type, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1554""), :(Union{}), :(Union{Symbol, var""##ANON_TV#1555""} where var""##ANON_TV#1555"" <: Type), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1556""), :(Union{}), :Type, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/MLJScientificTypes.jl
test/models/Transformers.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Vector{Pair{<:Unsigned, Symbol}}}","Dict{Symbol, Vector{Pair{var""##ANON_TV#1481"", Symbol} where var""##ANON_TV#1481"" <: Unsigned}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1481""), :(Union{}), :Unsigned, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MLJTuning.jl
test/MQuery/MQuery.Interfaces.jl,get_fields,mtsig,"Tuple{Dict{Symbol, Vector{T} where T}}","Tuple{Dict{Symbol, Vector{T} where T}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MLStyle.jl
test/MQuery/MQuery.Interfaces.jl,get_records,mtsig,"Tuple{Dict{Symbol, Vector{T} where T}}","Tuple{Dict{Symbol, Vector{T} where T}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MLStyle.jl
test/MQuery/MQuery.Interfaces.jl,build_result,mtsig,"Tuple{Type{Dict{Symbol, Vector{T} where T}}, Any, Any, Base.Generator}","Tuple{Type{Dict{Symbol, Vector{T} where T}}, Any, Any, Base.Generator}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MLStyle.jl
src/operators/sparsempo/sparsempo.jl,SparseMPO,mtsig,"(Tuple{AbstractArray{Union{E, M}, 3}} where E <: Number) where M <: MPOTensor","(Tuple{AbstractArray{Union{E, M}, 3}} where E <: Number) where M <: MPOTensor","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:E, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :MPOTensor, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/MPSKit.jl
src/states/finitemps.jl,FiniteMPS,mtsig,"(Tuple{Vector{Union{Missing, A}}, Vector{Union{Missing, A}}, Vector{Union{Missing, A}}, Vector{Union{Missing, B}}} where B <: MPSBondTensor) where A <: GenericMPSTensor","(Tuple{Vector{Union{Missing, A}}, Vector{Union{Missing, A}}, Vector{Union{Missing, A}}, Vector{Union{Missing, B}}} where B <: MPSBondTensor) where A <: GenericMPSTensor","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:B, :(Union{}), :MPSBondTensor, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A, :(Union{}), :GenericMPSTensor, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/MPSKit.jl
src/executor.jl,<NOT A FUNSIG>,tyassorann,"Vector{Union{Cvoid, <:NDArray}}","Vector{Union{Cvoid, var""##ANON_TV#2375""} where var""##ANON_TV#2375"" <: NDArray}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2375""), :(Union{}), :NDArray, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MXNet.jl
src/ndarray/array.jl,convert,mtsig,"Tuple{Type{Array{<:Real}}, NDArray}","Tuple{Type{Array{var""##ANON_TV#2402""} where var""##ANON_TV#2402"" <: Real}, NDArray}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2402""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MXNet.jl
src/MagnonPhononHybridization.jl,add!,mtsig,"Tuple{Matrix, TBAMatrixRepresentation{MagnonPhononCoupled}, Operator{<:Number, <:NTuple{2, CompositeIndex{<:Index{Int, <:FID{:b}}}}}, Any, Vararg{Any}}","Tuple{Matrix, TBAMatrixRepresentation{MagnonPhononCoupled}, (Operator{var""##ANON_TV#1299"", var""##ANON_TV#1300""} where var""##ANON_TV#1299"" <: Number) where var""##ANON_TV#1300"" <: NTuple{2, CompositeIndex{var""##ANON_TV#1301""} where var""##ANON_TV#1301"" <: (Index{Int, var""##ANON_TV#1302""} where var""##ANON_TV#1302"" <: FID{:b})}, Any, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1302""), :(Union{}), :(FID{:b}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1301""), :(Union{}), :(Index{Int, var""##ANON_TV#1302""} where var""##ANON_TV#1302"" <: FID{:b}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1299""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1300""), :(Union{}), :(NTuple{2, CompositeIndex{var""##ANON_TV#1301""} where var""##ANON_TV#1301"" <: (Index{Int, var""##ANON_TV#1302""} where var""##ANON_TV#1302"" <: FID{:b})}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,true,4,true,true,true,true,true,true,true,true,data/ta-info/all/MagnonPhononHybridization.jl
src/makielayout/blocks/legend.jl,initialize_block!,mtsig,"Tuple{Legend, Observable{Vector{Tuple{Optional{<:AbstractString}, Vector{LegendEntry}}}}}","Tuple{Legend, Observable{Vector{Tuple{Optional{var""##ANON_TV#2362""} where var""##ANON_TV#2362"" <: AbstractString, Vector{LegendEntry}}}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2362""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Makie.jl
src/stats/conversions.jl,convert_arguments,mtsig,"Tuple{SampleBased, NTuple{N, AbstractVector{<:Number}}} where N","Tuple{SampleBased, NTuple{N, AbstractVector{var""##ANON_TV#2372""} where var""##ANON_TV#2372"" <: Number}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2372""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Makie.jl
src/MaskArrays.jl,maskarray,mtsig,"(Tuple{AbstractArray{Union{T, Missing}, N}} where N) where T","(Tuple{AbstractArray{Union{T, Missing}, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/MaskArrays.jl
src/Utilities/functions.jl,operate,mtsig,"Tuple{Function, Type{T}, Vararg{Union{T, AbstractVector{T}}}} where T <: Number","Tuple{Function, Type{T}, Vararg{Union{T, AbstractVector{T}}}} where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/MathOptInterface.jl
src/Utilities/functions.jl,operate!,mtsig,"Tuple{Function, Type{T}, Vararg{Union{T, AbstractVector{T}}}} where T","Tuple{Function, Type{T}, Vararg{Union{T, AbstractVector{T}}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/MathOptInterface.jl
src/Utilities/functions.jl,promote_operation,mtsig,"Tuple{typeof(vcat), Type{T}, Vararg{Type{<:Union{MOI.VariableIndex, MOI.VectorOfVariables}}}} where T","Tuple{typeof(vcat), Type{T}, Vararg{Type{var""##ANON_TV#2944""} where var""##ANON_TV#2944"" <: Union{MOI.VariableIndex, MOI.VectorOfVariables}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2944""), :(Union{}), :(Union{MOI.VariableIndex, MOI.VectorOfVariables}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MathOptInterface.jl
src/Utilities/functions.jl,promote_operation,mtsig,"Tuple{typeof(vcat), Type{T}, Vararg{Union{Type{T}, Type{<:AbstractVector{T}}}}} where T <: Number","Tuple{typeof(vcat), Type{T}, Vararg{Union{Type{T}, Type{var""##ANON_TV#2946""} where var""##ANON_TV#2946"" <: AbstractVector{T}}}} where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2946""), :(Union{}), :(AbstractVector{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/MathOptInterface.jl
src/Utilities/functions.jl,operate,mtsig,"Tuple{typeof(vcat), Type{T}, Vararg{Union{T, AbstractVector{T}}}} where T <: Number","Tuple{typeof(vcat), Type{T}, Vararg{Union{T, AbstractVector{T}}}} where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/MathOptInterface.jl
src/Utilities/functions.jl,promote_operation,mtsig,"Tuple{typeof(vcat), Type{T}, Vararg{Type{<:Union{ScalarAffineLike{T}, MOI.VectorOfVariables, MOI.VectorAffineFunction{T}}}}} where T","Tuple{typeof(vcat), Type{T}, Vararg{Type{var""##ANON_TV#2947""} where var""##ANON_TV#2947"" <: Union{ScalarAffineLike{T}, MOI.VectorOfVariables, MOI.VectorAffineFunction{T}}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2947""), :(Union{}), :(Union{ScalarAffineLike{T}, MOI.VectorOfVariables, MOI.VectorAffineFunction{T}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/MathOptInterface.jl
src/Utilities/functions.jl,promote_operation,mtsig,"Tuple{typeof(vcat), Type{T}, Vararg{Type{<:Union{ScalarQuadraticLike{T}, MOI.VectorOfVariables, MOI.VectorAffineFunction{T}, MOI.VectorQuadraticFunction{T}}}}} where T","Tuple{typeof(vcat), Type{T}, Vararg{Type{var""##ANON_TV#2948""} where var""##ANON_TV#2948"" <: Union{ScalarQuadraticLike{T}, MOI.VectorOfVariables, MOI.VectorAffineFunction{T}, MOI.VectorQuadraticFunction{T}}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2948""), :(Union{}), :(Union{ScalarQuadraticLike{T}, MOI.VectorOfVariables, MOI.VectorAffineFunction{T}, MOI.VectorQuadraticFunction{T}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/MathOptInterface.jl
src/Utilities/functions.jl,operate,mtsig,"Tuple{typeof(vcat), Type{T}, Vararg{Union{ScalarAffineLike{T}, MOI.VectorOfVariables, MOI.VectorAffineFunction{T}}}} where T","Tuple{typeof(vcat), Type{T}, Vararg{Union{ScalarAffineLike{T}, MOI.VectorOfVariables, MOI.VectorAffineFunction{T}}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/MathOptInterface.jl
src/Utilities/functions.jl,operate,mtsig,"Tuple{typeof(vcat), Type{T}, Vararg{Union{ScalarQuadraticLike{T}, MOI.VectorOfVariables, MOI.VectorAffineFunction{T}, MOI.VectorQuadraticFunction{T}}}} where T","Tuple{typeof(vcat), Type{T}, Vararg{Union{ScalarQuadraticLike{T}, MOI.VectorOfVariables, MOI.VectorAffineFunction{T}, MOI.VectorQuadraticFunction{T}}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/MathOptInterface.jl
src/maps.jl,ResetMap,mtsig,"Tuple{Int, Vararg{Pair{Int, <:N}}} where N","Tuple{Int, Vararg{Pair{Int, var""##ANON_TV#1435""} where var""##ANON_TV#1435"" <: N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1435""), :(Union{}), :N, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/MathematicalSystems.jl
src/maps.jl,ConstrainedResetMap,mtsig,"(Tuple{Int, ST, Vararg{Pair{Int, <:N}}} where ST) where N","(Tuple{Int, ST, Vararg{Pair{Int, var""##ANON_TV#1436""} where var""##ANON_TV#1436"" <: N}} where ST) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1436""), :(Union{}), :N, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:ST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/MathematicalSystems.jl
src/NonConvex/lowrankmodels/fit_dataframe.jl,observations,mtsig,"Tuple{Array{Union{T, Missing}}} where T","Tuple{Array{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/MatrixCompletion.jl
src/Utilities/Indexing.jl,Concepts.type_conversion,mtsig,"Tuple{Type{Array{<:CartesianIndex}}, Union{Array{Int64, 1}, Array{CartesianIndex{2}, 1}}}","Tuple{Type{Array{var""##ANON_TV#1282""} where var""##ANON_TV#1282"" <: CartesianIndex}, Union{Array{Int64, 1}, Array{CartesianIndex{2}, 1}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1282""), :(Union{}), :CartesianIndex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MatrixCompletion.jl
src/types.jl,<NOT A FUNSIG>,tyassorann,"Ref{Union{<:MMProperties, Nothing}}","Ref{Union{var""##ANON_TV#1986"", Nothing} where var""##ANON_TV#1986"" <: MMProperties}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1986""), :(Union{}), :MMProperties, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MatrixDepot.jl
src/MatterBase/cell.jl,<NOT A FUNSIG>,tyassorann,"Array{Atom{<:Real}, 1}","Array{Atom{var""##ANON_TV#1653""} where var""##ANON_TV#1653"" <: Real, 1}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1653""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MatterEnv.jl
src/Toolkit/orbit.jl,projection_transformation!,mtsig,"Tuple{Projection, Vararg{Matrix{<:Number}}, Symbol}","Tuple{Projection, Vararg{Matrix{var""##ANON_TV#1669""} where var""##ANON_TV#1669"" <: Number}, Symbol}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1669""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MatterEnv.jl
src/Toolkit/orbit.jl,projection_transformation!,mtsig,"Tuple{ProjectionWithSpin, Vararg{Matrix{<:Number}}, Symbol}","Tuple{ProjectionWithSpin, Vararg{Matrix{var""##ANON_TV#1670""} where var""##ANON_TV#1670"" <: Number}, Symbol}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1670""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MatterEnv.jl
src/object.jl,add_obj!,mtsig,"(Tuple{AbsVec{Shape{K, K²}}, Tuple2{AbsVec{ParamInd}}, Tuple{AbsVec{<:S²Number3}, AbsVec{<:S²Number3}}, AbsVec{Object{K, <:Shape{K, K²}}}} where K²) where K","(Tuple{AbsVec{Shape{K, K²}}, Tuple2{AbsVec{ParamInd}}, Tuple{AbsVec{var""##ANON_TV#1546""} where var""##ANON_TV#1546"" <: S²Number3, AbsVec{var""##ANON_TV#1547""} where var""##ANON_TV#1547"" <: S²Number3}, AbsVec{Object{K, var""##ANON_TV#1548""} where var""##ANON_TV#1548"" <: Shape{K, K²}}} where K²) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1546""), :(Union{}), :S²Number3, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1547""), :(Union{}), :S²Number3, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1548""), :(Union{}), :(Shape{K, K²}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K², :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,false,true,true,data/ta-info/all/MaxwellBase.jl
src/object.jl,add_obj!,mtsig,"(Tuple{AbsVec{Shape{K, K²}}, Tuple2{AbsVec{ParamInd}}, Tuple{AbsVec{<:S²Number3}, AbsVec{<:S²Number3}}, Vararg{Object{K, <:Shape{K, K²}}}} where K²) where K","(Tuple{AbsVec{Shape{K, K²}}, Tuple2{AbsVec{ParamInd}}, Tuple{AbsVec{var""##ANON_TV#1549""} where var""##ANON_TV#1549"" <: S²Number3, AbsVec{var""##ANON_TV#1550""} where var""##ANON_TV#1550"" <: S²Number3}, Vararg{Object{K, var""##ANON_TV#1551""} where var""##ANON_TV#1551"" <: Shape{K, K²}}} where K²) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1549""), :(Union{}), :S²Number3, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1550""), :(Union{}), :S²Number3, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1551""), :(Union{}), :(Shape{K, K²}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K², :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,false,true,true,data/ta-info/all/MaxwellBase.jl
src/object.jl,add_obj!,mtsig,"(Tuple{AbsVec{Shape{K, K²}}, Tuple2{AbsVec{ParamInd}}, Tuple2{AbsVec{<:S²Number3}}, Object{K, <:Shape{K, K²}}} where K²) where K","(Tuple{AbsVec{Shape{K, K²}}, Tuple2{AbsVec{ParamInd}}, Tuple2{AbsVec{var""##ANON_TV#1552""} where var""##ANON_TV#1552"" <: S²Number3}, Object{K, var""##ANON_TV#1553""} where var""##ANON_TV#1553"" <: Shape{K, K²}} where K²) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1552""), :(Union{}), :S²Number3, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1553""), :(Union{}), :(Shape{K, K²}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K², :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,true,true,true,data/ta-info/all/MaxwellBase.jl
test/linalg-benchmarks.jl,run_benchmarks,mtsig,"Tuple{AbstractString, Vararg{Type{<:AbstractAlgorithm}}, Any, Any}","Tuple{AbstractString, Vararg{Type{var""##ANON_TV#1717""} where var""##ANON_TV#1717"" <: AbstractAlgorithm}, Any, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1717""), :(Union{}), :AbstractAlgorithm, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MayOptimize.jl
test/linalg-benchmarks.jl,run_benchmarks,mtsig,"Tuple{AbstractString, AbstractDict{String, BenchmarkEntry}, Type{<:Floats}, Int, Vararg{Type{<:AbstractAlgorithm}}}","Tuple{AbstractString, AbstractDict{String, BenchmarkEntry}, Type{var""##ANON_TV#1718""} where var""##ANON_TV#1718"" <: Floats, Int, Vararg{Type{var""##ANON_TV#1719""} where var""##ANON_TV#1719"" <: AbstractAlgorithm}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1718""), :(Union{}), :Floats, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1719""), :(Union{}), :AbstractAlgorithm, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MayOptimize.jl
test/runtests.jl,isapprox,mtsig,"Tuple{Complex{Measurement{<:AbstractFloat}}, Complex{Measurement{<:AbstractFloat}}, Vararg{Any}}","Tuple{Complex{Measurement{var""##ANON_TV#1532""} where var""##ANON_TV#1532"" <: AbstractFloat}, Complex{Measurement{var""##ANON_TV#1533""} where var""##ANON_TV#1533"" <: AbstractFloat}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1532""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1533""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Measurements.jl
src/haplotype_pair.jl,fillmissing!,mtsig,"(Tuple{AbstractMatrix{Union{U, Missing}}, AbstractMatrix{T}, AbstractMatrix{T}, Vector{Vector{Tuple{Int32, Int32}}}} where U) where T","(Tuple{AbstractMatrix{Union{U, Missing}}, AbstractMatrix{T}, AbstractMatrix{T}, Vector{Vector{Tuple{Int32, Int32}}}} where U) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:U, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/MendelImpute.jl
src/phase.jl,phase_fast!,mtsig,"Tuple{Vector{HaplotypeMosaicPair}, AbstractMatrix{Union{Missing, T}}, CompressedHaplotypes, AbstractVector, AbstractVector, Bool} where T <: Real","Tuple{Vector{HaplotypeMosaicPair}, AbstractMatrix{Union{Missing, T}}, CompressedHaplotypes, AbstractVector, AbstractVector, Bool} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/MendelImpute.jl
src/phase.jl,phase_fast_compressed!,mtsig,"Tuple{Vector{HaplotypeMosaicPair}, AbstractMatrix{Union{Missing, T}}, CompressedHaplotypes, AbstractVector, AbstractVector} where T <: Real","Tuple{Vector{HaplotypeMosaicPair}, AbstractMatrix{Union{Missing, T}}, CompressedHaplotypes, AbstractVector, AbstractVector} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/MendelImpute.jl
src/MetaArrays.jl,AxisArrays.axes,mtsig,"Tuple{MetaArray{<:AxisArray}, Vararg{Type{<:Axis}}}","Tuple{MetaArray{var""##ANON_TV#1370""} where var""##ANON_TV#1370"" <: AxisArray, Vararg{Type{var""##ANON_TV#1371""} where var""##ANON_TV#1371"" <: Axis}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1370""), :(Union{}), :AxisArray, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1371""), :(Union{}), :Axis, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MetaArrays.jl
src/find.jl,findnodes,mtsig,"Tuple{AbstractPhyloTree, Vararg{Pair{<:OneOrVector{Symbol}, <:Base.Callable}}, Vararg{Any}}","Tuple{AbstractPhyloTree, Vararg{(Pair{var""##ANON_TV#1575"", var""##ANON_TV#1576""} where var""##ANON_TV#1575"" <: OneOrVector{Symbol}) where var""##ANON_TV#1576"" <: Base.Callable}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1575""), :(Union{}), :(OneOrVector{Symbol}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1576""), :(Union{}), :(Base.Callable), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MetaPhylo.jl
src/find.jl,findbranches,mtsig,"Tuple{AbstractPhyloTree, Vararg{Pair{<:OneOrVector{Symbol}, <:Base.Callable}}, Vararg{Any}}","Tuple{AbstractPhyloTree, Vararg{(Pair{var""##ANON_TV#1577"", var""##ANON_TV#1578""} where var""##ANON_TV#1577"" <: OneOrVector{Symbol}) where var""##ANON_TV#1578"" <: Base.Callable}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1577""), :(Union{}), :(OneOrVector{Symbol}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1578""), :(Union{}), :(Base.Callable), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MetaPhylo.jl
src/bags.jl,AlignedBags,mtsig,Tuple{Vararg{UnitRange{<:Integer}}},"Tuple{Vararg{UnitRange{var""##ANON_TV#1468""} where var""##ANON_TV#1468"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1468""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Mill.jl
src/core/instances.jl,Base.run,mtsig,"Tuple{ModelInstance, Int, Union{Nothing, Dict{Symbol, Vector{T} where T <: DimensionKeyTypes}}}","Tuple{ModelInstance, Int, Union{Nothing, Dict{Symbol, Vector{T} where T <: DimensionKeyTypes}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :DimensionKeyTypes, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Mimi.jl
src/core/model.jl,Base.run,mtsig,"Tuple{Model, Int, Bool, Union{Nothing, Dict{Symbol, Vector{T} where T <: DimensionKeyTypes}}}","Tuple{Model, Int, Bool, Union{Nothing, Dict{Symbol, Vector{T} where T <: DimensionKeyTypes}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :DimensionKeyTypes, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Mimi.jl
src/core/time_arrays.jl,Base.getindex,mtsig,"((((((((Tuple{TimestepArray{FixedTimestep{A_FIRST, A_STEP, A_LAST}, T, N, ti}, Vararg{Union{FixedTimestep{T_FIRST, T_STEP, T_LAST}, AnyIndex}}} where ti) where N) where T) where T_LAST) where T_STEP) where T_FIRST) where A_LAST) where A_STEP) where A_FIRST","((((((((Tuple{TimestepArray{FixedTimestep{A_FIRST, A_STEP, A_LAST}, T, N, ti}, Vararg{Union{FixedTimestep{T_FIRST, T_STEP, T_LAST}, AnyIndex}}} where ti) where N) where T) where T_LAST) where T_STEP) where T_FIRST) where A_LAST) where A_STEP) where A_FIRST","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:ti, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_LAST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_STEP, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_FIRST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A_LAST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A_STEP, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A_FIRST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,9,true,true,false,true,false,false,true,true,data/ta-info/all/Mimi.jl
src/core/time_arrays.jl,Base.getindex,mtsig,"((((Tuple{TimestepArray{VariableTimestep{A_TIMES}, T, N, ti}, Vararg{Union{VariableTimestep{T_TIMES}, AnyIndex}}} where ti) where N) where T) where T_TIMES) where A_TIMES","((((Tuple{TimestepArray{VariableTimestep{A_TIMES}, T, N, ti}, Vararg{Union{VariableTimestep{T_TIMES}, AnyIndex}}} where ti) where N) where T) where T_TIMES) where A_TIMES","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:ti, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_TIMES, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A_TIMES, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,false,true,false,false,true,true,data/ta-info/all/Mimi.jl
src/core/time_arrays.jl,Base.getindex,mtsig,"((((((Tuple{TimestepArray{FixedTimestep{FIRST, STEP, LAST}, T_data, N, ti}, Vararg{Union{TimestepValue{T_time}, AnyIndex}}} where T_time) where LAST) where STEP) where FIRST) where ti) where N) where T_data","((((((Tuple{TimestepArray{FixedTimestep{FIRST, STEP, LAST}, T_data, N, ti}, Vararg{Union{TimestepValue{T_time}, AnyIndex}}} where T_time) where LAST) where STEP) where FIRST) where ti) where N) where T_data","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T_time, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:LAST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:STEP, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:FIRST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:ti, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_data, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,7,true,true,false,true,false,false,true,true,data/ta-info/all/Mimi.jl
src/core/time_arrays.jl,Base.getindex,mtsig,"((((Tuple{TimestepArray{VariableTimestep{TIMES}, T_data, N, ti}, Vararg{Union{TimestepValue{T_time}, AnyIndex}}} where T_time) where TIMES) where ti) where N) where T_data","((((Tuple{TimestepArray{VariableTimestep{TIMES}, T_data, N, ti}, Vararg{Union{TimestepValue{T_time}, AnyIndex}}} where T_time) where TIMES) where ti) where N) where T_data","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T_time, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TIMES, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:ti, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_data, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,false,true,false,false,true,true,data/ta-info/all/Mimi.jl
src/core/time_arrays.jl,Base.setindex!,mtsig,"((((((((Tuple{TimestepArray{FixedTimestep{A_FIRST, A_STEP, A_LAST}, T, N, ti}, Any, Vararg{Union{FixedTimestep{T_FIRST, T_STEP, T_LAST}, AnyIndex}}} where ti) where N) where T) where T_LAST) where T_STEP) where T_FIRST) where A_LAST) where A_STEP) where A_FIRST","((((((((Tuple{TimestepArray{FixedTimestep{A_FIRST, A_STEP, A_LAST}, T, N, ti}, Any, Vararg{Union{FixedTimestep{T_FIRST, T_STEP, T_LAST}, AnyIndex}}} where ti) where N) where T) where T_LAST) where T_STEP) where T_FIRST) where A_LAST) where A_STEP) where A_FIRST","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:ti, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_LAST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_STEP, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_FIRST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A_LAST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A_STEP, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A_FIRST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,9,true,true,false,true,false,false,true,true,data/ta-info/all/Mimi.jl
src/core/time_arrays.jl,Base.setindex!,mtsig,"((((Tuple{TimestepArray{VariableTimestep{A_TIMES}, T, N, ti}, Any, Vararg{Union{VariableTimestep{T_TIMES}, AnyIndex}}} where ti) where N) where T) where T_TIMES) where A_TIMES","((((Tuple{TimestepArray{VariableTimestep{A_TIMES}, T, N, ti}, Any, Vararg{Union{VariableTimestep{T_TIMES}, AnyIndex}}} where ti) where N) where T) where T_TIMES) where A_TIMES","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:ti, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_TIMES, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A_TIMES, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,false,true,false,false,true,true,data/ta-info/all/Mimi.jl
src/core/time_arrays.jl,Base.setindex!,mtsig,"((((((Tuple{TimestepArray{FixedTimestep{FIRST, STEP, LAST}, T_data, N, ti}, Any, Vararg{Union{TimestepValue{T_time}, AnyIndex}}} where T_time) where LAST) where STEP) where FIRST) where ti) where N) where T_data","((((((Tuple{TimestepArray{FixedTimestep{FIRST, STEP, LAST}, T_data, N, ti}, Any, Vararg{Union{TimestepValue{T_time}, AnyIndex}}} where T_time) where LAST) where STEP) where FIRST) where ti) where N) where T_data","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T_time, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:LAST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:STEP, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:FIRST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:ti, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_data, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,7,true,true,false,true,false,false,true,true,data/ta-info/all/Mimi.jl
src/core/time_arrays.jl,Base.setindex!,mtsig,"((((Tuple{TimestepArray{VariableTimestep{TIMES}, T_data, N, ti}, Any, Vararg{Union{TimestepValue{T_time}, AnyIndex}}} where T_time) where TIMES) where ti) where N) where T_data","((((Tuple{TimestepArray{VariableTimestep{TIMES}, T_data, N, ti}, Any, Vararg{Union{TimestepValue{T_time}, AnyIndex}}} where T_time) where TIMES) where ti) where N) where T_data","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T_time, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TIMES, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:ti, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_data, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,false,true,false,false,true,true,data/ta-info/all/Mimi.jl
src/core/time_arrays.jl,Base.getindex,mtsig,"((((((Tuple{TimestepArray{FixedTimestep{FIRST, STEP, LAST}, T_data, N, ti}, Vararg{Union{Array{TimestepValue{T_time}, 1}, AnyIndex}}} where T_time) where LAST) where STEP) where FIRST) where ti) where N) where T_data","((((((Tuple{TimestepArray{FixedTimestep{FIRST, STEP, LAST}, T_data, N, ti}, Vararg{Union{Array{TimestepValue{T_time}, 1}, AnyIndex}}} where T_time) where LAST) where STEP) where FIRST) where ti) where N) where T_data","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T_time, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:LAST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:STEP, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:FIRST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:ti, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_data, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,7,true,true,false,true,false,false,true,true,data/ta-info/all/Mimi.jl
src/core/time_arrays.jl,Base.getindex,mtsig,"((((Tuple{TimestepArray{VariableTimestep{TIMES}, T_data, N, ti}, Vararg{Union{Array{TimestepValue{T_time}, 1}, AnyIndex}}} where T_time) where TIMES) where ti) where N) where T_data","((((Tuple{TimestepArray{VariableTimestep{TIMES}, T_data, N, ti}, Vararg{Union{Array{TimestepValue{T_time}, 1}, AnyIndex}}} where T_time) where TIMES) where ti) where N) where T_data","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T_time, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TIMES, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:ti, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_data, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,false,true,false,false,true,true,data/ta-info/all/Mimi.jl
src/core/time_arrays.jl,Base.setindex!,mtsig,"((((((Tuple{TimestepArray{FixedTimestep{FIRST, STEP, LAST}, T_data, N, ti}, Any, Vararg{Union{Array{TimestepValue{T_time}, 1}, AnyIndex}}} where T_time) where LAST) where STEP) where FIRST) where ti) where N) where T_data","((((((Tuple{TimestepArray{FixedTimestep{FIRST, STEP, LAST}, T_data, N, ti}, Any, Vararg{Union{Array{TimestepValue{T_time}, 1}, AnyIndex}}} where T_time) where LAST) where STEP) where FIRST) where ti) where N) where T_data","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T_time, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:LAST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:STEP, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:FIRST, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:ti, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_data, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,7,true,true,false,true,false,false,true,true,data/ta-info/all/Mimi.jl
src/core/time_arrays.jl,Base.setindex!,mtsig,"((((Tuple{TimestepArray{VariableTimestep{TIMES}, T_data, N, ti}, Any, Vararg{Union{Array{TimestepValue{T_time}, 1}, AnyIndex}}} where T_time) where TIMES) where ti) where N) where T_data","((((Tuple{TimestepArray{VariableTimestep{TIMES}, T_data, N, ti}, Any, Vararg{Union{Array{TimestepValue{T_time}, 1}, AnyIndex}}} where T_time) where TIMES) where ti) where N) where T_data","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T_time, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TIMES, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:ti, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T_data, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,false,true,false,false,true,true,data/ta-info/all/Mimi.jl
src/rules.jl,backward,mtsig,"Tuple{BFFG, Copy, Vararg{Union{Leaf{<:WGaussian{(:μ, :Σ, :c)}}, WGaussian{(:μ, :Σ, :c)}}}, Any}","Tuple{BFFG, Copy, Vararg{Union{Leaf{var""##ANON_TV#2005""} where var""##ANON_TV#2005"" <: WGaussian{(:μ, :Σ, :c)}, WGaussian{(:μ, :Σ, :c)}}}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2005""), :(Union{}), :(WGaussian{(:μ, :Σ, :c)}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/Mitosis.jl
src/FixedEffectModels/anova.jl,anova,mtsig,"Tuple{Vararg{TableRegressionModel{<:FixedEffectModel}}, Type{<:GoodnessOfFit}, Vararg{Any}}","Tuple{Vararg{TableRegressionModel{var""##ANON_TV#1571""} where var""##ANON_TV#1571"" <: FixedEffectModel}, Type{var""##ANON_TV#1572""} where var""##ANON_TV#1572"" <: GoodnessOfFit, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1571""), :(Union{}), :FixedEffectModel, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1572""), :(Union{}), :GoodnessOfFit, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MixedAnova.jl
src/FixedEffectModels/anova.jl,anova,mtsig,"Tuple{Type{FTest}, Vararg{TableRegressionModel{<:FixedEffectModel}}, Bool, Bool}","Tuple{Type{FTest}, Vararg{TableRegressionModel{var""##ANON_TV#1574""} where var""##ANON_TV#1574"" <: FixedEffectModel}, Bool, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1574""), :(Union{}), :FixedEffectModel, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MixedAnova.jl
src/GLM/anova.jl,anova,mtsig,"(Tuple{Vararg{TableRegressionModel{<:LinearModel, <:AbstractArray}, N}, Type{T}, Vararg{Any}} where T <: GoodnessOfFit) where N","(Tuple{Vararg{(TableRegressionModel{var""##ANON_TV#1587"", var""##ANON_TV#1588""} where var""##ANON_TV#1587"" <: LinearModel) where var""##ANON_TV#1588"" <: AbstractArray, N}, Type{T}, Vararg{Any}} where T <: GoodnessOfFit) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1587""), :(Union{}), :LinearModel, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1588""), :(Union{}), :AbstractArray, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :GoodnessOfFit, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/MixedAnova.jl
src/GLM/anova.jl,anova,mtsig,"(Tuple{Vararg{TableRegressionModel{<:GeneralizedLinearModel, <:AbstractArray}, N}, Type{T}, Vararg{Any}} where T <: GoodnessOfFit) where N","(Tuple{Vararg{(TableRegressionModel{var""##ANON_TV#1589"", var""##ANON_TV#1590""} where var""##ANON_TV#1589"" <: GeneralizedLinearModel) where var""##ANON_TV#1590"" <: AbstractArray, N}, Type{T}, Vararg{Any}} where T <: GoodnessOfFit) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1589""), :(Union{}), :GeneralizedLinearModel, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1590""), :(Union{}), :AbstractArray, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :GoodnessOfFit, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/MixedAnova.jl
src/GLM/anova.jl,anova,mtsig,"Tuple{Type{FTest}, Vararg{TableRegressionModel{<:Union{LinearModel, GeneralizedLinearModel}}}, Bool, Bool}","Tuple{Type{FTest}, Vararg{TableRegressionModel{var""##ANON_TV#1597""} where var""##ANON_TV#1597"" <: Union{LinearModel, GeneralizedLinearModel}}, Bool, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1597""), :(Union{}), :(Union{LinearModel, GeneralizedLinearModel}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/MixedAnova.jl
src/likelihoodratiotest.jl,_samefamily,mtsig,"Tuple{Vararg{GeneralizedLinearMixedModel{<:AbstractFloat, S}}} where S <: Distribution","Tuple{Vararg{GeneralizedLinearMixedModel{var""##ANON_TV#1034"", S} where var""##ANON_TV#1034"" <: AbstractFloat}} where S <: Distribution","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1034""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Distribution, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/MixedModels.jl
src/lib/array.jl,getindex,mtsig,"Tuple{Partial{<:AbstractArray{T}}, Vararg{Const{<:Integer}}} where T","Tuple{Partial{var""##ANON_TV#1693""} where var""##ANON_TV#1693"" <: AbstractArray{T}, Vararg{Const{var""##ANON_TV#1694""} where var""##ANON_TV#1694"" <: Integer}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1693""), :(Union{}), :(AbstractArray{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1694""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Mjolnir.jl
src/Options.jl,Options,mtsig,"Tuple{Vararg{Pair{Symbol, <:Any}}}","Tuple{Vararg{Pair{Symbol, var""##ANON_TV#1392""} where var""##ANON_TV#1392"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1392""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ModelBaseEcon.jl
src/Options.jl,Options,mtsig,"Tuple{Vararg{Pair{<:AbstractString, <:Any}}}","Tuple{Vararg{(Pair{var""##ANON_TV#1393"", var""##ANON_TV#1394""} where var""##ANON_TV#1393"" <: AbstractString) where var""##ANON_TV#1394"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1393""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1394""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ModelBaseEcon.jl
src/Documentation.jl,commonprefix,mtsig,Tuple{Vararg{Set{<:AbstractString}}},"Tuple{Vararg{Set{var""##ANON_TV#1744""} where var""##ANON_TV#1744"" <: AbstractString}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1744""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ModelicaScriptingTools.jl
src/Documentation.jl,commonhierarchy,mtsig,"Tuple{Vararg{Union{AbstractString, Set{<:AbstractString}}}}","Tuple{Vararg{Union{AbstractString, Set{var""##ANON_TV#1747""} where var""##ANON_TV#1747"" <: AbstractString}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1747""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ModelicaScriptingTools.jl
src/bipartite_graph.jl,Matching,mtsig,"(Tuple{V} where V <: AbstractVector{Union{U, Int}}) where U","(Tuple{V} where V <: AbstractVector{Union{U, Int}}) where U","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V, :(Union{}), :(AbstractVector{Union{U, Int}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:U, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/ModelingToolkit.jl
src/zygote.jl,Zygote.accum,mtsig,"Tuple{AbstractArray{<:SizedVector}, Vararg{AbstractArray{<:SVector}}}","Tuple{AbstractArray{var""##ANON_TV#2513""} where var""##ANON_TV#2513"" <: SizedVector, Vararg{AbstractArray{var""##ANON_TV#2514""} where var""##ANON_TV#2514"" <: SVector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2513""), :(Union{}), :SizedVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2514""), :(Union{}), :SVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Molly.jl
src/zygote.jl,Zygote.accum,mtsig,"Tuple{AbstractArray{<:SVector}, Vararg{AbstractArray{<:SizedVector}}}","Tuple{AbstractArray{var""##ANON_TV#2515""} where var""##ANON_TV#2515"" <: SVector, Vararg{AbstractArray{var""##ANON_TV#2516""} where var""##ANON_TV#2516"" <: SizedVector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2515""), :(Union{}), :SVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2516""), :(Union{}), :SizedVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Molly.jl
src/zygote.jl,Zygote.z2d,mtsig,"Tuple{AbstractArray{Union{Nothing, Atom{T, T, T, T}}}, AbstractArray{Atom{T, T, T, T}}} where T","Tuple{AbstractArray{Union{Nothing, Atom{T, T, T, T}}}, AbstractArray{Atom{T, T, T, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Molly.jl
src/zygote.jl,Base.zero,mtsig,"(Tuple{Type{Union{Nothing, SizedVector{D, T, Vector{T}}}}} where T) where D","(Tuple{Type{Union{Nothing, SizedVector{D, T, Vector{T}}}}} where T) where D","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/Molly.jl
src/MultidimensionalTools.jl,reshape_as_required,mtsig,"(Tuple{Array{T, N}, T, Vararg{Union{NTuple{N, Int}, CartesianIndex{N}}}} where N) where T","(Tuple{Array{T, N}, T, Vararg{Union{NTuple{N, Int}, CartesianIndex{N}}}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/MultidimensionalTools.jl
src/multilayerdigraph.jl,<NOT A FUNSIG>,tyassorann,"Vector{Vector{HalfEdge{<:MultilayerVertex, <:Union{Nothing, U}}}}","Vector{Vector{(HalfEdge{var""##ANON_TV#1256"", var""##ANON_TV#1257""} where var""##ANON_TV#1256"" <: MultilayerVertex) where var""##ANON_TV#1257"" <: Union{Nothing, U}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1256""), :(Union{}), :MultilayerVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1257""), :(Union{}), :(Union{Nothing, U}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MultilayerGraphs.jl
src/multilayerdigraph.jl,<NOT A FUNSIG>,tyassorann,"Vector{Vector{HalfEdge{<:MultilayerVertex, <:Union{Nothing, U}}}}","Vector{Vector{(HalfEdge{var""##ANON_TV#1258"", var""##ANON_TV#1259""} where var""##ANON_TV#1258"" <: MultilayerVertex) where var""##ANON_TV#1259"" <: Union{Nothing, U}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1258""), :(Union{}), :MultilayerVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1259""), :(Union{}), :(Union{Nothing, U}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MultilayerGraphs.jl
src/multilayergraph.jl,<NOT A FUNSIG>,tyassorann,"Vector{Vector{HalfEdge{<:MultilayerVertex, <:Union{Nothing, U}}}}","Vector{Vector{(HalfEdge{var""##ANON_TV#1275"", var""##ANON_TV#1276""} where var""##ANON_TV#1275"" <: MultilayerVertex) where var""##ANON_TV#1276"" <: Union{Nothing, U}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1275""), :(Union{}), :MultilayerVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1276""), :(Union{}), :(Union{Nothing, U}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MultilayerGraphs.jl
src/special_multilayergraphs/node_aligned_edge_colored/node_aligned_edge_colored_di_graph.jl,<NOT A FUNSIG>,tyassorann,"Vector{Vector{HalfEdge{<:MultilayerVertex, <:Union{Nothing, U}}}}","Vector{Vector{(HalfEdge{var""##ANON_TV#1312"", var""##ANON_TV#1313""} where var""##ANON_TV#1312"" <: MultilayerVertex) where var""##ANON_TV#1313"" <: Union{Nothing, U}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1312""), :(Union{}), :MultilayerVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1313""), :(Union{}), :(Union{Nothing, U}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MultilayerGraphs.jl
src/special_multilayergraphs/node_aligned_edge_colored/node_aligned_edge_colored_di_graph.jl,<NOT A FUNSIG>,tyassorann,"Vector{Vector{HalfEdge{<:MultilayerVertex, <:Union{Nothing, U}}}}","Vector{Vector{(HalfEdge{var""##ANON_TV#1314"", var""##ANON_TV#1315""} where var""##ANON_TV#1314"" <: MultilayerVertex) where var""##ANON_TV#1315"" <: Union{Nothing, U}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1314""), :(Union{}), :MultilayerVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1315""), :(Union{}), :(Union{Nothing, U}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MultilayerGraphs.jl
src/special_multilayergraphs/node_aligned_edge_colored/node_aligned_edge_colored_graph.jl,<NOT A FUNSIG>,tyassorann,"Vector{Vector{HalfEdge{<:MultilayerVertex, <:Union{Nothing, U}}}}","Vector{Vector{(HalfEdge{var""##ANON_TV#1324"", var""##ANON_TV#1325""} where var""##ANON_TV#1324"" <: MultilayerVertex) where var""##ANON_TV#1325"" <: Union{Nothing, U}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1324""), :(Union{}), :MultilayerVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1325""), :(Union{}), :(Union{Nothing, U}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MultilayerGraphs.jl
src/subgraphs/layer.jl,Layer,mtsig,"((((Tuple{Symbol, Vector{Union{V, N}}, Int64, G, Type{U}, Function, Function, Function, Bool} where N <: Node) where V <: MultilayerVertex{nothing}) where G <: AbstractGraph{T}) where U <: Real) where T <: Integer","((((Tuple{Symbol, Vector{Union{V, N}}, Int64, G, Type{U}, Function, Function, Function, Bool} where N <: Node) where V <: MultilayerVertex{nothing}) where G <: AbstractGraph{T}) where U <: Real) where T <: Integer","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Node, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :(MultilayerVertex{nothing}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:G, :(Union{}), :(AbstractGraph{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:U, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,false,true,false,false,true,true,data/ta-info/all/MultilayerGraphs.jl
src/ModalInterlace.jl,sublayout,mtsig,"Tuple{Union{ModalInterlaceLayout, LazyModalInterlaceLayout}, Type{<:NTuple{2, BlockSlice{<:BlockOneTo}}}}","Tuple{Union{ModalInterlaceLayout, LazyModalInterlaceLayout}, Type{var""##ANON_TV#1631""} where var""##ANON_TV#1631"" <: NTuple{2, BlockSlice{var""##ANON_TV#1632""} where var""##ANON_TV#1632"" <: BlockOneTo}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1632""), :(Union{}), :BlockOneTo, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1631""), :(Union{}), :(NTuple{2, BlockSlice{var""##ANON_TV#1632""} where var""##ANON_TV#1632"" <: BlockOneTo}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MultivariateOrthogonalPolynomials.jl
src/alignedmapping.jl,<NOT A FUNSIG>,tyassorann,"Dict{K, Union{AbstractArray{<:Number}, AbstractArray{Union{Missing, T}} where T <: Number, DataFrame}}","Dict{K, Union{AbstractArray{var""##ANON_TV#1724""} where var""##ANON_TV#1724"" <: Number, AbstractArray{Union{Missing, T}} where T <: Number, DataFrame}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1724""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar))]",false,false,2,true,true,false,false,true,false,true,true,data/ta-info/all/Muon.jl
src/ModelDescription.jl,<NOT A FUNSIG>,tyassorann,Vector{Vector{E} where E <: AbstractElement},Vector{Vector{E} where E <: AbstractElement},"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:E, :(Union{}), :AbstractElement, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Muscade.jl
src/dispatch.jl,LinearAlgebra.diagm_container,mtsig,"Tuple{Any, Vararg{Pair{<:Integer, <:AbstractVector{<:AbstractMutable}}}}","Tuple{Any, Vararg{(Pair{var""##ANON_TV#1728"", var""##ANON_TV#1729""} where var""##ANON_TV#1728"" <: Integer) where var""##ANON_TV#1729"" <: (AbstractVector{var""##ANON_TV#1730""} where var""##ANON_TV#1730"" <: AbstractMutable)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1730""), :(Union{}), :AbstractMutable, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1728""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1729""), :(Union{}), :(AbstractVector{var""##ANON_TV#1730""} where var""##ANON_TV#1730"" <: AbstractMutable), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/MutableArithmetics.jl
src/implementations/Rational.jl,buffer_for,mtsig,"Tuple{AddSubMul, Vararg{Type{<:Rational}, N}} where N","Tuple{AddSubMul, Vararg{Type{var""##ANON_TV#1937""} where var""##ANON_TV#1937"" <: Rational, N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1937""), :(Union{}), :Rational, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/MutableArithmetics.jl
src/implementations/SparseArrays.jl,operate!,mtsig,"(Tuple{typeof(add_mul), VecOrMat{T}, _TransposeOrAdjoint{<:Any, <:_SparseMat}, AbstractVecOrMat, Vararg{Union{T, Scaling}, N}} where N) where T","(Tuple{typeof(add_mul), VecOrMat{T}, (_TransposeOrAdjoint{var""##ANON_TV#1940"", var""##ANON_TV#1941""} where var""##ANON_TV#1940"" <: Any) where var""##ANON_TV#1941"" <: _SparseMat, AbstractVecOrMat, Vararg{Union{T, Scaling}, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1940""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1941""), :(Union{}), :_SparseMat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,false,true,true,data/ta-info/all/MutableArithmetics.jl
src/implementations/SparseArrays.jl,operate!,mtsig,"(Tuple{typeof(add_mul), VecOrMat{T}, _SparseMat, AbstractVecOrMat, Vararg{Union{T, Scaling}, N}} where N) where T","(Tuple{typeof(add_mul), VecOrMat{T}, _SparseMat, AbstractVecOrMat, Vararg{Union{T, Scaling}, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/MutableArithmetics.jl
src/implementations/SparseArrays.jl,operate!,mtsig,"(Tuple{typeof(add_mul), Matrix{T}, AbstractMatrix, _SparseMat, Vararg{Union{T, Scaling}, N}} where N) where T","(Tuple{typeof(add_mul), Matrix{T}, AbstractMatrix, _SparseMat, Vararg{Union{T, Scaling}, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/MutableArithmetics.jl
src/implementations/SparseArrays.jl,operate!,mtsig,"(Tuple{typeof(add_mul), Matrix{T}, AbstractMatrix, _TransposeOrAdjoint{<:Any, <:_SparseMat}, Vararg{Union{T, Scaling}, N}} where N) where T","(Tuple{typeof(add_mul), Matrix{T}, AbstractMatrix, (_TransposeOrAdjoint{var""##ANON_TV#1942"", var""##ANON_TV#1943""} where var""##ANON_TV#1942"" <: Any) where var""##ANON_TV#1943"" <: _SparseMat, Vararg{Union{T, Scaling}, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1942""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1943""), :(Union{}), :_SparseMat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,false,true,true,data/ta-info/all/MutableArithmetics.jl
src/implementations/SparseArrays.jl,operate!,mtsig,"(Tuple{typeof(add_mul), _SparseMat{T}, _SparseMat, _SparseMat, Vararg{Union{T, Scaling}, N}} where N) where T","(Tuple{typeof(add_mul), _SparseMat{T}, _SparseMat, _SparseMat, Vararg{Union{T, Scaling}, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/MutableArithmetics.jl
src/implementations/SparseArrays.jl,operate!,mtsig,"(Tuple{typeof(add_mul), _SparseMat{T}, _SparseMat, _TransposeOrAdjoint{<:Any, <:_SparseMat}, Vararg{Union{T, Scaling}, N}} where N) where T","(Tuple{typeof(add_mul), _SparseMat{T}, _SparseMat, (_TransposeOrAdjoint{var""##ANON_TV#1946"", var""##ANON_TV#1947""} where var""##ANON_TV#1946"" <: Any) where var""##ANON_TV#1947"" <: _SparseMat, Vararg{Union{T, Scaling}, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1946""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1947""), :(Union{}), :_SparseMat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,false,true,true,data/ta-info/all/MutableArithmetics.jl
src/implementations/SparseArrays.jl,operate!,mtsig,"(Tuple{typeof(add_mul), _SparseMat{T}, _TransposeOrAdjoint{<:Any, <:_SparseMat}, _SparseMat, Vararg{Union{T, Scaling}, N}} where N) where T","(Tuple{typeof(add_mul), _SparseMat{T}, (_TransposeOrAdjoint{var""##ANON_TV#1948"", var""##ANON_TV#1949""} where var""##ANON_TV#1948"" <: Any) where var""##ANON_TV#1949"" <: _SparseMat, _SparseMat, Vararg{Union{T, Scaling}, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1948""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1949""), :(Union{}), :_SparseMat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,false,true,true,data/ta-info/all/MutableArithmetics.jl
src/implementations/SparseArrays.jl,operate!,mtsig,"(Tuple{typeof(add_mul), _SparseMat{T}, _TransposeOrAdjoint{<:Any, <:_SparseMat}, _TransposeOrAdjoint{<:Any, <:_SparseMat}, Vararg{Union{T, Scaling}, N}} where N) where T","(Tuple{typeof(add_mul), _SparseMat{T}, (_TransposeOrAdjoint{var""##ANON_TV#1950"", var""##ANON_TV#1951""} where var""##ANON_TV#1950"" <: Any) where var""##ANON_TV#1951"" <: _SparseMat, (_TransposeOrAdjoint{var""##ANON_TV#1952"", var""##ANON_TV#1953""} where var""##ANON_TV#1952"" <: Any) where var""##ANON_TV#1953"" <: _SparseMat, Vararg{Union{T, Scaling}, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1950""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1951""), :(Union{}), :_SparseMat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1952""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1953""), :(Union{}), :_SparseMat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,6,true,false,false,true,false,false,true,true,data/ta-info/all/MutableArithmetics.jl
src/execute.jl,cast,mtsig,"Tuple{Type{Union{Missing, T}}, Any, Any} where T","Tuple{Type{Union{Missing, T}}, Any, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/MySQL.jl
src/load.jl,sqltype,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/MySQL.jl
src/prepare.jl,getvalue,mtsig,"Tuple{Any, Any, Any, Any, Type{Union{T, Missing}}} where T","Tuple{Any, Any, Any, Any, Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/MySQL.jl
src/prepare.jl,defaultvalue,mtsig,"Tuple{Type{Union{Missing, T}}} where T","Tuple{Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/MySQL.jl
src/cfvariable.jl,defVar,mtsig,"(Tuple{NCDataset, Any, AbstractArray{Union{Missing, nctype}, N}, Any, Vararg{Any}} where nctype <: Union{Int8, UInt8, Int16, Int32, Int64, Float32, Float64}) where N","(Tuple{NCDataset, Any, AbstractArray{Union{Missing, nctype}, N}, Any, Vararg{Any}} where nctype <: Union{Int8, UInt8, Int16, Int32, Int64, Float32, Float64}) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:nctype, :(Union{}), :(Union{Int8, UInt8, Int16, Int32, Int64, Float32, Float64}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/NCDatasets.jl
src/cfvariable.jl,Base.getindex,mtsig,"Tuple{Union{CFVariable, Variable, MFVariable, SubVariable}, Vararg{Union{Int, Colon, AbstractRange{<:Integer}, Vector{Int}}}}","Tuple{Union{CFVariable, Variable, MFVariable, SubVariable}, Vararg{Union{Int, Colon, AbstractRange{var""##ANON_TV#2357""} where var""##ANON_TV#2357"" <: Integer, Vector{Int}}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2357""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NCDatasets.jl
src/cfvariable.jl,load!,mtsig,"(Tuple{Union{CFVariable{T, N}, MFCFVariable{T, N}, SubVariable{T, N}}, Any, Any, Vararg{Union{Integer, AbstractRange{<:Integer}, Colon}}} where N) where T","(Tuple{Union{CFVariable{T, N}, MFCFVariable{T, N}, SubVariable{T, N}}, Any, Any, Vararg{Union{Integer, AbstractRange{var""##ANON_TV#2358""} where var""##ANON_TV#2358"" <: Integer, Colon}}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2358""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/NCDatasets.jl
src/defer.jl,Base.getindex,mtsig,"Tuple{DeferVariable, Vararg{Union{Int, Colon, AbstractRange{<:Integer}}}}","Tuple{DeferVariable, Vararg{Union{Int, Colon, AbstractRange{var""##ANON_TV#2359""} where var""##ANON_TV#2359"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2359""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NCDatasets.jl
src/multifile.jl,Base.getindex,mtsig,"Tuple{MFVariable, Vararg{Union{Int, Colon, AbstractRange{<:Integer}}}}","Tuple{MFVariable, Vararg{Union{Int, Colon, AbstractRange{var""##ANON_TV#2360""} where var""##ANON_TV#2360"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2360""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NCDatasets.jl
src/multifile.jl,Base.setindex!,mtsig,"Tuple{MFVariable, Any, Vararg{Union{Int, Colon, AbstractRange{<:Integer}}}}","Tuple{MFVariable, Any, Vararg{Union{Int, Colon, AbstractRange{var""##ANON_TV#2361""} where var""##ANON_TV#2361"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2361""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NCDatasets.jl
src/subvariable.jl,Base.getindex,mtsig,"Tuple{SubVariable, Vararg{Union{Int, Colon, AbstractRange{<:Integer}}}}","Tuple{SubVariable, Vararg{Union{Int, Colon, AbstractRange{var""##ANON_TV#2362""} where var""##ANON_TV#2362"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2362""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NCDatasets.jl
src/variable.jl,nomissing,mtsig,"(Tuple{AbstractArray{Union{T, Missing}, N}} where N) where T","(Tuple{AbstractArray{Union{T, Missing}, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/NCDatasets.jl
src/variable.jl,nomissing,mtsig,"(Tuple{Array{Union{T, Missing}, N}, Any} where N) where T","(Tuple{Array{Union{T, Missing}, N}, Any} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/NCDatasets.jl
src/variable.jl,Base.getindex,mtsig,"(Tuple{Variable{T, N}, Vararg{Union{Int, Colon, AbstractRange{<:Integer}}}} where N) where T","(Tuple{Variable{T, N}, Vararg{Union{Int, Colon, AbstractRange{var""##ANON_TV#2363""} where var""##ANON_TV#2363"" <: Integer}}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2363""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/NCDatasets.jl
src/variable.jl,Base.setindex!,mtsig,"Tuple{Variable, Any, Vararg{Union{Int, Colon, AbstractRange{<:Integer}}}}","Tuple{Variable, Any, Vararg{Union{Int, Colon, AbstractRange{var""##ANON_TV#2364""} where var""##ANON_TV#2364"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2364""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NCDatasets.jl
src/Endpoint.jl,for_assignment,mtsig,"Tuple{Type{Union{Missing, T}}, Missing} where T <: Union{AbstractString, Number, TimeType}","Tuple{Type{Union{Missing, T}}, Missing} where T <: Union{AbstractString, Number, TimeType}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{AbstractString, Number, TimeType}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/NCEI.jl
src/Endpoint.jl,for_assignment,mtsig,"Tuple{Type{Union{Missing, T}}, AbstractString} where T <: AbstractString","Tuple{Type{Union{Missing, T}}, AbstractString} where T <: AbstractString","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/NCEI.jl
src/Endpoint.jl,for_assignment,mtsig,"Tuple{Type{Union{Missing, T}}, Number} where T <: Number","Tuple{Type{Union{Missing, T}}, Number} where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/NCEI.jl
src/Endpoint.jl,for_assignment,mtsig,"Tuple{Type{Union{Missing, T}}, AbstractString} where T <: TimeType","Tuple{Type{Union{Missing, T}}, AbstractString} where T <: TimeType","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :TimeType, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/NCEI.jl
src/abstractarray/to_shape.jl,to_shape,mtsig,Tuple{Tuple{Vararg{Vector{<:Integer}}}},"Tuple{Tuple{Vararg{Vector{var""##ANON_TV#1942""} where var""##ANON_TV#1942"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1942""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NDTensors.jl
src/gather.jl,gather,mtsig,"(Tuple{AbstractArray{Tsrc, Nsrc}, AbstractVector{<:Integer}, AbstractVector{<:Integer}, Vararg{AbstractVector{<:Integer}}} where Tsrc) where Nsrc","(Tuple{AbstractArray{Tsrc, Nsrc}, AbstractVector{var""##ANON_TV#1756""} where var""##ANON_TV#1756"" <: Integer, AbstractVector{var""##ANON_TV#1757""} where var""##ANON_TV#1757"" <: Integer, Vararg{AbstractVector{var""##ANON_TV#1758""} where var""##ANON_TV#1758"" <: Integer}} where Tsrc) where Nsrc","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1756""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1757""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1758""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Tsrc, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Nsrc, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,true,true,true,true,true,true,data/ta-info/all/NNlib.jl
src/NPZ.jl,writele,mtsig,"Tuple{IO, AbstractVector{CodeUnits{UInt8, <:Any}}}","Tuple{IO, AbstractVector{CodeUnits{UInt8, var""##ANON_TV#1911""} where var""##ANON_TV#1911"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1911""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NPZ.jl
test/sensitivity.jl,<NOT A FUNSIG>,tyassorann,"Vararg{Union{Real, Node{<:Real}}}","Vararg{Union{Real, Node{var""##ANON_TV#2513""} where var""##ANON_TV#2513"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2513""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Nabla.jl
test/sensitivity.jl,<NOT A FUNSIG>,tyassorann,"Vararg{Union{Real, Node{<:Real}}}","Vararg{Union{Real, Node{var""##ANON_TV#2515""} where var""##ANON_TV#2515"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2515""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Nabla.jl
test/sensitivity.jl,<NOT A FUNSIG>,tyassorann,"Vararg{Union{V where V <: Real, Node{<:V where V <: Real}}}","Vararg{Union{V where V <: Real, Node{var""##ANON_TV#2516""} where var""##ANON_TV#2516"" <: (V where V <: Real)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCUnion, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(:V, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2516""), :(Union{}), :(V where V <: Real), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Nabla.jl
test/sensitivity.jl,<NOT A FUNSIG>,tyassorann,"Vararg{Union{$arg_type, Node{<:$arg_type}}}","Vararg{Union{$arg_type, Node{var""##ANON_TV#2517""} where var""##ANON_TV#2517"" <: $arg_type}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2517""), :(Union{}), :($(Expr(:$, :arg_type))), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/Nabla.jl
test/sensitivity.jl,<NOT A FUNSIG>,tyassorann,"Vararg{Union{$arg_type, Node{<:$arg_type}}}","Vararg{Union{$arg_type, Node{var""##ANON_TV#2518""} where var""##ANON_TV#2518"" <: $arg_type}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2518""), :(Union{}), :($(Expr(:$, :arg_type))), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/Nabla.jl
test/code_transformation/differentiable.jl,<NOT A FUNSIG>,tyassorann,"Vararg{Union{Int64, Node{<:Int64}}}","Vararg{Union{Int64, Node{var""##ANON_TV#2519""} where var""##ANON_TV#2519"" <: Int64}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2519""), :(Union{}), :Int64, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Nabla.jl
src/api/size.jl,Δnin!,mtsig,"Tuple{Vararg{Union{Pair{<:AbstractVertex}, AbstractDict{<:AbstractVertex}}}}","Tuple{Vararg{Union{Pair{var""##ANON_TV#1738""} where var""##ANON_TV#1738"" <: AbstractVertex, AbstractDict{var""##ANON_TV#1739""} where var""##ANON_TV#1739"" <: AbstractVertex}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1738""), :(Union{}), :AbstractVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1739""), :(Union{}), :AbstractVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/NaiveNASlib.jl
src/api/size.jl,Δnout!,mtsig,"Tuple{Vararg{Union{Pair{<:AbstractVertex}, AbstractDict{<:AbstractVertex}}}}","Tuple{Vararg{Union{Pair{var""##ANON_TV#1740""} where var""##ANON_TV#1740"" <: AbstractVertex, AbstractDict{var""##ANON_TV#1741""} where var""##ANON_TV#1741"" <: AbstractVertex}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1740""), :(Union{}), :AbstractVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1741""), :(Union{}), :AbstractVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/NaiveNASlib.jl
src/api/size.jl,Δnin!,mtsig,"Tuple{Any, Vararg{Union{Pair{<:AbstractVertex}, AbstractDict{<:AbstractVertex}}}}","Tuple{Any, Vararg{Union{Pair{var""##ANON_TV#1742""} where var""##ANON_TV#1742"" <: AbstractVertex, AbstractDict{var""##ANON_TV#1743""} where var""##ANON_TV#1743"" <: AbstractVertex}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1742""), :(Union{}), :AbstractVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1743""), :(Union{}), :AbstractVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/NaiveNASlib.jl
src/api/size.jl,Δnout!,mtsig,"Tuple{Any, Vararg{Union{Pair{<:AbstractVertex}, AbstractDict{<:AbstractVertex}}}}","Tuple{Any, Vararg{Union{Pair{var""##ANON_TV#1744""} where var""##ANON_TV#1744"" <: AbstractVertex, AbstractDict{var""##ANON_TV#1745""} where var""##ANON_TV#1745"" <: AbstractVertex}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1744""), :(Union{}), :AbstractVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1745""), :(Union{}), :AbstractVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/NaiveNASlib.jl
src/mutation/graph.jl,all_in_Δsize_graph,mtsig,"Tuple{Tuple{Vararg{Pair{<:AbstractVertex}}}, Direction, Any}","Tuple{Tuple{Vararg{Pair{var""##ANON_TV#1752""} where var""##ANON_TV#1752"" <: AbstractVertex}}, Direction, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1752""), :(Union{}), :AbstractVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NaiveNASlib.jl
src/mutation/jumpnorm.jl,SumNorm,mtsig,"Tuple{Vararg{Pair{<:Real, <:JuMPNorm}}}","Tuple{Vararg{(Pair{var""##ANON_TV#1753"", var""##ANON_TV#1754""} where var""##ANON_TV#1753"" <: Real) where var""##ANON_TV#1754"" <: JuMPNorm}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1753""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1754""), :(Union{}), :JuMPNorm, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/NaiveNASlib.jl
src/mutation/sizestrategies.jl,Δnout_err_info,mtsig,"Tuple{Any, Vararg{Union{<:Maybe{Int}, <:Pair}}}","Tuple{Any, Vararg{(Union{var""##ANON_TV#1787"", var""##ANON_TV#1788""} where var""##ANON_TV#1787"" <: Maybe{Int}) where var""##ANON_TV#1788"" <: Pair}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1787""), :(Union{}), :(Maybe{Int}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1788""), :(Union{}), :Pair, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/NaiveNASlib.jl
src/mutation/sizestrategies.jl,Δnin2Δnout,mtsig,Tuple{Vararg{Pair{<:AbstractVertex}}},"Tuple{Vararg{Pair{var""##ANON_TV#1789""} where var""##ANON_TV#1789"" <: AbstractVertex}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1789""), :(Union{}), :AbstractVertex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NaiveNASlib.jl
src/name_core.jl,unify_names_longest,mtsig,"Tuple{Any, Any, Vararg{NTuple{Nd, Symbol} where Nd, N}} where N","Tuple{Any, Any, Vararg{NTuple{Nd, Symbol} where Nd, N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:Nd, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/NamedDims.jl
src/name_core.jl,unify_names_shortest,mtsig,"Tuple{Any, Any, Vararg{NTuple{Nd, Symbol} where Nd, N}} where N","Tuple{Any, Any, Vararg{NTuple{Nd, Symbol} where Nd, N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:Nd, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/NamedDims.jl
build/types.jl,<NOT A FUNSIG>,tyassorann,"NamedTuple{inames, <:Tuple{Vararg{AbstractVector{<:Real}}}} where inames","(NamedTuple{inames, var""##ANON_TV#1632""} where var""##ANON_TV#1632"" <: Tuple{Vararg{AbstractVector{var""##ANON_TV#1633""} where var""##ANON_TV#1633"" <: Real}}) where inames","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1633""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1632""), :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#1633""} where var""##ANON_TV#1633"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:inames, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/NamedTrajectories.jl
build/types.jl,<NOT A FUNSIG>,tyassorann,"NamedTuple{fnames, <:Tuple{Vararg{AbstractVector{<:Real}}}} where fnames","(NamedTuple{fnames, var""##ANON_TV#1634""} where var""##ANON_TV#1634"" <: Tuple{Vararg{AbstractVector{var""##ANON_TV#1635""} where var""##ANON_TV#1635"" <: Real}}) where fnames","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1635""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1634""), :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#1635""} where var""##ANON_TV#1635"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:fnames, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/NamedTrajectories.jl
build/types.jl,<NOT A FUNSIG>,tyassorann,"NamedTuple{gnames, <:Tuple{Vararg{AbstractVector{<:Real}}}} where gnames","(NamedTuple{gnames, var""##ANON_TV#1636""} where var""##ANON_TV#1636"" <: Tuple{Vararg{AbstractVector{var""##ANON_TV#1637""} where var""##ANON_TV#1637"" <: Real}}) where gnames","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1637""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1636""), :(Union{}), :(Tuple{Vararg{AbstractVector{var""##ANON_TV#1637""} where var""##ANON_TV#1637"" <: Real}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:gnames, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/NamedTrajectories.jl
other/structintersect.jl,structintersect,mtsig,"Tuple{NamedTuple{an}, Vararg{Union{NamedTuple, Type{<:NamedTuple}}}} where an","Tuple{NamedTuple{an}, Vararg{Union{NamedTuple, Type{var""##ANON_TV#2366""} where var""##ANON_TV#2366"" <: NamedTuple}}} where an","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2366""), :(Union{}), :NamedTuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:an, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/NamedTupleTools.jl
src/materialdb.jl,Base.findall,mtsig,"Tuple{SQLite.DB, Type{Material}, Vararg{Pair{Element, <:Tuple{<:Real, <:Real}}}}","Tuple{SQLite.DB, Type{Material}, Vararg{Pair{Element, var""##ANON_TV#1867""} where var""##ANON_TV#1867"" <: ((Tuple{var""##ANON_TV#1868"", var""##ANON_TV#1869""} where var""##ANON_TV#1868"" <: Real) where var""##ANON_TV#1869"" <: Real)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1868""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1869""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1867""), :(Union{}), :((Tuple{var""##ANON_TV#1868"", var""##ANON_TV#1869""} where var""##ANON_TV#1868"" <: Real) where var""##ANON_TV#1869"" <: Real), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/NeXLCore.jl
src/stoichiometry.jl,asoxide,mtsig,"Tuple{Vararg{Pair{Element, <:AbstractFloat}}, Any, Dict{Element, <:AbstractFloat}}","Tuple{Vararg{Pair{Element, var""##ANON_TV#1894""} where var""##ANON_TV#1894"" <: AbstractFloat}, Any, Dict{Element, var""##ANON_TV#1895""} where var""##ANON_TV#1895"" <: AbstractFloat}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1894""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1895""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/NeXLCore.jl
src/stoichiometry.jl,obystoichiometry,mtsig,"Tuple{Vararg{Pair{Element, <:AbstractFloat}}, Any}","Tuple{Vararg{Pair{Element, var""##ANON_TV#1899""} where var""##ANON_TV#1899"" <: AbstractFloat}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1899""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NeXLCore.jl
src/gadflysupport.jl,Gadfly.plot,mtsig,"Tuple{AbstractVector{Spectrum{<:Real}}, Vararg{Any}}","Tuple{AbstractVector{Spectrum{var""##ANON_TV#1781""} where var""##ANON_TV#1781"" <: Real}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1781""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NeXLSpectrum.jl
src/gadflysupport.jl,Gadfly.plot,mtsig,"Tuple{Vararg{Spectrum{<:Real}}, Union{AbstractVector, AbstractSet, Tuple, NTuple, Material}, AbstractVector, AbstractVector, AbstractVector{CharXRay}, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any}","Tuple{Vararg{Spectrum{var""##ANON_TV#1782""} where var""##ANON_TV#1782"" <: Real}, Union{AbstractVector, AbstractSet, Tuple, NTuple, Material}, AbstractVector, AbstractVector, AbstractVector{CharXRay}, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1782""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NeXLSpectrum.jl
src/labeledvalues.jl,LabeledValues,mtsig,"Tuple{Vararg{Pair{<:Label, Float64}}}","Tuple{Vararg{Pair{var""##ANON_TV#1794"", Float64} where var""##ANON_TV#1794"" <: Label}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1794""), :(Union{}), :Label, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NeXLUncertainties.jl
src/uncertainValues.jl,uvs,mtsig,"Tuple{Vararg{Pair{<:Label, UncertainValue}}}","Tuple{Vararg{Pair{var""##ANON_TV#1803"", UncertainValue} where var""##ANON_TV#1803"" <: Label}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1803""), :(Union{}), :Label, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NeXLUncertainties.jl
src/Oscillation.jl,masssquareddiff!,mtsig,"Tuple{OscillationParameters, Vararg{Tuple{Pair{<:Integer, <:Integer}, <:Number}}}","Tuple{OscillationParameters, Vararg{Tuple{(Pair{var""##ANON_TV#2605"", var""##ANON_TV#2606""} where var""##ANON_TV#2605"" <: Integer) where var""##ANON_TV#2606"" <: Integer, var""##ANON_TV#2607""} where var""##ANON_TV#2607"" <: Number}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2605""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2606""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2607""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Neurthino.jl
src/TypeDef.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Array{T, 2} where {T, N}}","Dict{Symbol, (Array{T, 2} where T) where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCInvar))]",false,false,2,true,false,true,true,true,true,true,true,data/ta-info/all/NumNN.jl
src/TypeDef.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Array{T, 2} where {T, N}}","Dict{Symbol, (Array{T, 2} where T) where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCInvar))]",false,false,2,true,false,true,true,true,true,true,true,data/ta-info/all/NumNN.jl
src/cnn/TypeDef.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Array{F, 4} where F}","Dict{Symbol, Array{F, 4} where F}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NumNN.jl
src/cnn/TypeDef.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Array{F, 4} where F}","Dict{Symbol, Array{F, 4} where F}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NumNN.jl
src/cnn/TypeDef.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Array{F, 3} where F}","Dict{Symbol, Array{F, 3} where F}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NumNN.jl
src/cnn/TypeDef.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Array{F, 3} where F}","Dict{Symbol, Array{F, 3} where F}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NumNN.jl
src/cnn/TypeDef.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Array{F, 5} where F}","Dict{Symbol, Array{F, 5} where F}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NumNN.jl
src/cnn/TypeDef.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Array{F, 5} where F}","Dict{Symbol, Array{F, 5} where F}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/NumNN.jl
src/load.jl,sqltype,mtsig,"Tuple{Any, Type{Union{T, Missing}}} where T","Tuple{Any, Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ODBC.jl
src/missing_data.jl,project,mtsig,"Tuple{Diagonal{T}, AbstractMatrix{T}, ColVecs{Union{Missing, T}}, T, Diagonal{T}} where T <: Real","Tuple{Diagonal{T}, AbstractMatrix{T}, ColVecs{Union{Missing, T}}, T, Diagonal{T}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/OILMMs.jl
src/missing_data.jl,regulariser,mtsig,"Tuple{Diagonal{T}, AbstractMatrix{T}, T, ColVecs{Union{Missing, T}}} where T <: Real","Tuple{Diagonal{T}, AbstractMatrix{T}, T, ColVecs{Union{Missing, T}}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/OILMMs.jl
src/missing_data.jl,compute_patterns,mtsig,"Tuple{AbstractMatrix{Union{Missing, T}} where T <: Real}","Tuple{AbstractMatrix{Union{Missing, T}} where T <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/OILMMs.jl
src/Core.jl,_tovec,mtsig,"((Tuple{NTuple{N, NTuple{M, LT} where M}, NTuple{K, LT}} where LT) where K) where N","((Tuple{NTuple{N, NTuple{M, LT} where M}, NTuple{K, LT}} where LT) where K) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:LT, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/OMEinsum.jl
src/cueinsum.jl,get_output_array,mtsig,"Tuple{NTuple{N, DenseCuArray{<:Any, M} where M}, Any, Any} where N","Tuple{NTuple{N, (DenseCuArray{var""##ANON_TV#1833"", M} where var""##ANON_TV#1833"" <: Any) where M}, Any, Any} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1833""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/OMEinsum.jl
src/cueinsum.jl,get_output_array,mtsig,"(Tuple{NTuple{N, DenseCuArray{T, M} where M}, Any, Any} where N) where T","(Tuple{NTuple{N, DenseCuArray{T, M} where M}, Any, Any} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/OMEinsum.jl
src/cueinsum.jl,loop_einsum!,mtsig,"(((Tuple{EinCode, NTuple{N, DenseCuArray{<:Any, M} where M}, DenseCuArray{T, L}, Dict{LT}} where LT) where T) where L) where N","(((Tuple{EinCode, NTuple{N, (DenseCuArray{var""##ANON_TV#1835"", M} where var""##ANON_TV#1835"" <: Any) where M}, DenseCuArray{T, L}, Dict{LT}} where LT) where T) where L) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1835""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:LT, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,6,true,true,true,true,true,true,true,true,data/ta-info/all/OMEinsum.jl
src/loop_einsum.jl,loop_einsum,mtsig,"Tuple{EinCode, NTuple{N, AbstractArray{<:Any, M} where M}, Any} where N","Tuple{EinCode, NTuple{N, (AbstractArray{var""##ANON_TV#1836"", M} where var""##ANON_TV#1836"" <: Any) where M}, Any} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1836""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/OMEinsum.jl
src/loop_einsum.jl,loop_einsum!,mtsig,"((Tuple{EinCode, NTuple{N, AbstractArray{<:Any, M} where M}, AbstractArray{T, L}, Any} where T) where L) where N","((Tuple{EinCode, NTuple{N, (AbstractArray{var""##ANON_TV#1837"", M} where var""##ANON_TV#1837"" <: Any) where M}, AbstractArray{T, L}, Any} where T) where L) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1837""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,true,true,true,true,true,true,data/ta-info/all/OMEinsum.jl
src/loop_einsum.jl,get_output_array,mtsig,"(Tuple{NTuple{N, AbstractArray{T, M} where M}, Any, Any} where N) where T","(Tuple{NTuple{N, AbstractArray{T, M} where M}, Any, Any} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/OMEinsum.jl
src/loop_einsum.jl,get_output_array,mtsig,"Tuple{NTuple{N, AbstractArray{<:Any, M} where M}, Any, Any} where N","Tuple{NTuple{N, (AbstractArray{var""##ANON_TV#1838"", M} where var""##ANON_TV#1838"" <: Any) where M}, Any, Any} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1838""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/OMEinsum.jl
src/deserialize/graphbuilder.jl,CompGraphBuilder,mtsig,"Tuple{ONNX.GraphProto, Vararg{Pair{String, <:Tuple}}}","Tuple{ONNX.GraphProto, Vararg{Pair{String, var""##ANON_TV#2100""} where var""##ANON_TV#2100"" <: Tuple}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2100""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ONNXNaiveNASflux.jl
src/serialize/serialize.jl,modelproto,mtsig,"Tuple{Any, Vararg{Pair{String, <:Any}}, Any, Any, Any, Vararg{Any}}","Tuple{Any, Vararg{Pair{String, var""##ANON_TV#2104""} where var""##ANON_TV#2104"" <: Any}, Any, Any, Any, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2104""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ONNXNaiveNASflux.jl
src/serialize/serialize.jl,graphproto,mtsig,"Tuple{Any, Vararg{Pair{String, <:Any}}, Any}","Tuple{Any, Vararg{Pair{String, var""##ANON_TV#2107""} where var""##ANON_TV#2107"" <: Any}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2107""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ONNXNaiveNASflux.jl
test/runtests.jl,Base.getindex,mtsig,"Tuple{#= none:182 =# @like(IRandomIndexRead{>:I}), I} where I","Tuple{#= none:1 =# @like(IRandomIndexRead{var""##ANON_TV#2521""} where var""##ANON_TV#2521"" >: I), I} where I","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2521""), :I, :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCMCall, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:I, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCLoBnd, JuliaSub.TCMCall, JuliaSub.TCTuple), list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,true,false,true,data/ta-info/all/ObjectOriented.jl
test/runtests.jl,Base.setindex!,mtsig,"(Tuple{#= none:186 =# @like(IRandomIndexWrite{>:I, >:E}), I, E} where E) where I","(Tuple{#= none:1 =# @like((IRandomIndexWrite{var""##ANON_TV#2522"", var""##ANON_TV#2523""} where var""##ANON_TV#2522"" >: I) where var""##ANON_TV#2523"" >: E), I, E} where E) where I","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2522""), :I, :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCMCall, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2523""), :E, :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCMCall, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:E, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCLoBnd, JuliaSub.TCMCall, JuliaSub.TCTuple), list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:I, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCLoBnd, JuliaSub.TCWhere, JuliaSub.TCMCall, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,true,false,true,data/ta-info/all/ObjectOriented.jl
src/dataframe/observer.jl,observer,mtsig,"Tuple{Vararg{Pair{T, <:Function}}, Vararg{Any}} where T <: Union{Symbol, String}","Tuple{Vararg{Pair{T, var""##ANON_TV#1213""} where var""##ANON_TV#1213"" <: Function}, Vararg{Any}} where T <: Union{Symbol, String}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1213""), :(Union{}), :Function, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{Symbol, String}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/Observers.jl
src/Particles/Particles.jl,update_particle_properties!,mtsig,"(((((((((((((((Tuple{HydrostaticFreeSurfaceModel{TS, E, A, S, G, T, V, B, R, F, P, ContinuousFormBiogeochemistry{<:Any, <:Any, <:BiogeochemicalParticles}, U, C, Φ, K, AF}, Any} where AF) where K) where Φ) where C) where U) where P) where F) where R) where B) where V) where T) where G) where S) where A) where E) where TS","(((((((((((((((Tuple{HydrostaticFreeSurfaceModel{TS, E, A, S, G, T, V, B, R, F, P, ((ContinuousFormBiogeochemistry{var""##ANON_TV#2241"", var""##ANON_TV#2242"", var""##ANON_TV#2243""} where var""##ANON_TV#2241"" <: Any) where var""##ANON_TV#2242"" <: Any) where var""##ANON_TV#2243"" <: BiogeochemicalParticles, U, C, Φ, K, AF}, Any} where AF) where K) where Φ) where C) where U) where P) where F) where R) where B) where V) where T) where G) where S) where A) where E) where TS","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2241""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2242""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2243""), :(Union{}), :BiogeochemicalParticles, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:AF, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Φ, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:U, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:P, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:B, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:G, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:E, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TS, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,19,true,true,true,true,true,true,true,true,data/ta-info/all/OceanBioME.jl
src/OffsetArrays.jl,Base.mapreduce,mtsig,"Tuple{Any, Any, OffsetUnitRange{<:Integer}, Vararg{OffsetUnitRange{<:Integer}}, Vararg{Any}}","Tuple{Any, Any, OffsetUnitRange{var""##ANON_TV#2399""} where var""##ANON_TV#2399"" <: Integer, Vararg{OffsetUnitRange{var""##ANON_TV#2400""} where var""##ANON_TV#2400"" <: Integer}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2399""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2400""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/OffsetArrays.jl
test/customranges.jl,Base.reshape,mtsig,"Tuple{$Z, Tuple{Union{Int, AbstractUnitRange{<:Integer}}, Vararg{Union{Int, AbstractUnitRange{<:Integer}}}}}","Tuple{$Z, Tuple{Union{Int, AbstractUnitRange{var""##ANON_TV#2422""} where var""##ANON_TV#2422"" <: Integer}, Vararg{Union{Int, AbstractUnitRange{var""##ANON_TV#2423""} where var""##ANON_TV#2423"" <: Integer}}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2422""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2423""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/OffsetArrays.jl
src/mps_quantum_register.jl,<NOT A FUNSIG>,tyassorann,"Array{Union{Nothing, Array{<:AbstractFloat, 1}}, 1}","Array{Union{Nothing, Array{var""##ANON_TV#2642"", 1} where var""##ANON_TV#2642"" <: AbstractFloat}, 1}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2642""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/OhMyQSIM.jl
src/primitive/Prim.jl,anysize,mtsig,"Tuple{Vararg{Union{<:AbstractArray, Real}}}","Tuple{Vararg{Union{var""##ANON_TV#1915"", Real} where var""##ANON_TV#1915"" <: AbstractArray}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1915""), :(Union{}), :AbstractArray, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Omega.jl
src/utils.jl,clip,mtsig,"Tuple{Array{Union{Missing, T}, 2} where T <: Number, Int64, Int64, Int64}","Tuple{Array{Union{Missing, T}, 2} where T <: Number, Int64, Int64, Int64}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Omniscape.jl
src/utils.jl,get_targets,mtsig,"Tuple{Array{Union{T, Missing}, 2} where T <: Number, Dict{String, Int64}, DataType}","Tuple{Array{Union{T, Missing}, 2} where T <: Number, Dict{String, Int64}, DataType}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Omniscape.jl
src/json.jl,from_json,mtsig,"Tuple{Type{Union{Nothing, T}}, Dict{String, Any}} where T","Tuple{Type{Union{Nothing, T}}, Dict{String, Any}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/OpenAPI.jl
src/trace/tracer_basic.jl,TraceState,mtsig,"Tuple{Vararg{Pair{<:AbstractString, <:AbstractString}}}","Tuple{Vararg{(Pair{var""##ANON_TV#1674"", var""##ANON_TV#1675""} where var""##ANON_TV#1674"" <: AbstractString) where var""##ANON_TV#1675"" <: AbstractString}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1674""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1675""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/OpenTelemetryAPI.jl
src/Optical/LensAssembly.jl,LensAssembly,mtsig,"Tuple{Vararg{Union{Surface{T}, CSGTree{T}, LensAssembly{T}}}, SVector{3, T}} where T <: Real","Tuple{Vararg{Union{Surface{T}, CSGTree{T}, LensAssembly{T}}}, SVector{3, T}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/OpticSim.jl
src/little_dict.jl,kvtype,mtsig,"Tuple{Type{Pair{<:Any, V}}} where V","Tuple{Type{Pair{var""##ANON_TV#2320"", V} where var""##ANON_TV#2320"" <: Any}} where V","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2320""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/OrderedCollections.jl
src/little_dict.jl,kvtype,mtsig,"Tuple{Type{Pair{K, <:Any}}} where K","Tuple{Type{Pair{K, var""##ANON_TV#2321""} where var""##ANON_TV#2321"" <: Any}} where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2321""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/OrderedCollections.jl
experimental/ModStd/ModStdQt.jl,<NOT A FUNSIG>,tyassorann,"Vector{Tuple{<:PolyRingElem{T}, <:PolyRingElem{T}}}","Vector{(Tuple{var""##ANON_TV#2473"", var""##ANON_TV#2474""} where var""##ANON_TV#2473"" <: PolyRingElem{T}) where var""##ANON_TV#2474"" <: PolyRingElem{T}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2473""), :(Union{}), :(PolyRingElem{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2474""), :(Union{}), :(PolyRingElem{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Oscar.jl
src/AlgebraicGeometry/Schemes/CoveredSchemes/Objects/Types.jl,CoveredScheme,mtsig,"Tuple{Vector{<:Covering}, Dict{Tuple{<:Covering, <:Covering}, <:CoveringMorphism}}","Tuple{Vector{var""##ANON_TV#2944""} where var""##ANON_TV#2944"" <: Covering, Dict{(Tuple{var""##ANON_TV#2945"", var""##ANON_TV#2946""} where var""##ANON_TV#2945"" <: Covering) where var""##ANON_TV#2946"" <: Covering, var""##ANON_TV#2947""} where var""##ANON_TV#2947"" <: CoveringMorphism}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2944""), :(Union{}), :Covering, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2945""), :(Union{}), :Covering, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2946""), :(Union{}), :Covering, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2947""), :(Union{}), :CoveringMorphism, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/Oscar.jl
src/AlgebraicGeometry/Schemes/Covering/Objects/Types.jl,<NOT A FUNSIG>,tyassorann,"IdDict{Tuple{<:AbsSpec, <:AbsSpec}, <:AbsGlueing}","IdDict{(Tuple{var""##ANON_TV#2953"", var""##ANON_TV#2954""} where var""##ANON_TV#2953"" <: AbsSpec) where var""##ANON_TV#2954"" <: AbsSpec, var""##ANON_TV#2955""} where var""##ANON_TV#2955"" <: AbsGlueing","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2953""), :(Union{}), :AbsSpec, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2954""), :(Union{}), :AbsSpec, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2955""), :(Union{}), :AbsGlueing, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Oscar.jl
src/Groups/cosets.jl,intersect,mtsig,"Tuple{AbstractVector{Union{T, GroupCoset, GroupDoubleCoset}}} where T <: GAPGroup","Tuple{AbstractVector{Union{T, GroupCoset, GroupDoubleCoset}}} where T <: GAPGroup","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :GAPGroup, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Oscar.jl
src/Groups/directproducts.jl,W::WreathProductGroup,mtsig,"Tuple{Vararg{Union{GAPGroupElem{T}, GAPGroupElem{PermGroup}}}} where T <: GAPGroup","Tuple{Vararg{Union{GAPGroupElem{T}, GAPGroupElem{PermGroup}}}} where T <: GAPGroup","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :GAPGroup, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Oscar.jl
src/PolyhedralGeometry/PolyhedralComplex/properties.jl,_vertex_or_ray_polyhedron,mtsig,"Tuple{Type{Union{PointVector{T}, RayVector{T}}}, Polymake.BigObject, Base.Integer} where T <: scalar_types","Tuple{Type{Union{PointVector{T}, RayVector{T}}}, Polymake.BigObject, Base.Integer} where T <: scalar_types","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :scalar_types, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Oscar.jl
src/PolyhedralGeometry/PolyhedralComplex/properties.jl,_vertices,mtsig,"Tuple{Type{Union{RayVector{T}, PointVector{T}}}, PolyhedralComplex} where T <: scalar_types","Tuple{Type{Union{RayVector{T}, PointVector{T}}}, PolyhedralComplex} where T <: scalar_types","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :scalar_types, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Oscar.jl
src/Rings/slpolys.jl,SLPolyRing,mtsig,"Tuple{Ring, Vararg{Pair{<:Union{String, Symbol}, <:AbstractVector{<:Base.Integer}}}, Bool}","Tuple{Ring, Vararg{(Pair{var""##ANON_TV#3704"", var""##ANON_TV#3705""} where var""##ANON_TV#3704"" <: Union{String, Symbol}) where var""##ANON_TV#3705"" <: (AbstractVector{var""##ANON_TV#3706""} where var""##ANON_TV#3706"" <: Base.Integer)}, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3706""), :(Union{}), :(Base.Integer), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3704""), :(Union{}), :(Union{String, Symbol}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3705""), :(Union{}), :(AbstractVector{var""##ANON_TV#3706""} where var""##ANON_TV#3706"" <: Base.Integer), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Oscar.jl
src/Rings/slpolys.jl,SLPolynomialRing,mtsig,"Tuple{Ring, Vararg{Pair{<:Union{String, Symbol}, <:AbstractVector{<:Base.Integer}}}, Bool}","Tuple{Ring, Vararg{(Pair{var""##ANON_TV#3707"", var""##ANON_TV#3708""} where var""##ANON_TV#3707"" <: Union{String, Symbol}) where var""##ANON_TV#3708"" <: (AbstractVector{var""##ANON_TV#3709""} where var""##ANON_TV#3709"" <: Base.Integer)}, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3709""), :(Union{}), :(Base.Integer), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3707""), :(Union{}), :(Union{String, Symbol}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3708""), :(Union{}), :(AbstractVector{var""##ANON_TV#3709""} where var""##ANON_TV#3709"" <: Base.Integer), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Oscar.jl
misc/lgs-solver.jl,reduce_and_store!,mtsig,"Tuple{Vector{Union{Nothing, Vector{T}}}, Vector{T}} where T <: Union{RingElement, Number}","Tuple{Vector{Union{Nothing, Vector{T}}}, Vector{T}} where T <: Union{RingElement, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{RingElement, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/PBWDeformations.jl
misc/lgs-solver.jl,reduced_row_echelon!,mtsig,"Tuple{Vector{Union{Nothing, Vector{T}}}} where T <: Union{RingElement, Number}","Tuple{Vector{Union{Nothing, Vector{T}}}} where T <: Union{RingElement, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{RingElement, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PBWDeformations.jl
misc/lgs-solver.jl,lgs_to_mat,mtsig,"Tuple{Vector{Union{Nothing, Vector{T}}}} where T <: Union{RingElement, Number}","Tuple{Vector{Union{Nothing, Vector{T}}}} where T <: Union{RingElement, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{RingElement, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PBWDeformations.jl
misc/lgs-solver.jl,reduce_and_store!,mtsig,"Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}, SparseVector{T, Int}} where T <: Union{RingElement, Number}","Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}, SparseVector{T, Int}} where T <: Union{RingElement, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{RingElement, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/PBWDeformations.jl
misc/lgs-solver.jl,reduced_row_echelon!,mtsig,"Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}} where T <: Union{RingElement, Number}","Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}} where T <: Union{RingElement, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{RingElement, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PBWDeformations.jl
misc/lgs-solver.jl,lgs_to_mat,mtsig,"Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}} where T <: Union{RingElement, Number}","Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}} where T <: Union{RingElement, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{RingElement, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PBWDeformations.jl
misc/lgs-solver.jl,reduce_and_store!,mtsig,"Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}, SparseVector{T, Int}} where T <: Union{RingElement, Number}","Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}, SparseVector{T, Int}} where T <: Union{RingElement, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{RingElement, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/PBWDeformations.jl
misc/lgs-solver.jl,reduced_row_echelon!,mtsig,"Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}} where T <: Union{RingElement, Number}","Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}} where T <: Union{RingElement, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{RingElement, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PBWDeformations.jl
misc/lgs-solver.jl,lgs_to_mat,mtsig,"Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}} where T <: Union{RingElement, Number}","Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}} where T <: Union{RingElement, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{RingElement, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PBWDeformations.jl
src/SmashProductPBWDeformLie.jl,reduce_and_store!,mtsig,"Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}, SparseVector{T, Int}} where T <: Union{RingElement, Number}","Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}, SparseVector{T, Int}} where T <: Union{RingElement, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{RingElement, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/PBWDeformations.jl
src/SmashProductPBWDeformLie.jl,reduced_row_echelon!,mtsig,"Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}} where T <: Union{RingElement, Number}","Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}} where T <: Union{RingElement, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{RingElement, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PBWDeformations.jl
src/SmashProductPBWDeformLie.jl,lgs_to_mat,mtsig,"Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}} where T <: Union{RingElement, Number}","Tuple{Vector{Union{Nothing, SparseVector{T, Int}}}} where T <: Union{RingElement, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{RingElement, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PBWDeformations.jl
src/control.jl,KeyboardController,mtsig,"Tuple{Vararg{Union{Pair{Keyboard.Button, <:Term}, Keyboard.Button}}, Vararg{Any}} where T","Tuple{Vararg{Union{Pair{Keyboard.Button, var""##ANON_TV#2550""} where var""##ANON_TV#2550"" <: Term, Keyboard.Button}}, Vararg{Any}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2550""), :(Union{}), :Term, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,true,true,true,true,true,true,data/ta-info/all/PDDLViz.jl
src/interface.jl,r::Renderer,mtsig,"Tuple{Domain, MaybeObservable{AbstractVector{<:State}}, Vararg{Any}}","Tuple{Domain, MaybeObservable{AbstractVector{var""##ANON_TV#2555""} where var""##ANON_TV#2555"" <: State}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2555""), :(Union{}), :State, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PDDLViz.jl
src/modification_api.jl,create_element!,mtsig,"Tuple{Data, String, Vararg{Pair{String, <:Any}}, Union{Dict{String, Any}, Nothing}}","Tuple{Data, String, Vararg{Pair{String, var""##ANON_TV#1906""} where var""##ANON_TV#1906"" <: Any}, Union{Dict{String, Any}, Nothing}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1906""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PSRClassesInterface.jl
src/OpenStudy/study_openinterface.jl,_get_attribute_key,mtsig,"Tuple{String, Integer, Vararg{Pair{<:Integer, <:Union{Integer, Nothing}}}}","Tuple{String, Integer, Vararg{(Pair{var""##ANON_TV#1907"", var""##ANON_TV#1908""} where var""##ANON_TV#1907"" <: Integer) where var""##ANON_TV#1908"" <: Union{Integer, Nothing}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1907""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1908""), :(Union{}), :(Union{Integer, Nothing}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/PSRClassesInterface.jl
src/optimizer.jl,<NOT A FUNSIG>,tyassorann,"Vector{Pair{Vector{Int}, <:Union{MOI.SOS1{Float64}, MOI.SOS2{Float64}}}}","Vector{Pair{Vector{Int}, var""##ANON_TV#2135""} where var""##ANON_TV#2135"" <: Union{MOI.SOS1{Float64}, MOI.SOS2{Float64}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2135""), :(Union{}), :(Union{MOI.SOS1{Float64}, MOI.SOS2{Float64}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Pajarito.jl
src/lazyexpression.jl,optimize,mtsig,"Tuple{LazyExpression{typeof(vcat)}, Vararg{Type{<:AbstractVector{<:AffineFunction}}}}","Tuple{LazyExpression{typeof(vcat)}, Vararg{Type{var""##ANON_TV#1785""} where var""##ANON_TV#1785"" <: (AbstractVector{var""##ANON_TV#1786""} where var""##ANON_TV#1786"" <: AffineFunction)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1786""), :(Union{}), :AffineFunction, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1785""), :(Union{}), :(AbstractVector{var""##ANON_TV#1786""} where var""##ANON_TV#1786"" <: AffineFunction), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Parametron.jl
src/cursor.jl,colcursor_values,mtsig,"Tuple{ColCursor{T}, Int64, Type{Vector{Union{Missing, T}}}, Any} where T","Tuple{ColCursor{T}, Int64, Type{Vector{Union{Missing, T}}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Parquet.jl
src/writer.jl,write_defn_levels,mtsig,"Tuple{Any, AbstractVector{Union{Missing, T}}} where T","Tuple{Any, AbstractVector{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Parquet.jl
src/writer.jl,write_encoded_data,mtsig,"Tuple{Any, AbstractVector{Union{Missing, T}}} where T","Tuple{Any, AbstractVector{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Parquet.jl
src/arrays.jl,Base.getindex,mtsig,"Tuple{StringViewVector{Union{Missing, 𝒯}}, Int} where 𝒯","Tuple{StringViewVector{Union{Missing, 𝒯}}, Int} where 𝒯","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:𝒯, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Parquet2.jl
src/dataset.jl,Base.append!,mtsig,"Tuple{Dataset, Vararg{Pair{<:AbstractString, <:AbstractString}}, Vararg{Any}}","Tuple{Dataset, Vararg{(Pair{var""##ANON_TV#1824"", var""##ANON_TV#1825""} where var""##ANON_TV#1824"" <: AbstractString) where var""##ANON_TV#1825"" <: AbstractString}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1824""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1825""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Parquet2.jl
src/read.jl,_loadplain_bits!,mtsig,"Tuple{AbstractVector{Union{Missing, 𝒯}}, Integer, AbstractVector, Integer, ParquetType} where 𝒯","Tuple{AbstractVector{Union{Missing, 𝒯}}, Integer, AbstractVector, Integer, ParquetType} where 𝒯","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:𝒯, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Parquet2.jl
src/read.jl,_loadbits_refs!,mtsig,"Tuple{AbstractVector{Union{𝒯, Missing}}, Integer, Integer, AbstractVector, HybridIterator} where 𝒯","Tuple{AbstractVector{Union{𝒯, Missing}}, Integer, Integer, AbstractVector, HybridIterator} where 𝒯","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:𝒯, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Parquet2.jl
src/schema.jl,maxdeflevel,mtsig,"Tuple{AbstractVector{Union{𝒯, Missing}}} where 𝒯","Tuple{AbstractVector{Union{𝒯, Missing}}} where 𝒯","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:𝒯, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Parquet2.jl
src/splitcap.jl,strip_nothing_,mtsig,"Tuple{Type{Union{Nothing, T}}} where T","Tuple{Type{Union{Nothing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PcapTools.jl
src/syntax.jl,peggy,mtsig,"Tuple{Vararg{Pair{Symbol, <:Parser}}}","Tuple{Vararg{Pair{Symbol, var""##ANON_TV#2442""} where var""##ANON_TV#2442"" <: Parser}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2442""), :(Union{}), :Parser, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Peggy.jl
src/plot_recipes/plot_invariant_measure.jl,f,mtsig,Tuple{InvariantMeasure{TransferOperatorApproximation{<:SGA}}},"Tuple{InvariantMeasure{TransferOperatorApproximation{var""##ANON_TV#3198""} where var""##ANON_TV#3198"" <: SGA}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3198""), :(Union{}), :SGA, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PerronFrobenius.jl
src/PostProcessing/PostProcessing.jl,RotationPlan,mtsig,Tuple{Vararg{Type{<:AbstractTransformer}}},"Tuple{Vararg{Type{var""##ANON_TV#2534""} where var""##ANON_TV#2534"" <: AbstractTransformer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2534""), :(Union{}), :AbstractTransformer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PhylogeneticFactorAnalysis.jl
src/Constants.jl,Constant,mtsig,"Tuple{Type{BigFloat}, Vector{(Unitful.FreeUnits{N, D, nothing} where D) where N}}","Tuple{Type{BigFloat}, Vector{(Unitful.FreeUnits{N, D, nothing} where D) where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/PhysicalParticles.jl
src/Constants.jl,Constant,mtsig,"Tuple{Type{Measurement}, Vector{(Unitful.FreeUnits{N, D, nothing} where D) where N}}","Tuple{Type{Measurement}, Vector{(Unitful.FreeUnits{N, D, nothing} where D) where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/PhysicalParticles.jl
src/Constants.jl,Constant,mtsig,"Tuple{Type{T}, Vector{(Unitful.FreeUnits{N, D, nothing} where D) where N}, Any, Any} where T <: Real","Tuple{Type{T}, Vector{(Unitful.FreeUnits{N, D, nothing} where D) where N}, Any, Any} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/PhysicalParticles.jl
src/Unit.jl,ZeroValue,mtsig,"Tuple{Type{T}, Vector{(Unitful.FreeUnits{N, D, nothing} where D) where N}, Bool} where T <: Number","Tuple{Type{T}, Vector{(Unitful.FreeUnits{N, D, nothing} where D) where N}, Bool} where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/PhysicalParticles.jl
src/Unit.jl,ZeroValue,mtsig,"Tuple{Vector{(Unitful.FreeUnits{N, D, nothing} where D) where N}, Vararg{Any}}","Tuple{Vector{(Unitful.FreeUnits{N, D, nothing} where D) where N}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/PhysicalParticles.jl
docs/scripts/modify_src_copy/inline_linkdefs.jl,replace_matches,mtsig,"Tuple{Any, Vararg{Pair{RegexMatch, <:AbstractString}}}","Tuple{Any, Vararg{Pair{RegexMatch, var""##ANON_TV#1948""} where var""##ANON_TV#1948"" <: AbstractString}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1948""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PkgGraph.jl
docs/scripts/modify_src_copy/inline_linkdefs.jl,replace_ranges,mtsig,"Tuple{Any, Vararg{Pair{<:AbstractRange, <:AbstractString}}}","Tuple{Any, Vararg{(Pair{var""##ANON_TV#1949"", var""##ANON_TV#1950""} where var""##ANON_TV#1949"" <: AbstractRange) where var""##ANON_TV#1950"" <: AbstractString}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1949""), :(Union{}), :AbstractRange, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1950""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/PkgGraph.jl
src/interactive.jl,input_tips,mtsig,"Tuple{Type{Union{T, Nothing}}} where T","Tuple{Type{Union{T, Nothing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PkgTemplates.jl
src/interactive.jl,convert_input,mtsig,"Tuple{Type, Type{Union{T, Nothing}}, AbstractString} where T","Tuple{Type, Type{Union{T, Nothing}}, AbstractString} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PkgTemplates.jl
src/interactive.jl,convert_input,mtsig,"Tuple{Type, Type{Union{T, Symbol, Nothing}}, AbstractString} where T","Tuple{Type, Type{Union{T, Symbol, Nothing}}, AbstractString} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PkgTemplates.jl
src/makie_recipes/colors/get_mtg_color.jl,<NOT A FUNSIG>,tyassorann,"Dict{Int64, Union{Colorant, Vector{<:Colorant}}}","Dict{Int64, Union{Colorant, Vector{var""##ANON_TV#2014""} where var""##ANON_TV#2014"" <: Colorant}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2014""), :(Union{}), :Colorant, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PlantGeom.jl
src/choropleth.jl,choropleth,mtsig,"Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Compose.Context, Any, Any, Any, Any, Any, Any, Any} where T <: Shapefile.GeoInterface.AbstractGeometry","Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Compose.Context, Any, Any, Any, Any, Any, Any, Any} where T <: Shapefile.GeoInterface.AbstractGeometry","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Shapefile.GeoInterface.AbstractGeometry), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/PlotShapefiles.jl
src/choropleth.jl,choropleth,mtsig,"Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Shapefile.Rect, Any, Any, Any, Any, Vararg{Any}} where T <: Shapefile.GeoInterface.AbstractGeometry","Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Shapefile.Rect, Any, Any, Any, Any, Vararg{Any}} where T <: Shapefile.GeoInterface.AbstractGeometry","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Shapefile.GeoInterface.AbstractGeometry), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/PlotShapefiles.jl
src/choropleth.jl,choropleth,mtsig,"Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Any, Any, Vararg{Any}} where T <: Shapefile.GeoInterface.AbstractGeometry","Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Any, Any, Vararg{Any}} where T <: Shapefile.GeoInterface.AbstractGeometry","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Shapefile.GeoInterface.AbstractGeometry), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/PlotShapefiles.jl
src/plotshape.jl,plotshape,mtsig,"Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Compose.Context, Any, Any, Any, Any, Any, Any} where T <: AbstractGeom","Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Compose.Context, Any, Any, Any, Any, Any, Any} where T <: AbstractGeom","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractGeom, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/PlotShapefiles.jl
src/plotshape.jl,plotshape,mtsig,"Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Shapefile.Rect, Any, Any, Vararg{Any}} where T <: AbstractGeom","Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Shapefile.Rect, Any, Any, Vararg{Any}} where T <: AbstractGeom","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractGeom, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/PlotShapefiles.jl
src/plotshape.jl,plotshape,mtsig,"Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Vararg{Any}} where T <: AbstractGeom","Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Vararg{Any}} where T <: AbstractGeom","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractGeom, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/PlotShapefiles.jl
src/dataframes_api.jl,Plot,mtsig,"Tuple{DataFrames.AbstractDataFrame, Layout, _Maybe{Union{PlotlyAttribute, <:Dict{Symbol}}}, _Maybe{Union{PlotlyAttribute, <:Dict}}, _Maybe{Symbol}, _Maybe{Int}, _Maybe{Symbol}, _Maybe{Int}, _Maybe{Union{Symbol, Vector{Symbol}}}, _Maybe{Symbol}, _Maybe{Symbol}, _Maybe{Symbol}, Vararg{Any}}","Tuple{DataFrames.AbstractDataFrame, Layout, _Maybe{Union{PlotlyAttribute, var""##ANON_TV#1147""} where var""##ANON_TV#1147"" <: Dict{Symbol}}, _Maybe{Union{PlotlyAttribute, var""##ANON_TV#1148""} where var""##ANON_TV#1148"" <: Dict}, _Maybe{Symbol}, _Maybe{Int}, _Maybe{Symbol}, _Maybe{Int}, _Maybe{Union{Symbol, Vector{Symbol}}}, _Maybe{Symbol}, _Maybe{Symbol}, _Maybe{Symbol}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1147""), :(Union{}), :(Dict{Symbol}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1148""), :(Union{}), :Dict, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/PlotlyBase.jl
src/subplot_utils.jl,<NOT A FUNSIG>,tyassorann,_Maybe{Matrix{<:_Maybe{String}}},"_Maybe{Matrix{var""##ANON_TV#1151""} where var""##ANON_TV#1151"" <: _Maybe{String}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1151""), :(Union{}), :(_Maybe{String}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PlotlyBase.jl
src/recipes.jl,f,mtsig,"Tuple{AVec, AVec{NTuple{N, <:Number}}} where N","Tuple{AVec, AVec{NTuple{N, var""##ANON_TV#1555""} where var""##ANON_TV#1555"" <: Number}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1555""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/Plots.jl
src/runner/PlutoRunner.jl,trynameof,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Pluto.jl
src/Builtins.jl,<NOT A FUNSIG>,tyassorann,"Vector{Pair{<:AbstractString, <:Any}}","Vector{(Pair{var""##ANON_TV#1671"", var""##ANON_TV#1672""} where var""##ANON_TV#1671"" <: AbstractString) where var""##ANON_TV#1672"" <: Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1671""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1672""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/PlutoUI.jl
src/Builtins.jl,<NOT A FUNSIG>,tyassorann,"Vector{Pair{<:AbstractString, <:Any}}","Vector{(Pair{var""##ANON_TV#1678"", var""##ANON_TV#1679""} where var""##ANON_TV#1678"" <: AbstractString) where var""##ANON_TV#1679"" <: Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1678""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1679""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/PlutoUI.jl
src/Builtins.jl,<NOT A FUNSIG>,tyassorann,"Vector{Pair{<:AbstractString, <:Any}}","Vector{(Pair{var""##ANON_TV#1684"", var""##ANON_TV#1685""} where var""##ANON_TV#1684"" <: AbstractString) where var""##ANON_TV#1685"" <: Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1684""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1685""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/PlutoUI.jl
src/default.jl,promote_reptype,mtsig,"Tuple{Type{<:Rep}, Type{<:Rep}, Vararg{Type{<:Rep}}}","Tuple{Type{var""##ANON_TV#1971""} where var""##ANON_TV#1971"" <: Rep, Type{var""##ANON_TV#1972""} where var""##ANON_TV#1972"" <: Rep, Vararg{Type{var""##ANON_TV#1973""} where var""##ANON_TV#1973"" <: Rep}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1971""), :(Union{}), :Rep, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1972""), :(Union{}), :Rep, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1973""), :(Union{}), :Rep, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Polyhedra.jl
src/TypeUpgrades.jl,Base.convert,mtsig,"Tuple{Type{Union{T, One}}, One} where T <: $N","Tuple{Type{Union{T, One}}, One} where T <: $N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :($(Expr(:$, :N))), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,true,1,true,true,false,true,false,false,true,true,data/ta-info/all/PolynomialRings.jl
src/TypeUpgrades.jl,Base.convert,mtsig,"Tuple{Type{Union{T, Zero}}, Zero} where T <: $N","Tuple{Type{Union{T, Zero}}, Zero} where T <: $N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :($(Expr(:$, :N))), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,true,1,true,true,false,true,false,false,true,true,data/ta-info/all/PolynomialRings.jl
src/TypeUpgrades.jl,Base.convert,mtsig,"Tuple{Type{Union{T, MinusOne}}, MinusOne} where T <: $N","Tuple{Type{Union{T, MinusOne}}, MinusOne} where T <: $N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :($(Expr(:$, :N))), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,true,1,true,true,false,true,false,false,true,true,data/ta-info/all/PolynomialRings.jl
src/PolynomialRings/GroebnerM4GB.jl,Something,mtsig,"Tuple{Type{Union{Nothing, T}}} where T","Tuple{Type{Union{Nothing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PolynomialRings.jl
src/AlleleFreq.jl,allelefreq,mtsig,"(Tuple{AbstractVector{Union{Missing, NTuple{N, T}}}} where N) where T <: Union{Int8, Int16}","(Tuple{AbstractVector{Union{Missing, NTuple{N, T}}}} where N) where T <: Union{Int8, Int16}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{Int8, Int16}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/PopGenCore.jl
src/GenoFreq.jl,genofreq,mtsig,"Tuple{AbstractVector{Union{Missing, T}}} where T <: Genotype","Tuple{AbstractVector{Union{Missing, T}}} where T <: Genotype","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Genotype, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/PopGenCore.jl
src/Desktop/layouts.jl,<NOT A FUNSIG>,tyassorann,"Vector{Union{<:LayoutElement, <:UIControl}}","Vector{(Union{var""##ANON_TV#1723"", var""##ANON_TV#1724""} where var""##ANON_TV#1723"" <: LayoutElement) where var""##ANON_TV#1724"" <: UIControl}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1723""), :(Union{}), :LayoutElement, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1724""), :(Union{}), :UIControl, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Poptart.jl
src/area.jl,<NOT A FUNSIG>,tyassorann,"Vector{NamedTuple{(:x, :y0, :y1), Tuple{<:Real, <:Real, <:Real}}}","Vector{NamedTuple{(:x, :y0, :y1), ((Tuple{var""##ANON_TV#1253"", var""##ANON_TV#1254"", var""##ANON_TV#1255""} where var""##ANON_TV#1253"" <: Real) where var""##ANON_TV#1254"" <: Real) where var""##ANON_TV#1255"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1253""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1254""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1255""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/Portinari.jl
src/bar.jl,<NOT A FUNSIG>,tyassorann,"Vector{NamedTuple{(:x, :y), Tuple{<:type_union, <:type_union}}}","Vector{NamedTuple{(:x, :y), (Tuple{var""##ANON_TV#1256"", var""##ANON_TV#1257""} where var""##ANON_TV#1256"" <: type_union) where var""##ANON_TV#1257"" <: type_union}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1256""), :(Union{}), :type_union, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1257""), :(Union{}), :type_union, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/Portinari.jl
src/line.jl,<NOT A FUNSIG>,tyassorann,"Vector{NamedTuple{(:x, :y), Tuple{<:Real, <:Real}}}","Vector{NamedTuple{(:x, :y), (Tuple{var""##ANON_TV#1266"", var""##ANON_TV#1267""} where var""##ANON_TV#1266"" <: Real) where var""##ANON_TV#1267"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1266""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1267""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/Portinari.jl
src/shape.jl,<NOT A FUNSIG>,tyassorann,"Vector{NamedTuple{(:x, :y, :size), Tuple{<:Real, <:Real, <:Real}}}","Vector{NamedTuple{(:x, :y, :size), ((Tuple{var""##ANON_TV#1268"", var""##ANON_TV#1269"", var""##ANON_TV#1270""} where var""##ANON_TV#1268"" <: Real) where var""##ANON_TV#1269"" <: Real) where var""##ANON_TV#1270"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1268""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1269""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1270""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/Portinari.jl
src/PostgresORMUtil/utils.jl,vector_of_integers2vector_of_enums,mtsig,"Tuple{Type{Vector{T}} where T <: Base.Enums.Enum, Union{Vector{W}, Vector{Union{W, Missing}}} where W <: Integer}","Tuple{Type{Vector{T}} where T <: Base.Enums.Enum, Union{Vector{W}, Vector{Union{W, Missing}}} where W <: Integer}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Base.Enums.Enum), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:W, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion)], list(JuliaSub.TCTuple))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/PostgresORM.jl
src/core/types.jl,<NOT A FUNSIG>,tyassorann,"Dict{Union{Int, LightGraphs.AbstractEdge}, Dict{Symbol, <:Any}}","Dict{Union{Int, LightGraphs.AbstractEdge}, Dict{Symbol, var""##ANON_TV#2574""} where var""##ANON_TV#2574"" <: Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2574""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PowerModelsAnalytics.jl
src/data_model/components.jl,create_xfmrcode,mtsig,"Tuple{Union{Vector{ConnConfig}, Missing}, Union{Vector{<:Real}, Missing}, Union{Vector{<:Real}, Missing}, Union{Vector{<:Real}, Missing}, Union{Vector{Vector{<:Real}}, Missing}, Union{Vector{Vector{<:Real}}, Missing}, Union{Vector{Vector{<:Real}}, Missing}, Union{Vector{Vector{<:Real}}, Missing}, Vararg{Any}}","Tuple{Union{Vector{ConnConfig}, Missing}, Union{Vector{var""##ANON_TV#2837""} where var""##ANON_TV#2837"" <: Real, Missing}, Union{Vector{var""##ANON_TV#2838""} where var""##ANON_TV#2838"" <: Real, Missing}, Union{Vector{var""##ANON_TV#2839""} where var""##ANON_TV#2839"" <: Real, Missing}, Union{Vector{Vector{var""##ANON_TV#2840""} where var""##ANON_TV#2840"" <: Real}, Missing}, Union{Vector{Vector{var""##ANON_TV#2841""} where var""##ANON_TV#2841"" <: Real}, Missing}, Union{Vector{Vector{var""##ANON_TV#2842""} where var""##ANON_TV#2842"" <: Real}, Missing}, Union{Vector{Vector{var""##ANON_TV#2843""} where var""##ANON_TV#2843"" <: Real}, Missing}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2837""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2838""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2839""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2840""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2841""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2842""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2843""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,false,7,true,true,true,true,true,true,true,true,data/ta-info/all/PowerModelsDistribution.jl
src/data_model/components.jl,create_transformer,mtsig,"Tuple{Vector{String}, Vector{Vector{Int}}, Union{Vector{ConnConfig}, Missing}, Union{String, Missing}, Union{Vector{<:Real}, Missing}, Union{Vector{<:Real}, Missing}, Real, Real, Union{Vector{<:Real}, Missing}, Union{Vector{Vector{<:Real}}, Missing}, Union{Vector{Vector{<:Real}}, Missing}, Union{Vector{Vector{<:Real}}, Missing}, Union{Vector{Vector{Bool}}, Missing}, Union{Vector{Int}, Missing}, Union{Vector{<:Real}, Missing}, Union{Vector{<:Real}, Missing}, Status, Vararg{Any}}","Tuple{Vector{String}, Vector{Vector{Int}}, Union{Vector{ConnConfig}, Missing}, Union{String, Missing}, Union{Vector{var""##ANON_TV#2844""} where var""##ANON_TV#2844"" <: Real, Missing}, Union{Vector{var""##ANON_TV#2845""} where var""##ANON_TV#2845"" <: Real, Missing}, Real, Real, Union{Vector{var""##ANON_TV#2846""} where var""##ANON_TV#2846"" <: Real, Missing}, Union{Vector{Vector{var""##ANON_TV#2847""} where var""##ANON_TV#2847"" <: Real}, Missing}, Union{Vector{Vector{var""##ANON_TV#2848""} where var""##ANON_TV#2848"" <: Real}, Missing}, Union{Vector{Vector{var""##ANON_TV#2849""} where var""##ANON_TV#2849"" <: Real}, Missing}, Union{Vector{Vector{Bool}}, Missing}, Union{Vector{Int}, Missing}, Union{Vector{var""##ANON_TV#2850""} where var""##ANON_TV#2850"" <: Real, Missing}, Union{Vector{var""##ANON_TV#2851""} where var""##ANON_TV#2851"" <: Real, Missing}, Status, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2844""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2845""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2846""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2847""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2848""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2849""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2850""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2851""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,false,8,true,true,true,true,true,true,true,true,data/ta-info/all/PowerModelsDistribution.jl
src/core/logging.jl,_make_filtered_logger,mtsig,"Tuple{Vector{Tuple{<:Module, Logging.LogLevel}}}","Tuple{Vector{Tuple{var""##ANON_TV#2605"", Logging.LogLevel} where var""##ANON_TV#2605"" <: Module}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2605""), :(Union{}), :Module, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PowerModelsONM.jl
src/core/device_model.jl,<NOT A FUNSIG>,tyassorann,"Dict{Type{<:TimeSeriesParameter}, String}","Dict{Type{var""##ANON_TV#2712""} where var""##ANON_TV#2712"" <: TimeSeriesParameter, String}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2712""), :(Union{}), :TimeSeriesParameter, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PowerSimulations.jl
src/core/optimization_container.jl,<NOT A FUNSIG>,tyassorann,"Dict{ICKey, Vector{<:InitialCondition}}","Dict{ICKey, Vector{var""##ANON_TV#2717""} where var""##ANON_TV#2717"" <: InitialCondition}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2717""), :(Union{}), :InitialCondition, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PowerSimulations.jl
src/core/service_model.jl,<NOT A FUNSIG>,tyassorann,"Dict{Type{<:TimeSeriesParameter}, String}","Dict{Type{var""##ANON_TV#2731""} where var""##ANON_TV#2731"" <: TimeSeriesParameter, String}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2731""), :(Union{}), :TimeSeriesParameter, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PowerSimulations.jl
src/core/service_model.jl,<NOT A FUNSIG>,tyassorann,"Dict{Type{<:PSY.Component}, Vector{<:PSY.Component}}","Dict{Type{var""##ANON_TV#2732""} where var""##ANON_TV#2732"" <: PSY.Component, Vector{var""##ANON_TV#2733""} where var""##ANON_TV#2733"" <: PSY.Component}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2732""), :(Union{}), :(PSY.Component), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2733""), :(Union{}), :(PSY.Component), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/PowerSimulations.jl
src/simulation/simulation_sequence.jl,<NOT A FUNSIG>,tyassorann,"Dict{Symbol, Vector{<:AbstractAffectFeedforward}}","Dict{Symbol, Vector{var""##ANON_TV#3106""} where var""##ANON_TV#3106"" <: AbstractAffectFeedforward}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3106""), :(Union{}), :AbstractAffectFeedforward, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PowerSimulations.jl
src/base/simulation_inputs.jl,<NOT A FUNSIG>,tyassorann,Vector{DynamicWrapper{<:PSY.DynamicInjection}},"Vector{DynamicWrapper{var""##ANON_TV#1375""} where var""##ANON_TV#1375"" <: PSY.DynamicInjection}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1375""), :(Union{}), :(PSY.DynamicInjection), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PowerSimulationsDynamics.jl
src/toplevel/always-loaded/utils/missings.jl,disallowmissing,mtsig,"(Tuple{AbstractArray{Union{Missing, T}, N}} where T) where N","(Tuple{AbstractArray{Union{Missing, T}, N}} where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/PredictMD.jl
src/Preferences.jl,set_preferences!,mtsig,"Tuple{String, String, Vararg{Pair{String, <:Any}}, Bool}","Tuple{String, String, Vararg{Pair{String, var""##ANON_TV#1160""} where var""##ANON_TV#1160"" <: Any}, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1160""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Preferences.jl
src/Preferences.jl,set_preferences!,mtsig,"Tuple{UUID, Vararg{Pair{String, <:Any}}, Any, Bool, Vararg{Any}}","Tuple{UUID, Vararg{Pair{String, var""##ANON_TV#1161""} where var""##ANON_TV#1161"" <: Any}, Any, Bool, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1161""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Preferences.jl
src/Preferences.jl,set_preferences!,mtsig,"Tuple{Module, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{Module, Vararg{Pair{String, var""##ANON_TV#1162""} where var""##ANON_TV#1162"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1162""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Preferences.jl
src/mechanism_scenario.jl,<NOT A FUNSIG>,tyassorann,"RigidBodyDynamics.CustomCollections.IndexDict{BodyID, Base.OneTo{BodyID}, Union{Nothing, RigidBodyDynamics.Graphs.TreePath{RigidBody{Float64}, Joint{Float64, JT} where JT <: JointType{Float64}}}}","RigidBodyDynamics.CustomCollections.IndexDict{BodyID, Base.OneTo{BodyID}, Union{Nothing, RigidBodyDynamics.Graphs.TreePath{RigidBody{Float64}, Joint{Float64, JT} where JT <: JointType{Float64}}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:JT, :(Union{}), :(JointType{Float64}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/PressureFieldContact.jl
src/utils.jl,convert_symbol_tuples,mtsig,"Tuple{NTuple{M, NTuple{2, S where S <: Union{Integer, Symbol}}}, Any} where M","Tuple{NTuple{M, NTuple{2, S where S <: Union{Integer, Symbol}}}, Any} where M","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :(Union{Integer, Symbol}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ProfileLikelihood.jl
src/utils.jl,convert_symbol_tuples,mtsig,"Tuple{NTuple{2, S where S <: Union{Integer, Symbol}}, Any}","Tuple{NTuple{2, S where S <: Union{Integer, Symbol}}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :(Union{Integer, Symbol}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ProfileLikelihood.jl
src/abstract/collection.jl,_nt_names_types,mtsig,"Tuple{Type{NamedTuple{names, types} where names}} where types","Tuple{Type{NamedTuple{names, types} where names}} where types","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:names, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:types, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/PythonCall.jl
src/concrete/bytes.jl,pybytes,mtsig,"Tuple{Type{T}, Any} where Vector{UInt8} <: T <: Vector","Tuple{Type{T}, Any} where Vector{UInt8} <: T <: Vector","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Vector{UInt8}), :Vector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/PythonCall.jl
src/concrete/bytes.jl,pybytes,mtsig,"Tuple{Type{T}, Any} where Base.CodeUnits{UInt8, String} <: T <: Base.CodeUnits","Tuple{Type{T}, Any} where Base.CodeUnits{UInt8, String} <: T <: Base.CodeUnits","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Base.CodeUnits{UInt8, String}), :(Base.CodeUnits), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/PythonCall.jl
src/circuit.jl,driver,mtsig,"Tuple{Problem, Vector{Vector{T} where T}}","Tuple{Problem, Vector{Vector{T} where T}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/QAOA.jl
src/QML.jl,JuliaPropertyMap,mtsig,"Tuple{Vararg{Pair{<:AbstractString, <:Any}}}","Tuple{Vararg{(Pair{var""##ANON_TV#2493"", var""##ANON_TV#2494""} where var""##ANON_TV#2493"" <: AbstractString) where var""##ANON_TV#2494"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2493""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2494""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/QML.jl
src/basic_ops_homogeneous.jl,Base.:+,mtsig,"Tuple{Vararg{Symbolic{<:QObj}, 0}}","Tuple{Vararg{Symbolic{var""##ANON_TV#2611""} where var""##ANON_TV#2611"" <: QObj, 0}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2611""), :(Union{}), :QObj, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/QSymbolicsBase.jl
src/gates/gate_map.jl,Base.getindex,mtsig,"Tuple{Dict{GateOps.AGateSymbol, Matrix{<:Number}}, GateOps.AGateCall}","Tuple{Dict{GateOps.AGateSymbol, Matrix{var""##ANON_TV#1310""} where var""##ANON_TV#1310"" <: Number}, GateOps.AGateCall}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1310""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/QXZoo.jl
src/gates.jl,Base.kron,mtsig,"Tuple{Vararg{Union{UniformScaling{Bool}, G}}} where G <: AbstractGate","Tuple{Vararg{Union{UniformScaling{Bool}, G}}} where G <: AbstractGate","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:G, :(Union{}), :AbstractGate, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Qaintessent.jl
src/openqasm/grammar.jl,parse_qasm,mtsig,Tuple{Vector{Token{A} where A}},Tuple{Vector{Token{A} where A}},"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Qaintessent.jl
test/util.jl,test_round_trip,mtsig,"Tuple{Type{Union{Missing, T}}, Any} where T","Tuple{Type{Union{Missing, T}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/QuakeML.jl
test/test_mc_tools.jl,Base.isapprox,mtsig,"Tuple{Vector{Vector{<:Real}}, Vector{Vector{<:Real}}}","Tuple{Vector{Vector{var""##ANON_TV#2048""} where var""##ANON_TV#2048"" <: Real}, Vector{Vector{var""##ANON_TV#2049""} where var""##ANON_TV#2049"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2048""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2049""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/QuantEcon.jl
src/eqsofmotion.jl,heisenberg_eom,mtsig,"Tuple{QuExpr, QuExpr, Tuple{Vararg{Union{<:Tuple, AbstractLindbladTerm}}}}","Tuple{QuExpr, QuExpr, Tuple{Vararg{Union{var""##ANON_TV#1974"", AbstractLindbladTerm} where var""##ANON_TV#1974"" <: Tuple}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1974""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/QuantumAlgebra.jl
src/objectives.jl,QuantumObjective,mtsig,"Tuple{Union{Nothing, Tuple{Vararg{Symbol}}}, Union{Nothing, Symbol}, Union{Nothing, AbstractVector{<:Real}, Tuple{Vararg{AbstractVector{<:Real}}}}, Symbol, Union{Float64, Vector{Float64}}, Bool}","Tuple{Union{Nothing, Tuple{Vararg{Symbol}}}, Union{Nothing, Symbol}, Union{Nothing, AbstractVector{var""##ANON_TV#1943""} where var""##ANON_TV#1943"" <: Real, Tuple{Vararg{AbstractVector{var""##ANON_TV#1944""} where var""##ANON_TV#1944"" <: Real}}}, Symbol, Union{Float64, Vector{Float64}}, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1943""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1944""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/QuantumCollocation.jl
src/qnumber.jl,SymbolicUtils.promote_symtype,mtsig,"Tuple{Any, Vararg{Type{<:QNumber}}}","Tuple{Any, Vararg{Type{var""##ANON_TV#2182""} where var""##ANON_TV#2182"" <: QNumber}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2182""), :(Union{}), :QNumber, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/QuantumCumulants.jl
src/SubModules/ShellModule.jl,renormNonAxial!,mtsig,"Tuple{AbstractArray{Float64, N}, Vararg{Vector{<:AbstractShell}, N}} where N","Tuple{AbstractArray{Float64, N}, Vararg{Vector{var""##ANON_TV#1170""} where var""##ANON_TV#1170"" <: AbstractShell, N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1170""), :(Union{}), :AbstractShell, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,true,true,true,data/ta-info/all/QuantumLab.jl
src/DegreesOfFreedom.jl,Coupling,mtsig,"(Tuple{Union{NTuple{N, Int}, Colon}, Type{I}, Vararg{Union{NTuple{N}, Colon}}} where I <: SimpleIID) where N","(Tuple{Union{NTuple{N, Int}, Colon}, Type{I}, Vararg{Union{NTuple{N}, Colon}}} where I <: SimpleIID) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:I, :(Union{}), :SimpleIID, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/QuantumLattices.jl
src/DegreesOfFreedom.jl,Coupling,mtsig,"(Tuple{Any, Union{NTuple{N, Int}, Colon}, Type{I}, Vararg{Union{NTuple{N}, Colon}}} where I <: SimpleIID) where N","(Tuple{Any, Union{NTuple{N, Int}, Colon}, Type{I}, Vararg{Union{NTuple{N}, Colon}}} where I <: SimpleIID) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:I, :(Union{}), :SimpleIID, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/QuantumLattices.jl
src/DegreesOfFreedom.jl,Coupling,mtsig,"(Tuple{Union{NTuple{N, Int}, Colon}, Type{I}, Vararg{Union{NTuple{N}, Colon}}} where I <: SimpleIID) where N","(Tuple{Union{NTuple{N, Int}, Colon}, Type{I}, Vararg{Union{NTuple{N}, Colon}}} where I <: SimpleIID) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:I, :(Union{}), :SimpleIID, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/QuantumLattices.jl
src/DegreesOfFreedom.jl,Coupling,mtsig,"(Tuple{Any, Union{NTuple{N, Int}, Colon}, Type{I}, Vararg{Union{NTuple{N}, Colon}}} where I <: SimpleIID) where N","(Tuple{Any, Union{NTuple{N, Int}, Colon}, Type{I}, Vararg{Union{NTuple{N}, Colon}}} where I <: SimpleIID) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:I, :(Union{}), :SimpleIID, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/QuantumLattices.jl
src/QuantumSystems.jl,isnormalordered,mtsig,"Tuple{Operator{<:Number, <:ID{AbstractCompositeIndex{<:Index{Int, <:FID}}}}}","Tuple{(Operator{var""##ANON_TV#2184"", var""##ANON_TV#2185""} where var""##ANON_TV#2184"" <: Number) where var""##ANON_TV#2185"" <: ID{AbstractCompositeIndex{var""##ANON_TV#2186""} where var""##ANON_TV#2186"" <: (Index{Int, var""##ANON_TV#2187""} where var""##ANON_TV#2187"" <: FID)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2187""), :(Union{}), :FID, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2186""), :(Union{}), :(Index{Int, var""##ANON_TV#2187""} where var""##ANON_TV#2187"" <: FID), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2184""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2185""), :(Union{}), :(ID{AbstractCompositeIndex{var""##ANON_TV#2186""} where var""##ANON_TV#2186"" <: (Index{Int, var""##ANON_TV#2187""} where var""##ANON_TV#2187"" <: FID)}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/QuantumLattices.jl
src/QuantumSystems.jl,Base.:*,mtsig,"Tuple{Operator{<:Number, <:ID{AbstractCompositeIndex{<:Index{Int, <:FID{:f}}}}}, Operator{<:Number, <:ID{AbstractCompositeIndex{<:Index{Int, <:FID{:f}}}}}}","Tuple{(Operator{var""##ANON_TV#2188"", var""##ANON_TV#2189""} where var""##ANON_TV#2188"" <: Number) where var""##ANON_TV#2189"" <: ID{AbstractCompositeIndex{var""##ANON_TV#2190""} where var""##ANON_TV#2190"" <: (Index{Int, var""##ANON_TV#2191""} where var""##ANON_TV#2191"" <: FID{:f})}, (Operator{var""##ANON_TV#2192"", var""##ANON_TV#2193""} where var""##ANON_TV#2192"" <: Number) where var""##ANON_TV#2193"" <: ID{AbstractCompositeIndex{var""##ANON_TV#2194""} where var""##ANON_TV#2194"" <: (Index{Int, var""##ANON_TV#2195""} where var""##ANON_TV#2195"" <: FID{:f})}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2191""), :(Union{}), :(FID{:f}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2190""), :(Union{}), :(Index{Int, var""##ANON_TV#2191""} where var""##ANON_TV#2191"" <: FID{:f}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2188""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2189""), :(Union{}), :(ID{AbstractCompositeIndex{var""##ANON_TV#2190""} where var""##ANON_TV#2190"" <: (Index{Int, var""##ANON_TV#2191""} where var""##ANON_TV#2191"" <: FID{:f})}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2195""), :(Union{}), :(FID{:f}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2194""), :(Union{}), :(Index{Int, var""##ANON_TV#2195""} where var""##ANON_TV#2195"" <: FID{:f}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2192""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2193""), :(Union{}), :(ID{AbstractCompositeIndex{var""##ANON_TV#2194""} where var""##ANON_TV#2194"" <: (Index{Int, var""##ANON_TV#2195""} where var""##ANON_TV#2195"" <: FID{:f})}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,true,8,true,true,true,true,true,true,true,true,data/ta-info/all/QuantumLattices.jl
src/QuantumSystems.jl,expand,mtsig,"Tuple{Val{:Hooke}, Coupling{<:Number, <:NTuple{2, Index{<:Union{Int, Colon}, PID{Colon}}}}, Bond, Hilbert}","Tuple{Val{:Hooke}, (Coupling{var""##ANON_TV#2258"", var""##ANON_TV#2259""} where var""##ANON_TV#2258"" <: Number) where var""##ANON_TV#2259"" <: NTuple{2, Index{var""##ANON_TV#2260"", PID{Colon}} where var""##ANON_TV#2260"" <: Union{Int, Colon}}, Bond, Hilbert}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2260""), :(Union{}), :(Union{Int, Colon}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2258""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2259""), :(Union{}), :(NTuple{2, Index{var""##ANON_TV#2260"", PID{Colon}} where var""##ANON_TV#2260"" <: Union{Int, Colon}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/QuantumLattices.jl
src/Spatials.jl,Lattice,mtsig,"Tuple{Vararg{Vector{<:Number}}, Symbol, Union{Vector{<:AbstractVector{<:Number}}, Nothing}}","Tuple{Vararg{Vector{var""##ANON_TV#2342""} where var""##ANON_TV#2342"" <: Number}, Symbol, Union{Vector{var""##ANON_TV#2343""} where var""##ANON_TV#2343"" <: (AbstractVector{var""##ANON_TV#2344""} where var""##ANON_TV#2344"" <: Number), Nothing}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2342""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2344""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2343""), :(Union{}), :(AbstractVector{var""##ANON_TV#2344""} where var""##ANON_TV#2344"" <: Number), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/QuantumLattices.jl
src/Spatials.jl,ReciprocalZone,mtsig,"Tuple{AbstractVector{<:AbstractVector}, Pair{<:Number, <:Number}, Vararg{Pair{<:Number, <:Number}}, Any, Any}","Tuple{AbstractVector{var""##ANON_TV#2365""} where var""##ANON_TV#2365"" <: AbstractVector, (Pair{var""##ANON_TV#2366"", var""##ANON_TV#2367""} where var""##ANON_TV#2366"" <: Number) where var""##ANON_TV#2367"" <: Number, Vararg{(Pair{var""##ANON_TV#2368"", var""##ANON_TV#2369""} where var""##ANON_TV#2368"" <: Number) where var""##ANON_TV#2369"" <: Number}, Any, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2365""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2366""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2367""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2368""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2369""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,5,true,true,true,true,true,true,true,true,data/ta-info/all/QuantumLattices.jl
src/Spatials.jl,ReciprocalZone,mtsig,"Tuple{AbstractVector{<:AbstractVector}, Union{Tuple{Vararg{Pair{<:Number, <:Number}}}, Vector{<:Pair{<:Number, <:Number}}}, Any, Any}","Tuple{AbstractVector{var""##ANON_TV#2370""} where var""##ANON_TV#2370"" <: AbstractVector, Union{Tuple{Vararg{(Pair{var""##ANON_TV#2371"", var""##ANON_TV#2372""} where var""##ANON_TV#2371"" <: Number) where var""##ANON_TV#2372"" <: Number}}, Vector{var""##ANON_TV#2373""} where var""##ANON_TV#2373"" <: ((Pair{var""##ANON_TV#2374"", var""##ANON_TV#2375""} where var""##ANON_TV#2374"" <: Number) where var""##ANON_TV#2375"" <: Number)}, Any, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2370""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2371""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2372""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2374""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2375""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2373""), :(Union{}), :((Pair{var""##ANON_TV#2374"", var""##ANON_TV#2375""} where var""##ANON_TV#2374"" <: Number) where var""##ANON_TV#2375"" <: Number), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,false,6,true,true,true,true,true,true,true,true,data/ta-info/all/QuantumLattices.jl
src/Spatials.jl,ReciprocalZone,mtsig,"Tuple{AbstractVector{<:AbstractVector}, Pair{<:Number, <:Number}, Vararg{Pair{<:Number, <:Number}}, Any, Any} where K","Tuple{AbstractVector{var""##ANON_TV#2377""} where var""##ANON_TV#2377"" <: AbstractVector, (Pair{var""##ANON_TV#2378"", var""##ANON_TV#2379""} where var""##ANON_TV#2378"" <: Number) where var""##ANON_TV#2379"" <: Number, Vararg{(Pair{var""##ANON_TV#2380"", var""##ANON_TV#2381""} where var""##ANON_TV#2380"" <: Number) where var""##ANON_TV#2381"" <: Number}, Any, Any} where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2377""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2378""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2379""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2380""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2381""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,6,true,false,true,true,true,true,true,true,data/ta-info/all/QuantumLattices.jl
src/Spatials.jl,ReciprocalZone,mtsig,"Tuple{AbstractVector{<:AbstractVector}, Union{Tuple{Vararg{Pair{<:Number, <:Number}}}, Vector{<:Pair{<:Number, <:Number}}}, Any, Any} where K","Tuple{AbstractVector{var""##ANON_TV#2382""} where var""##ANON_TV#2382"" <: AbstractVector, Union{Tuple{Vararg{(Pair{var""##ANON_TV#2383"", var""##ANON_TV#2384""} where var""##ANON_TV#2383"" <: Number) where var""##ANON_TV#2384"" <: Number}}, Vector{var""##ANON_TV#2385""} where var""##ANON_TV#2385"" <: ((Pair{var""##ANON_TV#2386"", var""##ANON_TV#2387""} where var""##ANON_TV#2386"" <: Number) where var""##ANON_TV#2387"" <: Number)}, Any, Any} where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2382""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2383""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2384""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2386""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2387""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2385""), :(Union{}), :((Pair{var""##ANON_TV#2386"", var""##ANON_TV#2387""} where var""##ANON_TV#2386"" <: Number) where var""##ANON_TV#2387"" <: Number), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,7,true,false,true,true,true,true,true,true,data/ta-info/all/QuantumLattices.jl
src/Spatials.jl,ReciprocalPath,mtsig,"Tuple{AbstractVector{<:AbstractVector}, Pair{<:NTuple{N, Number}, <:NTuple{N, Number}}, Vararg{Pair{<:NTuple{N, Number}, <:NTuple{N, Number}}}, Any, Any} where N","Tuple{AbstractVector{var""##ANON_TV#2392""} where var""##ANON_TV#2392"" <: AbstractVector, (Pair{var""##ANON_TV#2393"", var""##ANON_TV#2394""} where var""##ANON_TV#2393"" <: NTuple{N, Number}) where var""##ANON_TV#2394"" <: NTuple{N, Number}, Vararg{(Pair{var""##ANON_TV#2395"", var""##ANON_TV#2396""} where var""##ANON_TV#2395"" <: NTuple{N, Number}) where var""##ANON_TV#2396"" <: NTuple{N, Number}}, Any, Any} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2392""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2393""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2394""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2395""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2396""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,6,true,false,false,true,true,false,true,true,data/ta-info/all/QuantumLattices.jl
src/Spatials.jl,ReciprocalPath,mtsig,"Tuple{AbstractVector{<:AbstractVector}, Union{Tuple{Vararg{Pair{<:NTuple{N, Number}, <:NTuple{N, Number}}}}, Vector{<:Pair{<:NTuple{N, Number}, <:NTuple{N, Number}}}}, Any, Any} where N","Tuple{AbstractVector{var""##ANON_TV#2397""} where var""##ANON_TV#2397"" <: AbstractVector, Union{Tuple{Vararg{(Pair{var""##ANON_TV#2398"", var""##ANON_TV#2399""} where var""##ANON_TV#2398"" <: NTuple{N, Number}) where var""##ANON_TV#2399"" <: NTuple{N, Number}}}, Vector{var""##ANON_TV#2400""} where var""##ANON_TV#2400"" <: ((Pair{var""##ANON_TV#2401"", var""##ANON_TV#2402""} where var""##ANON_TV#2401"" <: NTuple{N, Number}) where var""##ANON_TV#2402"" <: NTuple{N, Number})}, Any, Any} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2397""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2398""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2399""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2401""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2402""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2400""), :(Union{}), :((Pair{var""##ANON_TV#2401"", var""##ANON_TV#2402""} where var""##ANON_TV#2401"" <: NTuple{N, Number}) where var""##ANON_TV#2402"" <: NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,7,true,false,false,true,true,false,true,true,data/ta-info/all/QuantumLattices.jl
src/Spatials.jl,ReciprocalPath,mtsig,"(Tuple{AbstractVector{<:AbstractVector}, Pair{<:NTuple{N, Number}, <:NTuple{N, Number}}, Vararg{Pair{<:NTuple{N, Number}, <:NTuple{N, Number}}}, Any, Any} where N) where K","(Tuple{AbstractVector{var""##ANON_TV#2403""} where var""##ANON_TV#2403"" <: AbstractVector, (Pair{var""##ANON_TV#2404"", var""##ANON_TV#2405""} where var""##ANON_TV#2404"" <: NTuple{N, Number}) where var""##ANON_TV#2405"" <: NTuple{N, Number}, Vararg{(Pair{var""##ANON_TV#2406"", var""##ANON_TV#2407""} where var""##ANON_TV#2406"" <: NTuple{N, Number}) where var""##ANON_TV#2407"" <: NTuple{N, Number}}, Any, Any} where N) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2403""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2404""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2405""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2406""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2407""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,7,true,false,false,true,true,false,true,true,data/ta-info/all/QuantumLattices.jl
src/Spatials.jl,ReciprocalPath,mtsig,"(Tuple{AbstractVector{<:AbstractVector}, Union{Tuple{Vararg{Pair{<:NTuple{N, Number}, <:NTuple{N, Number}}}}, Vector{<:Pair{<:NTuple{N, Number}, <:NTuple{N, Number}}}}, Any, Any} where N) where K","(Tuple{AbstractVector{var""##ANON_TV#2408""} where var""##ANON_TV#2408"" <: AbstractVector, Union{Tuple{Vararg{(Pair{var""##ANON_TV#2409"", var""##ANON_TV#2410""} where var""##ANON_TV#2409"" <: NTuple{N, Number}) where var""##ANON_TV#2410"" <: NTuple{N, Number}}}, Vector{var""##ANON_TV#2411""} where var""##ANON_TV#2411"" <: ((Pair{var""##ANON_TV#2412"", var""##ANON_TV#2413""} where var""##ANON_TV#2412"" <: NTuple{N, Number}) where var""##ANON_TV#2413"" <: NTuple{N, Number})}, Any, Any} where N) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2408""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2409""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2410""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2412""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2413""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2411""), :(Union{}), :((Pair{var""##ANON_TV#2412"", var""##ANON_TV#2413""} where var""##ANON_TV#2412"" <: NTuple{N, Number}) where var""##ANON_TV#2413"" <: NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCUnion, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,8,true,false,false,true,true,false,true,true,data/ta-info/all/QuantumLattices.jl
src/Spatials.jl,selectpath,mtsig,"(Tuple{BrillouinZone, Vararg{Pair{<:NTuple{N, Number}, <:NTuple{N, Number}}}, Union{NTuple{2, Bool}, NTuple{M, NTuple{2, Bool}}}, Real, Real} where M) where N","(Tuple{BrillouinZone, Vararg{(Pair{var""##ANON_TV#2414"", var""##ANON_TV#2415""} where var""##ANON_TV#2414"" <: NTuple{N, Number}) where var""##ANON_TV#2415"" <: NTuple{N, Number}}, Union{NTuple{2, Bool}, NTuple{M, NTuple{2, Bool}}}, Real, Real} where M) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2414""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2415""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/QuantumLattices.jl
src/Spatials.jl,selectpath,mtsig,"(Tuple{BrillouinZone, Tuple{Vararg{Pair{<:NTuple{N, Number}, <:NTuple{N, Number}}}}, Union{NTuple{2, Bool}, NTuple{M, NTuple{2, Bool}}}, Real, Real} where M) where N","(Tuple{BrillouinZone, Tuple{Vararg{(Pair{var""##ANON_TV#2416"", var""##ANON_TV#2417""} where var""##ANON_TV#2416"" <: NTuple{N, Number}) where var""##ANON_TV#2417"" <: NTuple{N, Number}}}, Union{NTuple{2, Bool}, NTuple{M, NTuple{2, Bool}}}, Real, Real} where M) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2416""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2417""), :(Union{}), :(NTuple{N, Number}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/QuantumLattices.jl
QSymbolicsBase/src/basic_ops_homogeneous.jl,Base.:+,mtsig,"Tuple{Vararg{Symbolic{<:QObj}, 0}}","Tuple{Vararg{Symbolic{var""##ANON_TV#1559""} where var""##ANON_TV#1559"" <: QObj, 0}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1559""), :(Union{}), :QObj, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/QuantumSymbolics.jl
src/multidimensional.jl,Base.to_indices,mtsig,"Tuple{AbstractQuasiArray, Tuple{Vararg{Union{Integer, CartesianIndex, StaticArray{<:Tuple, Int}}}}}","Tuple{AbstractQuasiArray, Tuple{Vararg{Union{Integer, CartesianIndex, StaticArray{var""##ANON_TV#1701"", Int} where var""##ANON_TV#1701"" <: Tuple}}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1701""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/QuasiArrays.jl
src/quasiadjtrans.jl,hcat,mtsig,"Tuple{Vararg{QuasiAdjoint{<:Any, <:Vector}}}","Tuple{Vararg{(QuasiAdjoint{var""##ANON_TV#1708"", var""##ANON_TV#1709""} where var""##ANON_TV#1708"" <: Any) where var""##ANON_TV#1709"" <: Vector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1708""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1709""), :(Union{}), :Vector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/QuasiArrays.jl
src/quasiadjtrans.jl,hcat,mtsig,"Tuple{Vararg{QuasiTranspose{<:Any, <:Vector}}}","Tuple{Vararg{(QuasiTranspose{var""##ANON_TV#1710"", var""##ANON_TV#1711""} where var""##ANON_TV#1710"" <: Any) where var""##ANON_TV#1711"" <: Vector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1710""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1711""), :(Union{}), :Vector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/QuasiArrays.jl
src/quasibroadcast.jl,_eachindex,mtsig,"Tuple{NTuple{N, AbstractQuasiVector{<:Number}}} where N","Tuple{NTuple{N, AbstractQuasiVector{var""##ANON_TV#1747""} where var""##ANON_TV#1747"" <: Number}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1747""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/QuasiArrays.jl
src/quasiconcat.jl,ApplyStyle,mtsig,"Tuple{typeof(hcat), Vararg{Type{<:AbstractQuasiArray}}}","Tuple{typeof(hcat), Vararg{Type{var""##ANON_TV#1759""} where var""##ANON_TV#1759"" <: AbstractQuasiArray}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1759""), :(Union{}), :AbstractQuasiArray, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/QuasiArrays.jl
src/Box.jl,GridBox,mtsig,"(Tuple{NTuple{D, Int}, NTuple{D, Union{Array{T, 0}, T}}, Union{AbstractVector{T}, NTuple{D, T}}, NTuple{D, Bool}, NTuple{D, Int}} where D) where T <: AbstractFloat","(Tuple{NTuple{D, Int}, NTuple{D, Union{Array{T, 0}, T}}, Union{AbstractVector{T}, NTuple{D, T}}, NTuple{D, Bool}, NTuple{D, Int}} where D) where T <: AbstractFloat","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/Quiqbox.jl
src/HartreeFock.jl,<NOT A FUNSIG>,tyassorann,"NTuple{L, Vector{<:Pair}}","NTuple{L, Vector{var""##ANON_TV#1901""} where var""##ANON_TV#1901"" <: Pair}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1901""), :(Union{}), :Pair, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Quiqbox.jl
src/Tools.jl,hasBoolRelation,mtsig,"(Tuple{Function, F1, F2, Bool, Bool, Bool} where StructuredFunction <: F2 <: Function) where StructuredFunction <: F1 <: Function","(Tuple{Function, F1, F2, Bool, Bool, Bool} where StructuredFunction <: F2 <: Function) where StructuredFunction <: F1 <: Function","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:F2, :StructuredFunction, :Function, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F1, :StructuredFunction, :Function, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,false,true,true,false,data/ta-info/all/Quiqbox.jl
src/Tools.jl,tupleDiff,mtsig,"Tuple{Vararg{NTuple{<:Any, T}}} where T","Tuple{Vararg{NTuple{var""##ANON_TV#1974"", T} where var""##ANON_TV#1974"" <: Any}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1974""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/Quiqbox.jl
src/Tools.jl,genTupleCoords,mtsig,"(Tuple{Type{T1}, Tuple{AbstractVector{<:T2}, Vararg{AbstractVector{<:T2}}}} where T2) where T1","(Tuple{Type{T1}, Tuple{AbstractVector{var""##ANON_TV#1976""} where var""##ANON_TV#1976"" <: T2, Vararg{AbstractVector{var""##ANON_TV#1977""} where var""##ANON_TV#1977"" <: T2}}} where T2) where T1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1976""), :(Union{}), :T2, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1977""), :(Union{}), :T2, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCTuple), list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/Quiqbox.jl
src/NaiveParserc.jl,crate,mtsig,Tuple{Type{Vector{T} where T}},Tuple{Type{Vector{T} where T}},"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/RBNF.jl
src/NaiveParserc.jl,crate,mtsig,"Tuple{Type{Union{T, Nothing}}} where T","Tuple{Type{Union{T, Nothing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/RBNF.jl
src/convert/default.jl,sexpclass,mtsig,"Tuple{AbstractArray{Union{T, Missing}}} where T <: $J","Tuple{AbstractArray{Union{T, Missing}}} where T <: $J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :($(Expr(:$, :J))), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,true,1,true,true,false,true,false,false,true,true,data/ta-info/all/RCall.jl
src/convert/missing.jl,rcopy,mtsig,"Tuple{Type{Array{Union{T, Missing}}}, Ptr{$S}} where T","Tuple{Type{Array{Union{T, Missing}}}, Ptr{$S}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,true,1,true,true,false,true,false,false,true,true,data/ta-info/all/RCall.jl
src/convert/missing.jl,rcopy,mtsig,"Tuple{Type{Vector{Union{T, Missing}}}, Ptr{$S}} where T","Tuple{Type{Vector{Union{T, Missing}}}, Ptr{$S}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,true,1,true,true,false,true,false,false,true,true,data/ta-info/all/RCall.jl
src/convert/missing.jl,sexp,mtsig,"Tuple{Type{RClass{$(QuoteNode(C))}}, AbstractArray{Union{T, Missing}}} where T <: $J","Tuple{Type{RClass{$(QuoteNode(C))}}, AbstractArray{Union{T, Missing}}} where T <: $J","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :($(Expr(:$, :J))), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,true,1,true,true,false,true,false,false,true,true,data/ta-info/all/RCall.jl
src/missing.jl,remove_missing,mtsig,"Tuple{AbstractVector{Union{T, Missing}}} where T","Tuple{AbstractVector{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ROCAnalysis.jl
src/actionlib.jl,waitForResult,mtsig,"Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/actionlib.jl,waitForResult,mtsig,"Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N where N}}","Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/actionlib.jl,waitForServer,mtsig,"Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/actionlib.jl,waitForServer,mtsig,"Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N where N}}","Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/actionlib.jl,sendGoalAndWait,mtsig,"Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N where N}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N where N}}","Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N where N}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/actionlib.jl,sendGoalAndWait,mtsig,"Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/actionlib.jl,sendGoalAndWait,mtsig,"Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N where N}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N where N}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/actionlib.jl,sendGoalAndWait,mtsig,"Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N where N}}","Tuple{Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/nodehandle.jl,shutdown,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::NodeHandle"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::NodeHandle"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::NodeHandle"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::NodeHandle"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/publisher.jl,getNumSubscribers,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/publisher.jl,getTopic,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/publisher.jl,isLatched,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/publisher.jl,publish,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N}, Cxx.CxxCore.CppValue}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N}, Cxx.CxxCore.CppValue}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/publisher.jl,publish,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N}, Cxx.CxxCore.CppPtr}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N}, Cxx.CxxCore.CppPtr}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/publisher.jl,shutdown,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Publisher"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/serviceClient.jl,call,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N}, Cxx.CxxCore.CppValue}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N}, Cxx.CxxCore.CppValue}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/serviceClient.jl,call,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N}, Cxx.CxxCore.CppPtr}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N}, Cxx.CxxCore.CppPtr}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/serviceClient.jl,exists,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/serviceClient.jl,getService,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/serviceClient.jl,isPersistent,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/serviceClient.jl,isValid,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceClient"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/serviceServer.jl,getService,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceServer"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceServer"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceServer"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceServer"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/serviceServer.jl,shutdown,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceServer"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceServer"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceServer"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::ServiceServer"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/subscriber.jl,getNumPublishers,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Subscriber"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Subscriber"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Subscriber"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Subscriber"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/subscriber.jl,getTopic,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Subscriber"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Subscriber"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Subscriber"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Subscriber"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/subscriber.jl,shutdown,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Subscriber"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Subscriber"")}, (false, false, false)}, N} where N}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Subscriber"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Subscriber"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,sendTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::TransformBroadcaster"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::TransformStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::TransformStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::TransformStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::TransformBroadcaster"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::TransformStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::TransformStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::TransformStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,sendTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::StaticTransformBroadcaster"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::TransformStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::TransformStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::TransformStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::StaticTransformBroadcaster"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::TransformStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::TransformStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::TransformStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,canTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,canTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,canTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,canTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,canTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,canTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,canTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,canTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,canTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,canTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,lookupTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,lookupTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,lookupTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,lookupTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,lookupTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,lookupTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,lookupTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,lookupTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,lookupTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,lookupTransform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, String, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, String, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,transform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PoseStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PoseStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PoseStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PoseStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PoseStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PoseStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,transform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PoseStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PoseStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PoseStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PoseStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PoseStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PoseStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,5,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,transform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PointStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PointStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PointStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PointStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PointStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PointStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,transform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PointStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PointStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PointStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PointStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PointStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::PointStamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,5,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,transform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Vector3Stamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Vector3Stamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Vector3Stamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Vector3Stamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Vector3Stamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Vector3Stamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,3,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,transform,mtsig,"Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Vector3Stamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Vector3Stamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Vector3Stamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}}","Tuple{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""tf2_ros::Buffer"")}, (false, false, false)}, (false, false, false)}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Vector3Stamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Vector3Stamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Vector3Stamped_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (true, false, false)}, (false, false, false)}}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N}, String, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,5,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,normalize,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,angle,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,angleShortestPath,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,dot,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,getAngle,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,getAngleShortestPath,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,inverse,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,getAxis,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,length,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,length2,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,slerp,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Number}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,setRotation,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Array, Vector}, Number}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Array, Vector}, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,Base.:-,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,Base.:-,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,Base.:*,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/tf.jl,Base.:+,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""geometry_msgs::Quaternion_"")}, Tuple{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppTemplate{Cxx.CxxCore.CppBaseType{Symbol(""std::allocator"")}, Tuple{Nothing}}, (false, false, false)}}}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,Rate,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,reset,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,sleep,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,cycleTime,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,expectedCycleTime,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,Duration,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Rate"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,sleep,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,toSec,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,init,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,isSimTime,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,isSystemTime,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,isValid,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,now,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,setNow,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,setNow,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,setNow,mtsig,"Tuple{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,shutdown,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,sleepUntil,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,sleepUntil,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,sleepUntil,mtsig,"Tuple{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}}","Tuple{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,useSystemTime,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,waitForValid,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,toSec,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,2,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,Base.getproperty,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}, Symbol}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}, Symbol}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,4,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,Base.setproperty!,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}, Symbol, Number}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}, Symbol, Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,4,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,Base.:+,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,8,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/time.jl,Base.:-,mtsig,"Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}}","Tuple{Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}, Union{Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Time"")}, (false, false, false)}, (false, false, false)}, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, (false, false, false)}, Cxx.CxxCore.CppValue{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, N} where N, Cxx.CxxCore.CppPtr{Cxx.CxxCore.CxxQualType{Cxx.CxxCore.CppBaseType{Symbol(""ros::Duration"")}, (false, false, false)}, (false, false, false)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple))]",false,true,8,true,true,true,true,true,true,true,true,data/ta-info/all/ROS.jl
src/sequence_spaces/arithmetic/fft.jl,fft_size,mtsig,"Tuple{TensorSpace{<:NTuple{N, BaseSpace}}, TensorSpace{<:NTuple{N, BaseSpace}}, Vararg{TensorSpace{<:NTuple{N, BaseSpace}}}} where N","Tuple{TensorSpace{var""##ANON_TV#3030""} where var""##ANON_TV#3030"" <: NTuple{N, BaseSpace}, TensorSpace{var""##ANON_TV#3031""} where var""##ANON_TV#3031"" <: NTuple{N, BaseSpace}, Vararg{TensorSpace{var""##ANON_TV#3032""} where var""##ANON_TV#3032"" <: NTuple{N, BaseSpace}}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3030""), :(Union{}), :(NTuple{N, BaseSpace}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3031""), :(Union{}), :(NTuple{N, BaseSpace}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3032""), :(Union{}), :(NTuple{N, BaseSpace}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/RadiiPolynomial.jl
src/containers.jl,<NOT A FUNSIG>,tyassorann,"Type{NTuple{N, TT} where N}","Type{NTuple{N, TT} where N}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/RandomExtensions.jl
src/sampling.jl,maketype,mtsig,"Tuple{Type{Pair{X, Y} where X}, Any, Any} where Y","Tuple{Type{Pair{X, Y} where X}, Any, Any} where Y","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:X, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Y, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/RandomExtensions.jl
src/sampling.jl,make,mtsig,"Tuple{Type{NTuple{N, T} where N}, Integer} where T","Tuple{Type{NTuple{N, T} where N}, Integer} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/RandomExtensions.jl
src/sampling.jl,make,mtsig,"Tuple{Type{NTuple{N, T} where N}, Any, Integer} where T","Tuple{Type{NTuple{N, T} where N}, Any, Integer} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/RandomExtensions.jl
src/sampling.jl,make,mtsig,"(Tuple{Type{NTuple{N, T} where N}, Type{X}, Integer} where X) where T","(Tuple{Type{NTuple{N, T} where N}, Type{X}, Integer} where X) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:X, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/RandomExtensions.jl
src/sampling.jl,maketype,mtsig,"Tuple{Type{($D){K, V} where K}, Any, Integer} where V","Tuple{Type{($D){K, V} where K}, Any, Integer} where V","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/RandomExtensions.jl
src/sampling.jl,maketype,mtsig,"Tuple{Type{Array{T, N} where T}, Any, Dims{N}} where N","Tuple{Type{Array{T, N} where T}, Any, Dims{N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/RandomExtensions.jl
src/array.jl,DD.DimTable,mtsig,"Tuple{Vararg{Tuple{<:AbstractRaster, Vararg{<:AbstractRaster}}}}","Tuple{Vararg{Tuple{var""##ANON_TV#2120"", Vararg{var""##ANON_TV#2121""} where var""##ANON_TV#2121"" <: AbstractRaster} where var""##ANON_TV#2120"" <: AbstractRaster}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2121""), :(Union{}), :AbstractRaster, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2120""), :(Union{}), :AbstractRaster, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Rasters.jl
src/methods/rasterize.jl,_rasterize_iterable!,mtsig,"Tuple{Any, Any, Nothing, Nothing, Any, NamedTuple{<:Any, Tuple{<:Iterators.Cycle, Vararg}}, Any, Vararg{Any}}","Tuple{Any, Any, Nothing, Nothing, Any, NamedTuple{var""##ANON_TV#2235"", Tuple{var""##ANON_TV#2236"", Vararg} where var""##ANON_TV#2236"" <: Iterators.Cycle} where var""##ANON_TV#2235"" <: Any, Any, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2236""), :(Union{}), :(Iterators.Cycle), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2235""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Rasters.jl
src/MOI_wrapper.jl,<NOT A FUNSIG>,tyassorann,"Dict{MOI.ConstraintIndex{VOV, <:Union{VLS, MOI.SOS1{Float64}, MOI.SOS2{Float64}, MOI.Complements}}, Vector{Cuint}}","Dict{MOI.ConstraintIndex{VOV, var""##ANON_TV#1916""} where var""##ANON_TV#1916"" <: Union{VLS, MOI.SOS1{Float64}, MOI.SOS2{Float64}, MOI.Complements}, Vector{Cuint}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1916""), :(Union{}), :(Union{VLS, MOI.SOS1{Float64}, MOI.SOS2{Float64}, MOI.Complements}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ReSHOP.jl
src/MOI_wrapper.jl,<NOT A FUNSIG>,tyassorann,"Dict{MOI.ConstraintIndex{VAF, <:Union{VLS, MOI.Complements}}, Vector{Cuint}}","Dict{MOI.ConstraintIndex{VAF, var""##ANON_TV#1917""} where var""##ANON_TV#1917"" <: Union{VLS, MOI.Complements}, Vector{Cuint}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1917""), :(Union{}), :(Union{VLS, MOI.Complements}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ReSHOP.jl
src/MOI_wrapper.jl,<NOT A FUNSIG>,tyassorann,"Dict{MOI.ConstraintIndex{MOI.ScalarQuadraticFunction{Float64}, <:SS}, Cuint}","Dict{MOI.ConstraintIndex{MOI.ScalarQuadraticFunction{Float64}, var""##ANON_TV#1918""} where var""##ANON_TV#1918"" <: SS, Cuint}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1918""), :(Union{}), :SS, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ReSHOP.jl
src/MOI_wrapper.jl,<NOT A FUNSIG>,tyassorann,"Dict{MOI.ConstraintIndex{VOV, <:Union{MOI.SOS1{Float64}, MOI.SOS2{Float64}}}, Union{MOI.SOS1{Float64}, MOI.SOS2{Float64}}}","Dict{MOI.ConstraintIndex{VOV, var""##ANON_TV#1919""} where var""##ANON_TV#1919"" <: Union{MOI.SOS1{Float64}, MOI.SOS2{Float64}}, Union{MOI.SOS1{Float64}, MOI.SOS2{Float64}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1919""), :(Union{}), :(Union{MOI.SOS1{Float64}, MOI.SOS2{Float64}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ReSHOP.jl
src/constraints/specifications/factorisation.jl,Base.:*,mtsig,"Tuple{Tuple{Vararg{T where T <: Union{<:FactorisationConstraintsSpecification, <:FactorisationConstraintsEntry}}}, Tuple{Vararg{T where T <: Union{<:FactorisationConstraintsSpecification, <:FactorisationConstraintsEntry}}}}","Tuple{Tuple{Vararg{T where T <: ((Union{var""##ANON_TV#1760"", var""##ANON_TV#1761""} where var""##ANON_TV#1760"" <: FactorisationConstraintsSpecification) where var""##ANON_TV#1761"" <: FactorisationConstraintsEntry)}}, Tuple{Vararg{T where T <: ((Union{var""##ANON_TV#1762"", var""##ANON_TV#1763""} where var""##ANON_TV#1762"" <: FactorisationConstraintsSpecification) where var""##ANON_TV#1763"" <: FactorisationConstraintsEntry)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1760""), :(Union{}), :FactorisationConstraintsSpecification, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1761""), :(Union{}), :FactorisationConstraintsEntry, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:T, :(Union{}), :((Union{var""##ANON_TV#1760"", var""##ANON_TV#1761""} where var""##ANON_TV#1760"" <: FactorisationConstraintsSpecification) where var""##ANON_TV#1761"" <: FactorisationConstraintsEntry), DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1762""), :(Union{}), :FactorisationConstraintsSpecification, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1763""), :(Union{}), :FactorisationConstraintsEntry, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:T, :(Union{}), :((Union{var""##ANON_TV#1762"", var""##ANON_TV#1763""} where var""##ANON_TV#1762"" <: FactorisationConstraintsSpecification) where var""##ANON_TV#1763"" <: FactorisationConstraintsEntry), DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,6,true,true,true,true,true,true,true,true,data/ta-info/all/ReactiveMP.jl
src/constraints/specifications/factorisation.jl,Base.:*,mtsig,"Tuple{Union{<:FactorisationConstraintsSpecification, <:FactorisationConstraintsEntry}, Tuple{Vararg{T where T <: Union{<:FactorisationConstraintsSpecification, <:FactorisationConstraintsEntry}}}}","Tuple{(Union{var""##ANON_TV#1764"", var""##ANON_TV#1765""} where var""##ANON_TV#1764"" <: FactorisationConstraintsSpecification) where var""##ANON_TV#1765"" <: FactorisationConstraintsEntry, Tuple{Vararg{T where T <: ((Union{var""##ANON_TV#1766"", var""##ANON_TV#1767""} where var""##ANON_TV#1766"" <: FactorisationConstraintsSpecification) where var""##ANON_TV#1767"" <: FactorisationConstraintsEntry)}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1764""), :(Union{}), :FactorisationConstraintsSpecification, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1765""), :(Union{}), :FactorisationConstraintsEntry, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1766""), :(Union{}), :FactorisationConstraintsSpecification, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1767""), :(Union{}), :FactorisationConstraintsEntry, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:T, :(Union{}), :((Union{var""##ANON_TV#1766"", var""##ANON_TV#1767""} where var""##ANON_TV#1766"" <: FactorisationConstraintsSpecification) where var""##ANON_TV#1767"" <: FactorisationConstraintsEntry), DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,5,true,true,true,true,true,true,true,true,data/ta-info/all/ReactiveMP.jl
src/constraints/specifications/factorisation.jl,Base.:*,mtsig,"Tuple{Tuple{Vararg{T where T <: Union{<:FactorisationConstraintsSpecification, <:FactorisationConstraintsEntry}}}, Union{<:FactorisationConstraintsSpecification, <:FactorisationConstraintsEntry}}","Tuple{Tuple{Vararg{T where T <: ((Union{var""##ANON_TV#1768"", var""##ANON_TV#1769""} where var""##ANON_TV#1768"" <: FactorisationConstraintsSpecification) where var""##ANON_TV#1769"" <: FactorisationConstraintsEntry)}}, (Union{var""##ANON_TV#1770"", var""##ANON_TV#1771""} where var""##ANON_TV#1770"" <: FactorisationConstraintsSpecification) where var""##ANON_TV#1771"" <: FactorisationConstraintsEntry}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1768""), :(Union{}), :FactorisationConstraintsSpecification, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1769""), :(Union{}), :FactorisationConstraintsEntry, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:T, :(Union{}), :((Union{var""##ANON_TV#1768"", var""##ANON_TV#1769""} where var""##ANON_TV#1768"" <: FactorisationConstraintsSpecification) where var""##ANON_TV#1769"" <: FactorisationConstraintsEntry), DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1770""), :(Union{}), :FactorisationConstraintsSpecification, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1771""), :(Union{}), :FactorisationConstraintsEntry, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,false,5,true,true,true,true,true,true,true,true,data/ta-info/all/ReactiveMP.jl
src/constraints/specifications/factorisation.jl,Base.:*,mtsig,"Tuple{Tuple{Vararg{T where T <: FactorisationConstraintsEntry}}, Tuple{Vararg{T where T <: FactorisationConstraintsEntry}}}","Tuple{Tuple{Vararg{T where T <: FactorisationConstraintsEntry}}, Tuple{Vararg{T where T <: FactorisationConstraintsEntry}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :FactorisationConstraintsEntry, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:T, :(Union{}), :FactorisationConstraintsEntry, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ReactiveMP.jl
src/constraints/specifications/factorisation.jl,factorisation_split,mtsig,"Tuple{Tuple{Vararg{T where T <: FactorisationConstraintsEntry}}, Tuple{Vararg{T where T <: FactorisationConstraintsEntry}}}","Tuple{Tuple{Vararg{T where T <: FactorisationConstraintsEntry}}, Tuple{Vararg{T where T <: FactorisationConstraintsEntry}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :FactorisationConstraintsEntry, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:T, :(Union{}), :FactorisationConstraintsEntry, DataStructures.LinkedList{JuliaSub.TypeConstructor}[nil(JuliaSub.TypeConstructor)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ReactiveMP.jl
src/nodes/gamma_mixture.jl,collect_factorisation,mtsig,"(Tuple{Type{<:GammaMixture{N}}, NTuple{R, Tuple{<:Integer}}} where R) where N","(Tuple{Type{var""##ANON_TV#1962""} where var""##ANON_TV#1962"" <: GammaMixture{N}, NTuple{R, Tuple{var""##ANON_TV#1963""} where var""##ANON_TV#1963"" <: Integer}} where R) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1962""), :(Union{}), :(GammaMixture{N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1963""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/ReactiveMP.jl
src/nodes/mixture.jl,collect_factorisation,mtsig,"(Tuple{Type{<:Mixture{N}}, NTuple{R, Tuple{<:Integer}}} where R) where N","(Tuple{Type{var""##ANON_TV#1973""} where var""##ANON_TV#1973"" <: Mixture{N}, NTuple{R, Tuple{var""##ANON_TV#1974""} where var""##ANON_TV#1974"" <: Integer}} where R) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1973""), :(Union{}), :(Mixture{N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1974""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/ReactiveMP.jl
src/nodes/normal_mixture.jl,collect_factorisation,mtsig,"(Tuple{Type{<:NormalMixture{N}}, NTuple{R, Tuple{<:Integer}}} where R) where N","(Tuple{Type{var""##ANON_TV#1986""} where var""##ANON_TV#1986"" <: NormalMixture{N}, NTuple{R, Tuple{var""##ANON_TV#1987""} where var""##ANON_TV#1987"" <: Integer}} where R) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1986""), :(Union{}), :(NormalMixture{N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1987""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/ReactiveMP.jl
src/LabeledArrays.jl,Base.similar,mtsig,"(Tuple{LabeledArrOrSubOrReshape, Type{Union{LabeledValue{V, K}, Missing}}, Dims} where K) where V","(Tuple{LabeledArrOrSubOrReshape, Type{Union{LabeledValue{V, K}, Missing}}, Dims} where K) where V","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/ReadStatTables.jl
src/rwd2_tables.jl,<NOT A FUNSIG>,tyassorann,"Vector{Array{T, 1} where T}","Vector{Array{T, 1} where T}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ReadWriteDlm2.jl
src/rwd2_tables.jl,Tables.table,mtsig,"Tuple{Vector{Array{T, 1} where T}, Vector{Symbol}}","Tuple{Vector{Array{T, 1} where T}, Vector{Symbol}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ReadWriteDlm2.jl
src/client.jl,convert_response,mtsig,"Tuple{Type{Union{T, Nothing}}, Any} where T <: Number","Tuple{Type{Union{T, Nothing}}, Any} where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Redis.jl
src/client.jl,convert_response,mtsig,"Tuple{Type{Union{T, Nothing}}, Any} where T <: AbstractString","Tuple{Type{Union{T, Nothing}}, Any} where T <: AbstractString","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Redis.jl
src/client.jl,convert_response,mtsig,"Tuple{Type{Array{Union{T, Nothing}, 1}}, Any} where T <: Number","Tuple{Type{Array{Union{T, Nothing}, 1}}, Any} where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Redis.jl
src/client.jl,convert_response,mtsig,"Tuple{Type{Array{Union{T, Nothing}, 1}}, Any} where T <: AbstractString","Tuple{Type{Array{Union{T, Nothing}, 1}}, Any} where T <: AbstractString","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Redis.jl
src/Collection.jl,try_pop!,mtsig,"(Tuple{AbstractDict{>:K, V}, K} where V) where K","(Tuple{AbstractDict{var""##ANON_TV#1968"", V} where var""##ANON_TV#1968"" >: K, K} where V) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1968""), :K, :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCLoBnd, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,true,false,true,data/ta-info/all/Results.jl
src/Collection.jl,try_get,mtsig,"(Tuple{AbstractDict{>:K, V}, K} where V) where K","(Tuple{AbstractDict{var""##ANON_TV#1969"", V} where var""##ANON_TV#1969"" >: K, K} where V) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1969""), :K, :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCLoBnd, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,true,false,true,data/ta-info/all/Results.jl
src/tracked.jl,Base.getindex,mtsig,"Tuple{TrackedArray, Union{Integer, Colon, AbstractArray{<:Integer}}, Vararg{Union{Integer, Colon, AbstractArray{<:Integer}}}}","Tuple{TrackedArray, Union{Integer, Colon, AbstractArray{var""##ANON_TV#3434""} where var""##ANON_TV#3434"" <: Integer}, Vararg{Union{Integer, Colon, AbstractArray{var""##ANON_TV#3435""} where var""##ANON_TV#3435"" <: Integer}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3434""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3435""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/ReverseDiff.jl
test/MacrosTests.jl,f7,mtsig,Tuple{Vararg{TrackedReal{<:AbstractFloat}}},"Tuple{Vararg{TrackedReal{var""##ANON_TV#3533""} where var""##ANON_TV#3533"" <: AbstractFloat}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3533""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ReverseDiff.jl
src/CpLookUp.jl,dict_reverse,mtsig,"Tuple{Dict{String, Tuple{Vararg{String, N}} where N}}","Tuple{Dict{String, Tuple{Vararg{String, N}} where N}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/RhsJTool.jl
src/RiemannHilbert.jl,component_indices,mtsig,"Tuple{BlockInterlacer{NTuple{N, <:AbstractFill{Bool}}}, Int, AbstractUnitRange} where N","Tuple{BlockInterlacer{NTuple{N, var""##ANON_TV#1801""} where var""##ANON_TV#1801"" <: AbstractFill{Bool}}, Int, AbstractUnitRange} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1801""), :(Union{}), :(AbstractFill{Bool}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/RiemannHilbert.jl
src/caches.jl,<NOT A FUNSIG>,tyassorann,"Vector{DynamicsResult{<:Any, M}}","Vector{DynamicsResult{var""##ANON_TV#1977"", M} where var""##ANON_TV#1977"" <: Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1977""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/RigidBodyDynamics.jl
src/mechanism_modification.jl,rand_tree_mechanism,mtsig,"Tuple{Type{T}, Function, Vararg{Type{<:JointType{T}}}} where T","Tuple{Type{T}, Function, Vararg{Type{var""##ANON_TV#2003""} where var""##ANON_TV#2003"" <: JointType{T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2003""), :(Union{}), :(JointType{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/RigidBodyDynamics.jl
src/mechanism_modification.jl,rand_tree_mechanism,mtsig,"Tuple{Function, Vararg{Type{<:JointType{T}}}} where T","Tuple{Function, Vararg{Type{var""##ANON_TV#2004""} where var""##ANON_TV#2004"" <: JointType{T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2004""), :(Union{}), :(JointType{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/RigidBodyDynamics.jl
src/mechanism_modification.jl,rand_chain_mechanism,mtsig,"Tuple{Type{T}, Vararg{Type{<:JointType{T}}}} where T","Tuple{Type{T}, Vararg{Type{var""##ANON_TV#2005""} where var""##ANON_TV#2005"" <: JointType{T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2005""), :(Union{}), :(JointType{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/RigidBodyDynamics.jl
src/mechanism_modification.jl,rand_chain_mechanism,mtsig,Tuple{Vararg{Type{<:JointType{T}}}} where T,"Tuple{Vararg{Type{var""##ANON_TV#2006""} where var""##ANON_TV#2006"" <: JointType{T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2006""), :(Union{}), :(JointType{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/RigidBodyDynamics.jl
src/mechanism_modification.jl,rand_tree_mechanism,mtsig,"Tuple{Type{T}, Vararg{Type{<:JointType{T}}}} where T","Tuple{Type{T}, Vararg{Type{var""##ANON_TV#2007""} where var""##ANON_TV#2007"" <: JointType{T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2007""), :(Union{}), :(JointType{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/RigidBodyDynamics.jl
src/mechanism_modification.jl,rand_tree_mechanism,mtsig,Tuple{Vararg{Type{<:JointType{T}}}} where T,"Tuple{Vararg{Type{var""##ANON_TV#2008""} where var""##ANON_TV#2008"" <: JointType{T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2008""), :(Union{}), :(JointType{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/RigidBodyDynamics.jl
src/mechanism_modification.jl,rand_floating_tree_mechanism,mtsig,"Tuple{Type{T}, Vararg{Type{<:JointType{T}}}} where T","Tuple{Type{T}, Vararg{Type{var""##ANON_TV#2009""} where var""##ANON_TV#2009"" <: JointType{T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2009""), :(Union{}), :(JointType{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/RigidBodyDynamics.jl
src/mechanism_modification.jl,rand_floating_tree_mechanism,mtsig,Tuple{Vararg{Type{<:JointType{T}}}} where T,"Tuple{Vararg{Type{var""##ANON_TV#2010""} where var""##ANON_TV#2010"" <: JointType{T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2010""), :(Union{}), :(JointType{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/RigidBodyDynamics.jl
src/integration.jl,<NOT A FUNSIG>,tyassorann,"Dict{DataType, Vector{D} where D <: ForwardDiff.Dual{Nothing, T}}","Dict{DataType, Vector{D} where D <: ForwardDiff.Dual{Nothing, T}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:D, :(Union{}), :(ForwardDiff.Dual{Nothing, T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/RobotDynamics.jl
src/operators/default_if_empty.jl,on_call!,mtsig,"(Tuple{Type{L}, Type{Union{L, T}}, DefaultIfEmptyOperator{T}, Any} where T) where L","(Tuple{Type{L}, Type{Union{L, T}}, DefaultIfEmptyOperator{T}, Any} where T) where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/Rocket.jl
src/operators/max.jl,on_call!,mtsig,"Tuple{Type{L}, Type{Union{L, Nothing}}, MaxOperator, Any} where L","Tuple{Type{L}, Type{Union{L, Nothing}}, MaxOperator, Any} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Rocket.jl
src/operators/max.jl,actor_proxy!,mtsig,"(Tuple{Type{Union{L, Nothing}}, MaxProxy, A} where A) where L","(Tuple{Type{Union{L, Nothing}}, MaxProxy, A} where A) where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Rocket.jl
src/operators/min.jl,on_call!,mtsig,"Tuple{Type{L}, Type{Union{L, Nothing}}, MinOperator, Any} where L","Tuple{Type{L}, Type{Union{L, Nothing}}, MinOperator, Any} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Rocket.jl
src/operators/min.jl,actor_proxy!,mtsig,"(Tuple{Type{Union{L, Nothing}}, MinProxy, A} where A) where L","(Tuple{Type{Union{L, Nothing}}, MinProxy, A} where A) where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Rocket.jl
src/operators/override.jl,on_call!,mtsig,"(Tuple{Type{L}, Type{Union{L, T}}, OverrideOperator{T}, Any} where T) where L","(Tuple{Type{L}, Type{Union{L, T}}, OverrideOperator{T}, Any} where T) where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/Rocket.jl
src/operators/some.jl,on_call!,mtsig,"Tuple{Type{Union{L, Nothing}}, Type{L}, SomeOperator, Any} where L","Tuple{Type{Union{L, Nothing}}, Type{L}, SomeOperator, Any} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Rocket.jl
src/operators/some.jl,operator_right,mtsig,"Tuple{SomeOperator, Type{Union{L, Nothing}}} where L","Tuple{SomeOperator, Type{Union{L, Nothing}}} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Rocket.jl
src/operators/sum.jl,on_call!,mtsig,"Tuple{Type{L}, Type{Union{L, Nothing}}, SumOperator, Any} where L","Tuple{Type{L}, Type{Union{L, Nothing}}, SumOperator, Any} where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Rocket.jl
src/operators/sum.jl,actor_proxy!,mtsig,"(Tuple{Type{Union{L, Nothing}}, SumProxy, A} where A) where L","(Tuple{Type{Union{L, Nothing}}, SumProxy, A} where A) where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Rocket.jl
src/roll/rollstats.jl,rollcor,mtsig,"((Tuple{V1, V2, Int} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T","((Tuple{V1, V2, Int} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V2, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V1, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/RollingFunctions.jl
src/roll/rollstats.jl,rollcov,mtsig,"((Tuple{V1, V2, Int} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T","((Tuple{V1, V2, Int} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V2, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V1, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/RollingFunctions.jl
src/roll/rollstats.jl,rollcor,mtsig,"(((Tuple{V1, V2, Int, AbstractVector{S}} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T) where S","(((Tuple{V1, V2, Int, AbstractVector{S}} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T) where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V2, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V1, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,false,true,true,data/ta-info/all/RollingFunctions.jl
src/roll/rollstats.jl,rollcov,mtsig,"(((Tuple{V1, V2, Int, AbstractVector{S}} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T) where S","(((Tuple{V1, V2, Int, AbstractVector{S}} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T) where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V2, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V1, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,false,true,true,data/ta-info/all/RollingFunctions.jl
src/run/runstats.jl,runcor,mtsig,"((Tuple{V1, V2, Int} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T","((Tuple{V1, V2, Int} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V2, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V1, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/RollingFunctions.jl
src/run/runstats.jl,runcov,mtsig,"((Tuple{V1, V2, Int} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T","((Tuple{V1, V2, Int} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V2, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V1, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/RollingFunctions.jl
src/run/runstats.jl,runcor,mtsig,"(((Tuple{V1, V2, Int, AbstractVector{S}} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T) where S","(((Tuple{V1, V2, Int, AbstractVector{S}} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T) where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V2, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V1, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,false,true,true,data/ta-info/all/RollingFunctions.jl
src/run/runstats.jl,runcov,mtsig,"(((Tuple{V1, V2, Int, AbstractVector{S}} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T) where S","(((Tuple{V1, V2, Int, AbstractVector{S}} where V2 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where V1 <: Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}) where T) where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V2, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V1, :(Union{}), :(Union{AbstractVector{T}, AbstractVector{Union{Missing, T}}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,false,true,true,data/ta-info/all/RollingFunctions.jl
src/legendre.jl,$op!,mtsig,"Tuple{AbstractVector{Cdouble}, Integer, Union{AbstractFloat, Integer}, Integer, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractVector{Cdouble}, Integer, Union{AbstractFloat, Integer}, Integer, Integer, Optional{Ref{var""##ANON_TV#1975""} where var""##ANON_TV#1975"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1975""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/legendre.jl,$op,mtsig,"Tuple{Integer, Union{AbstractFloat, Integer}, Integer, Integer, Optional{Ref{<:Integer}}}","Tuple{Integer, Union{AbstractFloat, Integer}, Integer, Integer, Optional{Ref{var""##ANON_TV#1976""} where var""##ANON_TV#1976"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1976""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/legendre.jl,$op_d1!,mtsig,"Tuple{AbstractVector{Cdouble}, AbstractVector{Cdouble}, Integer, Union{AbstractFloat, Integer}, Integer, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractVector{Cdouble}, AbstractVector{Cdouble}, Integer, Union{AbstractFloat, Integer}, Integer, Integer, Optional{Ref{var""##ANON_TV#1977""} where var""##ANON_TV#1977"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1977""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/legendre.jl,$op_d1,mtsig,"Tuple{Integer, Union{AbstractFloat, Integer}, Integer, Integer, Optional{Ref{<:Integer}}}","Tuple{Integer, Union{AbstractFloat, Integer}, Integer, Integer, Optional{Ref{var""##ANON_TV#1978""} where var""##ANON_TV#1978"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1978""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/legendre.jl,$op!,mtsig,"Tuple{AbstractVector{Cdouble}, Integer, Union{AbstractFloat, Integer}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractVector{Cdouble}, Integer, Union{AbstractFloat, Integer}, Integer, Optional{Ref{var""##ANON_TV#1979""} where var""##ANON_TV#1979"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1979""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/legendre.jl,$op,mtsig,"Tuple{Integer, Union{AbstractFloat, Integer}, Integer, Optional{Ref{<:Integer}}}","Tuple{Integer, Union{AbstractFloat, Integer}, Integer, Optional{Ref{var""##ANON_TV#1980""} where var""##ANON_TV#1980"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1980""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/legendre.jl,$op_d1!,mtsig,"Tuple{AbstractVector{Cdouble}, AbstractVector{Cdouble}, Integer, Union{AbstractFloat, Integer}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractVector{Cdouble}, AbstractVector{Cdouble}, Integer, Union{AbstractFloat, Integer}, Integer, Optional{Ref{var""##ANON_TV#1981""} where var""##ANON_TV#1981"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1981""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/legendre.jl,$op_d1,mtsig,"Tuple{Integer, Union{AbstractFloat, Integer}, Integer, Optional{Ref{<:Integer}}}","Tuple{Integer, Union{AbstractFloat, Integer}, Integer, Optional{Ref{var""##ANON_TV#1982""} where var""##ANON_TV#1982"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1982""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/legendre.jl,$op!,mtsig,"Tuple{AbstractVector{Cdouble}, Integer, Union{AbstractFloat, Integer}, Optional{Ref{<:Integer}}}","Tuple{AbstractVector{Cdouble}, Integer, Union{AbstractFloat, Integer}, Optional{Ref{var""##ANON_TV#1983""} where var""##ANON_TV#1983"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1983""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/legendre.jl,$op,mtsig,"Tuple{Integer, Union{AbstractFloat, Integer}, Optional{Ref{<:Integer}}}","Tuple{Integer, Union{AbstractFloat, Integer}, Optional{Ref{var""##ANON_TV#1984""} where var""##ANON_TV#1984"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1984""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/legendre.jl,$op_d1!,mtsig,"Tuple{AbstractVector{Cdouble}, AbstractVector{Cdouble}, Integer, Union{AbstractFloat, Integer}, Optional{Ref{<:Integer}}}","Tuple{AbstractVector{Cdouble}, AbstractVector{Cdouble}, Integer, Union{AbstractFloat, Integer}, Optional{Ref{var""##ANON_TV#1985""} where var""##ANON_TV#1985"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1985""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/legendre.jl,$op_d1,mtsig,"Tuple{Integer, Union{AbstractFloat, Integer}, Optional{Ref{<:Integer}}}","Tuple{Integer, Union{AbstractFloat, Integer}, Optional{Ref{var""##ANON_TV#1986""} where var""##ANON_TV#1986"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1986""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/misc.jl,Wigner3j!,mtsig,"Tuple{AbstractVector{Cdouble}, Integer, Integer, Integer, Integer, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractVector{Cdouble}, Integer, Integer, Integer, Integer, Integer, Optional{Ref{var""##ANON_TV#1987""} where var""##ANON_TV#1987"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1987""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/misc.jl,Wigner3j,mtsig,"Tuple{Integer, Integer, Integer, Integer, Integer, Optional{Ref{<:Integer}}}","Tuple{Integer, Integer, Integer, Integer, Integer, Optional{Ref{var""##ANON_TV#1988""} where var""##ANON_TV#1988"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1988""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/storage.jl,SHCilmToCindex!,mtsig,"Tuple{AbstractArray{Cdouble, 2}, AbstractArray{Cdouble, 3}, Optional{Cint}, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 2}, AbstractArray{Cdouble, 3}, Optional{Cint}, Optional{Ref{var""##ANON_TV#1989""} where var""##ANON_TV#1989"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1989""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/storage.jl,SHCilmToCindex,mtsig,"Tuple{AbstractArray{Cdouble, 3}, Optional{Cint}, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 3}, Optional{Cint}, Optional{Ref{var""##ANON_TV#1990""} where var""##ANON_TV#1990"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1990""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/storage.jl,SHCindexToCilm!,mtsig,"Tuple{AbstractArray{Cdouble, 3}, AbstractArray{Cdouble, 2}, Optional{Cint}, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 3}, AbstractArray{Cdouble, 2}, Optional{Cint}, Optional{Ref{var""##ANON_TV#1991""} where var""##ANON_TV#1991"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1991""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/storage.jl,SHCindexToCilm,mtsig,"Tuple{AbstractArray{Cdouble, 2}, Optional{Cint}, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 2}, Optional{Cint}, Optional{Ref{var""##ANON_TV#1992""} where var""##ANON_TV#1992"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1992""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/storage.jl,SHCilmToVector!,mtsig,"Tuple{AbstractVector{Cdouble}, AbstractArray{Cdouble, 3}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractVector{Cdouble}, AbstractArray{Cdouble, 3}, Integer, Optional{Ref{var""##ANON_TV#1993""} where var""##ANON_TV#1993"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1993""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/storage.jl,SHCilmToVector,mtsig,"Tuple{AbstractArray{Cdouble, 3}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 3}, Integer, Optional{Ref{var""##ANON_TV#1994""} where var""##ANON_TV#1994"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1994""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/storage.jl,SHVectorToCilm!,mtsig,"Tuple{AbstractArray{Cdouble, 3}, AbstractVector{Cdouble}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 3}, AbstractVector{Cdouble}, Integer, Optional{Ref{var""##ANON_TV#1995""} where var""##ANON_TV#1995"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1995""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/storage.jl,SHVectorToCilm,mtsig,"Tuple{AbstractVector{Cdouble}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractVector{Cdouble}, Integer, Optional{Ref{var""##ANON_TV#1996""} where var""##ANON_TV#1996"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1996""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHExpandDH!,mtsig,"Tuple{AbstractArray{Cdouble, 3}, AbstractArray{Cdouble, 2}, Integer, Integer, Integer, Integer, Optional{Integer}, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 3}, AbstractArray{Cdouble, 2}, Integer, Integer, Integer, Integer, Optional{Integer}, Optional{Ref{var""##ANON_TV#1997""} where var""##ANON_TV#1997"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1997""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHExpandDH,mtsig,"Tuple{AbstractArray{Cdouble, 2}, Integer, Integer, Integer, Integer, Optional{Integer}, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 2}, Integer, Integer, Integer, Integer, Optional{Integer}, Optional{Ref{var""##ANON_TV#1998""} where var""##ANON_TV#1998"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1998""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,MakeGridDH!,mtsig,"Tuple{AbstractArray{Cdouble, 2}, AbstractArray{Cdouble, 3}, Integer, Integer, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 2}, AbstractArray{Cdouble, 3}, Integer, Integer, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{var""##ANON_TV#1999""} where var""##ANON_TV#1999"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1999""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,MakeGridDH,mtsig,"Tuple{AbstractArray{Cdouble, 3}, Integer, Integer, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 3}, Integer, Integer, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{var""##ANON_TV#2000""} where var""##ANON_TV#2000"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2000""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHExpandDH!,mtsig,"Tuple{AbstractArray{Complex{Cdouble}, 3}, AbstractArray{Complex{Cdouble}, 2}, Integer, Integer, Integer, Integer, Optional{Integer}, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Complex{Cdouble}, 3}, AbstractArray{Complex{Cdouble}, 2}, Integer, Integer, Integer, Integer, Optional{Integer}, Optional{Ref{var""##ANON_TV#2001""} where var""##ANON_TV#2001"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2001""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHExpandDH,mtsig,"Tuple{AbstractArray{Complex{Cdouble}, 2}, Integer, Integer, Integer, Integer, Optional{Integer}, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Complex{Cdouble}, 2}, Integer, Integer, Integer, Integer, Optional{Integer}, Optional{Ref{var""##ANON_TV#2002""} where var""##ANON_TV#2002"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2002""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,MakeGridDH!,mtsig,"Tuple{AbstractArray{Complex{Cdouble}, 2}, AbstractArray{Complex{Cdouble}, 3}, Integer, Integer, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Complex{Cdouble}, 2}, AbstractArray{Complex{Cdouble}, 3}, Integer, Integer, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{var""##ANON_TV#2003""} where var""##ANON_TV#2003"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2003""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,MakeGridDH,mtsig,"Tuple{AbstractArray{Complex{Cdouble}, 3}, Integer, Integer, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Complex{Cdouble}, 3}, Integer, Integer, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{var""##ANON_TV#2004""} where var""##ANON_TV#2004"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2004""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,MakeGradientDH!,mtsig,"Tuple{AbstractArray{Cdouble, 2}, AbstractArray{Cdouble, 2}, AbstractArray{Cdouble, 3}, Integer, Integer, Optional{Integer}, Integer, Union{Nothing, AbstractFloat, Integer}, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 2}, AbstractArray{Cdouble, 2}, AbstractArray{Cdouble, 3}, Integer, Integer, Optional{Integer}, Integer, Union{Nothing, AbstractFloat, Integer}, Optional{Ref{var""##ANON_TV#2005""} where var""##ANON_TV#2005"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2005""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,MakeGradientDH,mtsig,"Tuple{AbstractArray{Cdouble, 3}, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 3}, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{var""##ANON_TV#2006""} where var""##ANON_TV#2006"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2006""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHGLQ!,mtsig,"Tuple{AbstractVector{Cdouble}, AbstractVector{Cdouble}, Optional{AbstractArray{Cdouble, 2}}, Integer, Integer, Integer, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractVector{Cdouble}, AbstractVector{Cdouble}, Optional{AbstractArray{Cdouble, 2}}, Integer, Integer, Integer, Integer, Optional{Ref{var""##ANON_TV#2007""} where var""##ANON_TV#2007"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2007""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHGLQ,mtsig,"Tuple{Optional{AbstractArray{Cdouble, 2}}, Integer, Integer, Integer, Integer, Optional{Ref{<:Integer}}}","Tuple{Optional{AbstractArray{Cdouble, 2}}, Integer, Integer, Integer, Integer, Optional{Ref{var""##ANON_TV#2008""} where var""##ANON_TV#2008"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2008""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHExpandGLQ!,mtsig,"Tuple{AbstractArray{Cdouble, 3}, Integer, AbstractArray{Cdouble, 2}, AbstractVector{Cdouble}, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 3}, Integer, AbstractArray{Cdouble, 2}, AbstractVector{Cdouble}, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Optional{Ref{var""##ANON_TV#2009""} where var""##ANON_TV#2009"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2009""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHExpandGLQ,mtsig,"Tuple{Integer, AbstractArray{Cdouble, 2}, AbstractVector{Cdouble}, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Optional{Ref{<:Integer}}}","Tuple{Integer, AbstractArray{Cdouble, 2}, AbstractVector{Cdouble}, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Optional{Ref{var""##ANON_TV#2010""} where var""##ANON_TV#2010"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2010""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,MakeGridGLQ!,mtsig,"Tuple{AbstractArray{Cdouble, 2}, AbstractArray{Cdouble, 3}, Integer, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 2}, AbstractArray{Cdouble, 3}, Integer, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{var""##ANON_TV#2011""} where var""##ANON_TV#2011"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2011""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,MakeGridGLQ,mtsig,"Tuple{AbstractArray{Cdouble, 3}, Integer, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 3}, Integer, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{var""##ANON_TV#2012""} where var""##ANON_TV#2012"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2012""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHExpandGLQ!,mtsig,"Tuple{AbstractArray{Complex{Cdouble}, 3}, Integer, AbstractArray{Complex{Cdouble}, 2}, AbstractVector{Cdouble}, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Complex{Cdouble}, 3}, Integer, AbstractArray{Complex{Cdouble}, 2}, AbstractVector{Cdouble}, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Optional{Ref{var""##ANON_TV#2013""} where var""##ANON_TV#2013"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2013""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHExpandGLQ,mtsig,"Tuple{Integer, AbstractArray{Complex{Cdouble}, 2}, AbstractVector{Cdouble}, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Optional{Ref{<:Integer}}}","Tuple{Integer, AbstractArray{Complex{Cdouble}, 2}, AbstractVector{Cdouble}, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Optional{Ref{var""##ANON_TV#2014""} where var""##ANON_TV#2014"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2014""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,MakeGridGLQ!,mtsig,"Tuple{AbstractArray{Complex{Cdouble}, 2}, AbstractArray{Complex{Cdouble}, 3}, Integer, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Complex{Cdouble}, 2}, AbstractArray{Complex{Cdouble}, 3}, Integer, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{var""##ANON_TV#2015""} where var""##ANON_TV#2015"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2015""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,MakeGridGLQ,mtsig,"Tuple{AbstractArray{Complex{Cdouble}, 3}, Integer, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Complex{Cdouble}, 3}, Integer, Optional{AbstractArray{Cdouble, 2}}, Optional{AbstractVector{Cdouble}}, Integer, Integer, Optional{Integer}, Integer, Optional{Ref{var""##ANON_TV#2016""} where var""##ANON_TV#2016"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2016""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,GLQGridCoord!,mtsig,"Tuple{AbstractVector{Cdouble}, AbstractVector{Cdouble}, Integer, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractVector{Cdouble}, AbstractVector{Cdouble}, Integer, Integer, Optional{Ref{var""##ANON_TV#2017""} where var""##ANON_TV#2017"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2017""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,GLQGridCoord,mtsig,"Tuple{Integer, Integer, Optional{Ref{<:Integer}}}","Tuple{Integer, Integer, Optional{Ref{var""##ANON_TV#2018""} where var""##ANON_TV#2018"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2018""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHExpandLSQ!,mtsig,"Tuple{AbstractArray{Cdouble, 3}, AbstractVector{Cdouble}, AbstractVector{Cdouble}, AbstractVector{Cdouble}, Integer, Integer, Integer, Integer, Vector{Cdouble}, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 3}, AbstractVector{Cdouble}, AbstractVector{Cdouble}, AbstractVector{Cdouble}, Integer, Integer, Integer, Integer, Vector{Cdouble}, Optional{Ref{var""##ANON_TV#2019""} where var""##ANON_TV#2019"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2019""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHExpandLSQ,mtsig,"Tuple{AbstractVector{Cdouble}, AbstractVector{Cdouble}, AbstractVector{Cdouble}, Integer, Integer, Integer, Integer, Vector{Cdouble}, Optional{Ref{<:Integer}}}","Tuple{AbstractVector{Cdouble}, AbstractVector{Cdouble}, AbstractVector{Cdouble}, Integer, Integer, Integer, Integer, Vector{Cdouble}, Optional{Ref{var""##ANON_TV#2020""} where var""##ANON_TV#2020"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2020""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,MakeGrid2d!,mtsig,"Tuple{AbstractArray{Cdouble, 2}, AbstractArray{Cdouble, 3}, Integer, Union{AbstractFloat, Integer}, Integer, Integer, Optional{Union{AbstractFloat, Integer}}, Optional{Union{AbstractFloat, Integer}}, Union{AbstractFloat, Integer}, Union{AbstractFloat, Integer}, Union{AbstractFloat, Integer}, Union{AbstractFloat, Integer}, Bool, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 2}, AbstractArray{Cdouble, 3}, Integer, Union{AbstractFloat, Integer}, Integer, Integer, Optional{Union{AbstractFloat, Integer}}, Optional{Union{AbstractFloat, Integer}}, Union{AbstractFloat, Integer}, Union{AbstractFloat, Integer}, Union{AbstractFloat, Integer}, Union{AbstractFloat, Integer}, Bool, Optional{Ref{var""##ANON_TV#2021""} where var""##ANON_TV#2021"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2021""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,MakeGrid2d,mtsig,"Tuple{AbstractArray{Cdouble, 3}, Integer, Union{AbstractFloat, Integer}, Integer, Integer, Optional{Union{AbstractFloat, Integer}}, Optional{Union{AbstractFloat, Integer}}, Union{AbstractFloat, Integer}, Union{AbstractFloat, Integer}, Union{AbstractFloat, Integer}, Union{AbstractFloat, Integer}, Bool, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 3}, Integer, Union{AbstractFloat, Integer}, Integer, Integer, Optional{Union{AbstractFloat, Integer}}, Optional{Union{AbstractFloat, Integer}}, Union{AbstractFloat, Integer}, Union{AbstractFloat, Integer}, Union{AbstractFloat, Integer}, Union{AbstractFloat, Integer}, Bool, Optional{Ref{var""##ANON_TV#2022""} where var""##ANON_TV#2022"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2022""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHMultiply!,mtsig,"Tuple{AbstractArray{Cdouble, 3}, AbstractArray{Cdouble, 3}, Integer, AbstractArray{Cdouble, 3}, Integer, Bool, Integer, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 3}, AbstractArray{Cdouble, 3}, Integer, AbstractArray{Cdouble, 3}, Integer, Bool, Integer, Integer, Optional{Ref{var""##ANON_TV#2023""} where var""##ANON_TV#2023"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2023""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/transforms.jl,SHMultiply,mtsig,"Tuple{AbstractArray{Cdouble, 3}, Integer, AbstractArray{Cdouble, 3}, Integer, Bool, Integer, Integer, Optional{Ref{<:Integer}}}","Tuple{AbstractArray{Cdouble, 3}, Integer, AbstractArray{Cdouble, 3}, Integer, Bool, Integer, Integer, Optional{Ref{var""##ANON_TV#2024""} where var""##ANON_TV#2024"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2024""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SHTOOLS.jl
src/arrayops.jl,Base.getindex,mtsig,"(Tuple{ContiguousArray{T}, VecRange{N}, Vararg{Union{Integer, Vec{N, Bool}}}} where T) where N","(Tuple{ContiguousArray{T}, VecRange{N}, Vararg{Union{Integer, Vec{N, Bool}}}} where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SIMD.jl
src/arrayops.jl,Base.setindex!,mtsig,"(Tuple{ContiguousArray{T}, Vec{N, T}, VecRange{N}, Vararg{Union{Integer, Vec{N, Bool}}}} where T) where N","(Tuple{ContiguousArray{T}, Vec{N, T}, VecRange{N}, Vararg{Union{Integer, Vec{N, Bool}}}} where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SIMD.jl
src/arrayops.jl,Base.getindex,mtsig,"(Tuple{ContiguousArray{T}, Vec{N, <:Integer}, Vararg{Union{Integer, Vec{N, Bool}}}} where T) where N","(Tuple{ContiguousArray{T}, Vec{N, var""##ANON_TV#2319""} where var""##ANON_TV#2319"" <: Integer, Vararg{Union{Integer, Vec{N, Bool}}}} where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2319""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/SIMD.jl
src/arrayops.jl,Base.setindex!,mtsig,"(Tuple{ContiguousArray{T}, Vec{N, T}, Vec{N, <:Integer}, Vararg{Union{Integer, Vec{N, Bool}}}} where T) where N","(Tuple{ContiguousArray{T}, Vec{N, T}, Vec{N, var""##ANON_TV#2320""} where var""##ANON_TV#2320"" <: Integer, Vararg{Union{Integer, Vec{N, Bool}}}} where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2320""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/SIMD.jl
src/patterns.jl,<NOT A FUNSIG>,tyassorann,"Vector{Tuple{<:AbstractFloat, <:AbstractFloat}}","Vector{(Tuple{var""##ANON_TV#4309"", var""##ANON_TV#4310""} where var""##ANON_TV#4309"" <: AbstractFloat) where var""##ANON_TV#4310"" <: AbstractFloat}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4309""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCInvar)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4310""), :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCInvar))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/SMLMSim.jl
src/SPCSpectra.jl,<NOT A FUNSIG>,tyassorann,"Vector{Tuple{Vector{<:Number}, Vector{Float32}}}","Vector{Tuple{Vector{var""##ANON_TV#2361""} where var""##ANON_TV#2361"" <: Number, Vector{Float32}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2361""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SPCSpectra.jl
src/conversion.jl,coltype,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SQLStore.jl
src/conversion.jl,colcheck,mtsig,"Tuple{Any, Type{Union{T, Missing}}} where T","Tuple{Any, Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SQLStore.jl
src/SQLite.jl,sqlitetype,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SQLite.jl
src/data/daily_bar_csv.jl,_impute_locf,mtsig,"Tuple{AbstractVector{Union{T, Missing}}, Any} where T","Tuple{AbstractVector{Union{T, Missing}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SaguaroTrader.jl
src/SchumakerFunctions.jl,Schumaker,mtsig,"(Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Union{AbstractArray{R, 1}, AbstractArray{Union{Missing, R}, 1}}, Union{Missing, AbstractArray{<:Real, 1}}, Union{Missing, Real}, Union{Missing, Real}, Tuple{Schumaker_ExtrapolationSchemes, Schumaker_ExtrapolationSchemes}} where T <: Real) where R <: Real","(Tuple{Union{AbstractArray{T, 1}, AbstractArray{Union{Missing, T}, 1}}, Union{AbstractArray{R, 1}, AbstractArray{Union{Missing, R}, 1}}, Union{Missing, AbstractArray{var""##ANON_TV#2286"", 1} where var""##ANON_TV#2286"" <: Real}, Union{Missing, Real}, Union{Missing, Real}, Tuple{Schumaker_ExtrapolationSchemes, Schumaker_ExtrapolationSchemes}} where T <: Real) where R <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2286""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/SchumakerSpline.jl
src/coerce.jl,$c,mtsig,"Tuple{Val{:table}, Any, Vararg{Pair{<:Union{<:ColKey, <:Type}, <:Type}}, Vararg{Any}}","Tuple{Val{:table}, Any, Vararg{(Pair{var""##ANON_TV#1716"", var""##ANON_TV#1719""} where var""##ANON_TV#1716"" <: ((Union{var""##ANON_TV#1717"", var""##ANON_TV#1718""} where var""##ANON_TV#1717"" <: ColKey) where var""##ANON_TV#1718"" <: Type)) where var""##ANON_TV#1719"" <: Type}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1717""), :(Union{}), :ColKey, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1718""), :(Union{}), :Type, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1716""), :(Union{}), :((Union{var""##ANON_TV#1717"", var""##ANON_TV#1718""} where var""##ANON_TV#1717"" <: ColKey) where var""##ANON_TV#1718"" <: Type), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1719""), :(Union{}), :Type, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,true,4,true,true,true,true,true,true,true,true,data/ta-info/all/ScientificTypes.jl
src/scitype.jl,Fallback_Scitype,mtsig,"Tuple{Type{Union{T, Missing}}, Any} where T","Tuple{Type{Union{T, Missing}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/ScientificTypesBase.jl
src/algorithms/iterative/iterativealgorithm.jl,prepare,mtsig,"Tuple{InstantAlgorithm, InstantRuntime, Vector{<:Dist}, Vector{Tuple{Symbol, <:Score}}, Vector{Tuple{Symbol, <:Dist}}}","Tuple{InstantAlgorithm, InstantRuntime, Vector{var""##ANON_TV#2441""} where var""##ANON_TV#2441"" <: Dist, Vector{Tuple{Symbol, var""##ANON_TV#2442""} where var""##ANON_TV#2442"" <: Score}, Vector{Tuple{Symbol, var""##ANON_TV#2443""} where var""##ANON_TV#2443"" <: Dist}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2441""), :(Union{}), :Dist, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2442""), :(Union{}), :Score, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2443""), :(Union{}), :Dist, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Scruff.jl
src/algorithms/iterative/iterativealgorithm.jl,infer,mtsig,"Tuple{IterativeAlgorithm, InstantRuntime, Vector{Tuple{Symbol, <:Score}}, Vector{Tuple{Symbol, <:Dist}}, Vector{<:Dist}}","Tuple{IterativeAlgorithm, InstantRuntime, Vector{Tuple{Symbol, var""##ANON_TV#2444""} where var""##ANON_TV#2444"" <: Score}, Vector{Tuple{Symbol, var""##ANON_TV#2445""} where var""##ANON_TV#2445"" <: Dist}, Vector{var""##ANON_TV#2446""} where var""##ANON_TV#2446"" <: Dist}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2444""), :(Union{}), :Score, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2445""), :(Union{}), :Dist, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2446""), :(Union{}), :Dist, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Scruff.jl
test/test_bp.jl,<NOT A FUNSIG>,tyassorann,"Array{Dict{I, Array{Float64, 1}} where I, 1}","Array{Dict{I, Array{Float64, 1}} where I, 1}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:I, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Scruff.jl
src/structures_input.jl,Base.convert,mtsig,"Tuple{Type{Vector{<:Delay}}, Vector{<:RealOrFunction}}","Tuple{Type{Vector{var""##ANON_TV#2581""} where var""##ANON_TV#2581"" <: Delay}, Vector{var""##ANON_TV#2582""} where var""##ANON_TV#2582"" <: RealOrFunction}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2581""), :(Union{}), :Delay, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2582""), :(Union{}), :RealOrFunction, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/SemiDiscretizationMethod.jl
src/SentinelMissings.jl,Base.convert,mtsig,"Tuple{Type{Union{T, Missing}}, SentinelMissing} where T","Tuple{Type{Union{T, Missing}}, SentinelMissing} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SentinelMissings.jl
src/PARSDMM.jl,PARSDMM,mtsig,"(Tuple{Vector{TF}, Union{Vector{Array{TF, 2}}, Vector{SparseMatrixCSC{TF, TI}}, Vector{joAbstractLinearOperator{TF, TF}}, Vector{Union{Array{TF, 2}, SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}}, Union{Vector{Union{SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}, DistributedArrays.DArray{Union{JOLI.joAbstractLinearOperator{TF, TF}, SparseMatrixCSC{TF, TI}}, 1, Array{Union{joAbstractLinearOperator{TF, TF}, SparseMatrixCSC{TF, TI}}, 1}}}, Any, Union{Vector{Any}, DistributedArrays.DArray{Any, 1, Array{Any, 1}}}, Any, Any, Any, Any, Any} where TI <: Integer) where TF <: Real","(Tuple{Vector{TF}, Union{Vector{Array{TF, 2}}, Vector{SparseMatrixCSC{TF, TI}}, Vector{joAbstractLinearOperator{TF, TF}}, Vector{Union{Array{TF, 2}, SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}}, Union{Vector{Union{SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}, DistributedArrays.DArray{Union{JOLI.joAbstractLinearOperator{TF, TF}, SparseMatrixCSC{TF, TI}}, 1, Array{Union{joAbstractLinearOperator{TF, TF}, SparseMatrixCSC{TF, TI}}, 1}}}, Any, Union{Vector{Any}, DistributedArrays.DArray{Any, 1, Array{Any, 1}}}, Any, Any, Any, Any, Any} where TI <: Integer) where TF <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:TI, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TF, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SetIntersectionProjection.jl
src/PARSDMM_initialize.jl,PARSDMM_initialize,mtsig,"(Tuple{Vector{TF}, Union{Vector{Vector{TF}}, DistributedArrays.DArray{Array{TF, 1}, 1, Array{Array{TF, 1}, 1}}, Array{Any, 1}}, Union{Vector{Vector{TF}}, DistributedArrays.DArray{Array{TF, 1}, 1, Array{Array{TF, 1}, 1}}, Array{Any, 1}}, Union{Vector{Array{TF, 2}}, Vector{SparseMatrixCSC{TF, TI}}, Vector{joAbstractLinearOperator{TF, TF}}, Vector{Union{Array{TF, 2}, SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}}, Union{Vector{Union{SparseMatrixCSC{TF, TI}, JOLI.joAbstractLinearOperator{TF, TF}}}, DistributedArrays.DArray{Union{JOLI.joAbstractLinearOperator{TF, TF}, SparseMatrixCSC{TF, TI}}, 1, Array{Union{JOLI.joAbstractLinearOperator{TF, TF}, SparseMatrixCSC{TF, TI}}, 1}}}, Any, Union{Vector{Any}, DistributedArrays.DArray{Any, 1, Array{Any, 1}}}, Any, Integer, Vector{Real}, TF, String, Integer, Bool, Bool, Bool, Vector{TF}, Bool, Any, Bool, Any} where TI <: Integer) where TF <: Real","(Tuple{Vector{TF}, Union{Vector{Vector{TF}}, DistributedArrays.DArray{Array{TF, 1}, 1, Array{Array{TF, 1}, 1}}, Array{Any, 1}}, Union{Vector{Vector{TF}}, DistributedArrays.DArray{Array{TF, 1}, 1, Array{Array{TF, 1}, 1}}, Array{Any, 1}}, Union{Vector{Array{TF, 2}}, Vector{SparseMatrixCSC{TF, TI}}, Vector{joAbstractLinearOperator{TF, TF}}, Vector{Union{Array{TF, 2}, SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}}, Union{Vector{Union{SparseMatrixCSC{TF, TI}, JOLI.joAbstractLinearOperator{TF, TF}}}, DistributedArrays.DArray{Union{JOLI.joAbstractLinearOperator{TF, TF}, SparseMatrixCSC{TF, TI}}, 1, Array{Union{JOLI.joAbstractLinearOperator{TF, TF}, SparseMatrixCSC{TF, TI}}, 1}}}, Any, Union{Vector{Any}, DistributedArrays.DArray{Any, 1, Array{Any, 1}}}, Any, Integer, Vector{Real}, TF, String, Integer, Bool, Bool, Bool, Vector{TF}, Bool, Any, Bool, Any} where TI <: Integer) where TF <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:TI, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TF, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SetIntersectionProjection.jl
src/PARSDMM_precompute_distribute.jl,PARSDMM_precompute_distribute,mtsig,"(Tuple{Vector{Union{SparseMatrixCSC{TF, TI}, JOLI.joAbstractLinearOperator{TF, TF}}}, Any, Any, Any} where TI <: Integer) where TF <: Real","(Tuple{Vector{Union{SparseMatrixCSC{TF, TI}, JOLI.joAbstractLinearOperator{TF, TF}}}, Any, Any, Any} where TI <: Integer) where TF <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:TI, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TF, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SetIntersectionProjection.jl
src/PARSDMM_precompute_distribute_Minkowski.jl,PARSDMM_precompute_distribute_Minkowski,mtsig,"(Tuple{Vector{Union{SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}, Vector{Union{SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}, Vector{Union{SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}, Any, Any, Any, Any, Any} where TI <: Integer) where TF <: Real","(Tuple{Vector{Union{SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}, Vector{Union{SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}, Vector{Union{SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}, Any, Any, Any, Any, Any} where TI <: Integer) where TF <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:TI, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TF, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SetIntersectionProjection.jl
src/Q_update!.jl,Q_update!,mtsig,"(Tuple{Union{Array{TF, 2}, SparseMatrixCSC{TF, Int64}, joAbstractLinearOperator{TF, TF}}, Union{Vector{Array{TF, 2}}, Vector{SparseMatrixCSC{TF, TI}}, Vector{joAbstractLinearOperator{TF, TF}}, Vector{Union{Array{TF, 2}, SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}}, Any, Vector{TF}, Vector{TI}, Any, Integer, Any} where TI <: Integer) where TF <: Real","(Tuple{Union{Array{TF, 2}, SparseMatrixCSC{TF, Int64}, joAbstractLinearOperator{TF, TF}}, Union{Vector{Array{TF, 2}}, Vector{SparseMatrixCSC{TF, TI}}, Vector{joAbstractLinearOperator{TF, TF}}, Vector{Union{Array{TF, 2}, SparseMatrixCSC{TF, TI}, joAbstractLinearOperator{TF, TF}}}}, Any, Vector{TF}, Vector{TI}, Any, Integer, Any} where TI <: Integer) where TF <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:TI, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TF, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SetIntersectionProjection.jl
src/compute_relative_feasibility.jl,compute_relative_feasibility,mtsig,"(Tuple{Vector{TF}, Vector{TF}, Vector{Union{SparseMatrixCSC{TF, TI}, JOLI.joAbstractLinearOperator{TF, TF}}}, Any} where TI <: Integer) where TF <: Real","(Tuple{Vector{TF}, Vector{TF}, Vector{Union{SparseMatrixCSC{TF, TI}, JOLI.joAbstractLinearOperator{TF, TF}}}, Any} where TI <: Integer) where TF <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:TI, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TF, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SetIntersectionProjection.jl
src/rhs_compose.jl,rhs_compose,mtsig,"(Tuple{Vector{TF}, Union{Vector{Vector{TF}}, DistributedArrays.DArray{Array{TF, 1}, 1, Array{Array{TF, 1}, 1}}}, Union{Vector{Vector{TF}}, DistributedArrays.DArray{Array{TF, 1}, 1, Array{Array{TF, 1}, 1}}}, Union{Vector{TF}, DistributedArrays.DArray{TF, 1, Array{TF, 1}}}, Union{Vector{Union{SparseMatrixCSC{TF, TI}, JOLI.joAbstractLinearOperator{TF, TF}}}, DistributedArrays.DArray{Union{JOLI.joAbstractLinearOperator{TF, TF}, SparseMatrixCSC{TF, TI}}, 1, Array{Union{JOLI.joAbstractLinearOperator{TF, TF}, SparseMatrixCSC{TF, TI}}, 1}}}, Integer, Bool, Bool} where TI <: Integer) where TF <: Real","(Tuple{Vector{TF}, Union{Vector{Vector{TF}}, DistributedArrays.DArray{Array{TF, 1}, 1, Array{Array{TF, 1}, 1}}}, Union{Vector{Vector{TF}}, DistributedArrays.DArray{Array{TF, 1}, 1, Array{Array{TF, 1}, 1}}}, Union{Vector{TF}, DistributedArrays.DArray{TF, 1, Array{TF, 1}}}, Union{Vector{Union{SparseMatrixCSC{TF, TI}, JOLI.joAbstractLinearOperator{TF, TF}}}, DistributedArrays.DArray{Union{JOLI.joAbstractLinearOperator{TF, TF}, SparseMatrixCSC{TF, TI}}, 1, Array{Union{JOLI.joAbstractLinearOperator{TF, TF}, SparseMatrixCSC{TF, TI}}, 1}}}, Integer, Bool, Bool} where TI <: Integer) where TF <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:TI, :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TF, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SetIntersectionProjection.jl
src/SignalTableFunctions.jl,arrayElementBaseType,mtsig,"Tuple{Type{Union{Missing, T}}} where T","Tuple{Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SignalTables.jl
src/Signals.jl,elementBaseType,mtsig,"Tuple{Type{Union{Missing, T}}} where T","Tuple{Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SignalTables.jl
src/hypergraph.jl,Hypergraph,mtsig,"(((Tuple{AbstractMatrix{Union{T, Nothing}}, Vector{Union{Nothing, V}}, Vector{Union{Nothing, E}}} where D <: AbstractDict{Int, T}) where E) where V) where T <: Real","(((Tuple{AbstractMatrix{Union{T, Nothing}}, Vector{Union{Nothing, V}}, Vector{Union{Nothing, E}}} where D <: AbstractDict{Int, T}) where E) where V) where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:D, :(Union{}), :(AbstractDict{Int, T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:E, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,false,false,true,true,data/ta-info/all/SimpleHypergraphs.jl
src/hypergraph.jl,Hypergraph,mtsig,"((Tuple{AbstractMatrix{Union{T, Nothing}}, Vector{Union{Nothing, V}}, Vector{Union{Nothing, E}}} where E) where V) where T <: Real","((Tuple{AbstractMatrix{Union{T, Nothing}}, Vector{Union{Nothing, V}}, Vector{Union{Nothing, E}}} where E) where V) where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:E, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,false,false,true,true,data/ta-info/all/SimpleHypergraphs.jl
src/hypergraph.jl,Hypergraph,mtsig,"(Tuple{AbstractMatrix{Union{T, Nothing}}, Vector{Union{Nothing, V}}} where V) where T <: Real","(Tuple{AbstractMatrix{Union{T, Nothing}}, Vector{Union{Nothing, V}}} where V) where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/SimpleHypergraphs.jl
src/hypergraph.jl,Hypergraph,mtsig,"Tuple{AbstractMatrix{Union{T, Nothing}}} where T <: Real","Tuple{AbstractMatrix{Union{T, Nothing}}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SimpleHypergraphs.jl
src/hypergraph.jl,Hypergraph,mtsig,"Tuple{AbstractMatrix{Union{T, Nothing}}} where T <: Real","Tuple{AbstractMatrix{Union{T, Nothing}}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SimpleHypergraphs.jl
src/lib/types.jl,SimpleSDMPredictor,mtsig,"(Tuple{Matrix{Union{Nothing, T}}, K, K, K, K} where K <: AbstractFloat) where T","(Tuple{Matrix{Union{Nothing, T}}, K, K, K, K} where K <: AbstractFloat) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:K, :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SimpleSDMLayers.jl
src/lib/types.jl,SimpleSDMResponse,mtsig,"(Tuple{Matrix{Union{Nothing, T}}, K, K, K, K} where K <: AbstractFloat) where T","(Tuple{Matrix{Union{Nothing, T}}, K, K, K, K} where K <: AbstractFloat) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:K, :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SimpleSDMLayers.jl
src/lib/types.jl,$simplesdm_type,mtsig,"(Tuple{Matrix{Union{Nothing, T}}, K, K, K, K} where K <: AbstractFloat) where T","(Tuple{Matrix{Union{Nothing, T}}, K, K, K, K} where K <: AbstractFloat) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:K, :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SimpleSDMLayers.jl
test/testmodules/FuncKinds.jl,f2,mtsig,Tuple{T} where Unsigned <: T <: Real,Tuple{T} where Unsigned <: T <: Real,"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :Unsigned, :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/SnoopCompile.jl
src/Layer/dense.jl,isgpu,mtsig,"Tuple{Adjoint{<:Any, TrackedArray{<:Any, <:Any, <:CUDA.CuArray}}}","Tuple{Adjoint{var""##ANON_TV#2402"", ((TrackedArray{var""##ANON_TV#2403"", var""##ANON_TV#2404"", var""##ANON_TV#2405""} where var""##ANON_TV#2403"" <: Any) where var""##ANON_TV#2404"" <: Any) where var""##ANON_TV#2405"" <: CUDA.CuArray} where var""##ANON_TV#2402"" <: Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2403""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2404""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2405""), :(Union{}), :(CUDA.CuArray), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2402""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/Solaris.jl
src/Layer/dense.jl,isgpu,mtsig,"Tuple{Transpose{<:Any, TrackedArray{<:Any, <:Any, <:CUDA.CuArray}}}","Tuple{Transpose{var""##ANON_TV#2409"", ((TrackedArray{var""##ANON_TV#2410"", var""##ANON_TV#2411"", var""##ANON_TV#2412""} where var""##ANON_TV#2410"" <: Any) where var""##ANON_TV#2411"" <: Any) where var""##ANON_TV#2412"" <: CUDA.CuArray} where var""##ANON_TV#2409"" <: Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2410""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2411""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2412""), :(Union{}), :(CUDA.CuArray), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2409""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/Solaris.jl
src/Layer/dense.jl,ifgpufree,mtsig,"Tuple{Adjoint{<:Any, TrackedArray{<:Any, <:Any, <:CUDA.CuArray}}}","Tuple{Adjoint{var""##ANON_TV#2416"", ((TrackedArray{var""##ANON_TV#2417"", var""##ANON_TV#2418"", var""##ANON_TV#2419""} where var""##ANON_TV#2417"" <: Any) where var""##ANON_TV#2418"" <: Any) where var""##ANON_TV#2419"" <: CUDA.CuArray} where var""##ANON_TV#2416"" <: Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2417""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2418""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2419""), :(Union{}), :(CUDA.CuArray), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2416""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/Solaris.jl
src/Layer/dense.jl,ifgpufree,mtsig,"Tuple{Transpose{<:Any, TrackedArray{<:Any, <:Any, <:CUDA.CuArray}}}","Tuple{Transpose{var""##ANON_TV#2420"", ((TrackedArray{var""##ANON_TV#2421"", var""##ANON_TV#2422"", var""##ANON_TV#2423""} where var""##ANON_TV#2421"" <: Any) where var""##ANON_TV#2422"" <: Any) where var""##ANON_TV#2423"" <: CUDA.CuArray} where var""##ANON_TV#2420"" <: Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2421""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2422""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2423""), :(Union{}), :(CUDA.CuArray), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2420""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/Solaris.jl
src/general.jl,formulas,retty,Vector{SyntaxTree{<:tokenstype(g)}},"Vector{SyntaxTree{var""##ANON_TV#1561""} where var""##ANON_TV#1561"" <: tokenstype(g)}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1561""), :(Union{}), :(tokenstype(g)), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SoleLogics.jl
src/fsort-missing.jl,fsort,mtsig,"Tuple{AbstractVector{Union{T, Missing}}, Any} where T","Tuple{AbstractVector{Union{T, Missing}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SortingLab.jl
src/core/utils.jl,getprototype,mtsig,"Tuple{Type{NamedTuple{N, T} where T <: Tuple}} where N","Tuple{Type{NamedTuple{N, T} where T <: Tuple}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/Soss.jl
src/novalue.jl,$f,mtsig,"Tuple{Type{Union{T, NoValue}}} where T","Tuple{Type{Union{T, NoValue}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SparseBase.jl
src/novalue.jl,$f,mtsig,"Tuple{Type{Union{T, NoValue}}} where T","Tuple{Type{Union{T, NoValue}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SparseBase.jl
SimpleSDMLayers/src/lib/types.jl,SimpleSDMPredictor,mtsig,"(Tuple{Matrix{Union{Nothing, T}}, K, K, K, K} where K <: AbstractFloat) where T","(Tuple{Matrix{Union{Nothing, T}}, K, K, K, K} where K <: AbstractFloat) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:K, :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SpeciesDistributionToolkit.jl
SimpleSDMLayers/src/lib/types.jl,SimpleSDMResponse,mtsig,"(Tuple{Matrix{Union{Nothing, T}}, K, K, K, K} where K <: AbstractFloat) where T","(Tuple{Matrix{Union{Nothing, T}}, K, K, K, K} where K <: AbstractFloat) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:K, :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SpeciesDistributionToolkit.jl
SimpleSDMLayers/src/lib/types.jl,$simplesdm_type,mtsig,"(Tuple{Matrix{Union{Nothing, T}}, K, K, K, K} where K <: AbstractFloat) where T","(Tuple{Matrix{Union{Nothing, T}}, K, K, K, K} where K <: AbstractFloat) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:K, :(Union{}), :AbstractFloat, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple), list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/SpeciesDistributionToolkit.jl
src/SphericalHarmonicArrays.jl,SHArray,mtsig,"(((Tuple{SHArray} where M <: NTuple{N, Union{AbstractUnitRange{<:Integer}, Integer}}) where A <: AbstractArray{T, N}) where N) where T","(((Tuple{SHArray} where M <: NTuple{N, Union{AbstractUnitRange{var""##ANON_TV#1906""} where var""##ANON_TV#1906"" <: Integer, Integer}}) where A <: AbstractArray{T, N}) where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1906""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :(NTuple{N, Union{AbstractUnitRange{var""##ANON_TV#1906""} where var""##ANON_TV#1906"" <: Integer, Integer}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A, :(Union{}), :(AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,true,true,true,data/ta-info/all/SphericalHarmonicArrays.jl
src/SphericalHarmonicArrays.jl,SHArray,mtsig,"(((Tuple{AbstractArray} where M <: NTuple{N, Union{AbstractUnitRange{<:Integer}, Integer}}) where A <: AbstractArray{T, N}) where N) where T","(((Tuple{AbstractArray} where M <: NTuple{N, Union{AbstractUnitRange{var""##ANON_TV#1907""} where var""##ANON_TV#1907"" <: Integer, Integer}}) where A <: AbstractArray{T, N}) where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1907""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :(NTuple{N, Union{AbstractUnitRange{var""##ANON_TV#1907""} where var""##ANON_TV#1907"" <: Integer, Integer}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A, :(Union{}), :(AbstractArray{T, N}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,true,true,true,data/ta-info/all/SphericalHarmonicArrays.jl
src/SphericalHarmonicArrays.jl,SHArray,mtsig,"Tuple{AbstractArray{<:Any, N}, Vararg{Pair{Int, <:ModeRange}}} where N","Tuple{AbstractArray{var""##ANON_TV#1908"", N} where var""##ANON_TV#1908"" <: Any, Vararg{Pair{Int, var""##ANON_TV#1909""} where var""##ANON_TV#1909"" <: ModeRange}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1908""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1909""), :(Union{}), :ModeRange, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/SphericalHarmonicArrays.jl
src/SphericalHarmonicArrays.jl,replaceaxeswithmodes,mtsig,"Tuple{NTuple{N, AbstractUnitRange}, NTuple{N, Pair{Int, <:ModeRange}}} where N","Tuple{NTuple{N, AbstractUnitRange}, NTuple{N, Pair{Int, var""##ANON_TV#1910""} where var""##ANON_TV#1910"" <: ModeRange}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1910""), :(Union{}), :ModeRange, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,true,true,true,data/ta-info/all/SphericalHarmonicArrays.jl
src/SphericalHarmonicModes.jl,L1L2Triangle,mtsig,"Tuple{Vararg{Union{Integer, AbstractUnitRange{<:Integer}, SHModeRange}}}","Tuple{Vararg{Union{Integer, AbstractUnitRange{var""##ANON_TV#3638""} where var""##ANON_TV#3638"" <: Integer, SHModeRange}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3638""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SphericalHarmonicModes.jl
src/SpinWaveTheory.jl,add!,mtsig,"Tuple{Matrix, TBAMatrixRepresentation{Magnonic}, Operator{<:Number, <:ID{CompositeIndex{<:Index{Int, <:FID{:b}}}, 2}}, Any, Vararg{Any}}","Tuple{Matrix, TBAMatrixRepresentation{Magnonic}, (Operator{var""##ANON_TV#2013"", var""##ANON_TV#2014""} where var""##ANON_TV#2013"" <: Number) where var""##ANON_TV#2014"" <: ID{CompositeIndex{var""##ANON_TV#2015""} where var""##ANON_TV#2015"" <: (Index{Int, var""##ANON_TV#2016""} where var""##ANON_TV#2016"" <: FID{:b}), 2}, Any, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2016""), :(Union{}), :(FID{:b}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2015""), :(Union{}), :(Index{Int, var""##ANON_TV#2016""} where var""##ANON_TV#2016"" <: FID{:b}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2013""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2014""), :(Union{}), :(ID{CompositeIndex{var""##ANON_TV#2015""} where var""##ANON_TV#2015"" <: (Index{Int, var""##ANON_TV#2016""} where var""##ANON_TV#2016"" <: FID{:b}), 2}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,true,4,true,true,true,true,true,true,true,true,data/ta-info/all/SpinWaveTheory.jl
src/SpmImages.jl,line_profile,retty,"Tuple{Vector{Vector{<:Number}}, Vector{<:Number}, Vector{Union{<:Number, Missing}}, Union{<:Number, Missing}, Union{<:Number, Missing}}","Tuple{Vector{Vector{var""##ANON_TV#3681""} where var""##ANON_TV#3681"" <: Number}, Vector{var""##ANON_TV#3682""} where var""##ANON_TV#3682"" <: Number, Vector{Union{var""##ANON_TV#3683"", Missing} where var""##ANON_TV#3683"" <: Number}, Union{var""##ANON_TV#3684"", Missing} where var""##ANON_TV#3684"" <: Number, Union{var""##ANON_TV#3685"", Missing} where var""##ANON_TV#3685"" <: Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3681""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3682""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3683""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3684""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3685""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCTuple))]",false,false,5,true,true,true,true,true,true,true,true,data/ta-info/all/SpmImages.jl
src/SpmImages.jl,line_profile,retty,"Tuple{Vector{Vector{<:Number}}, Vector{<:Number}, Vector{Union{<:Number, Missing}}, Union{<:Number, Missing}, Union{<:Number, Missing}}","Tuple{Vector{Vector{var""##ANON_TV#3689""} where var""##ANON_TV#3689"" <: Number}, Vector{var""##ANON_TV#3690""} where var""##ANON_TV#3690"" <: Number, Vector{Union{var""##ANON_TV#3691"", Missing} where var""##ANON_TV#3691"" <: Number}, Union{var""##ANON_TV#3692"", Missing} where var""##ANON_TV#3692"" <: Number, Union{var""##ANON_TV#3693"", Missing} where var""##ANON_TV#3693"" <: Number}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3689""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3690""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3691""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3692""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3693""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCTuple))]",false,false,5,true,true,true,true,true,true,true,true,data/ta-info/all/SpmImages.jl
src/SquidGame.jl,play_game,mtsig,"Tuple{Game, Vector{Type{<:Strategy}}}","Tuple{Game, Vector{Type{var""##ANON_TV#2797""} where var""##ANON_TV#2797"" <: Strategy}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2797""), :(Union{}), :Strategy, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SquidGame.jl
test/grid.jl,lghost,mtsig,"Tuple{NTuple{2, NTuple{K, AbstractVector{<:Real}}}, SVec{K, Float64}, SVec{K, Bool}} where K","Tuple{NTuple{2, NTuple{K, AbstractVector{var""##ANON_TV#3698""} where var""##ANON_TV#3698"" <: Real}}, SVec{K, Float64}, SVec{K, Bool}} where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3698""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,true,true,true,data/ta-info/all/StaggeredGridCalculus.jl
src/StataDTAFiles.jl,readfield,mtsig,"Tuple{ByteOrderIO, Type{Union{Missing, T}}} where T","Tuple{ByteOrderIO, Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/StataDTAFiles.jl
reconstruction_static.jl,Embedding,mtsig,Tuple{Vector{Vector{T} where T}},Tuple{Vector{Vector{T} where T}},"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/StateSpaceReconstruction.jl
src/statespaceset.jl,Base.hcat,mtsig,"(Tuple{Vararg{AbstractStateSpaceSet{D, T} where D, N}} where N) where T","(Tuple{Vararg{AbstractStateSpaceSet{D, T} where D, N}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/StateSpaceSets.jl
src/statespaceset.jl,hcat,mtsig,"Tuple{Vararg{Union{AbstractVector{<:Real}, AbstractStateSpaceSet{D, T} where {D, T}}, N}} where N","Tuple{Vararg{Union{AbstractVector{var""##ANON_TV#2114""} where var""##ANON_TV#2114"" <: Real, (AbstractStateSpaceSet{D, T} where D) where T}, N}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2114""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/StateSpaceSets.jl
src/abstractarray.jl,Base.view,mtsig,"Tuple{SArray, Vararg{Union{Colon, Integer, SOneTo, StaticArray{<:Tuple, Int}, CartesianIndex}}}","Tuple{SArray, Vararg{Union{Colon, Integer, SOneTo, StaticArray{var""##ANON_TV#2054"", Int} where var""##ANON_TV#2054"" <: Tuple, CartesianIndex}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2054""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/StaticArrays.jl
src/indexing.jl,out_index_size,mtsig,Tuple{Vararg{Type{<:Size}}},"Tuple{Vararg{Type{var""##ANON_TV#2129""} where var""##ANON_TV#2129"" <: Size}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2129""), :(Union{}), :Size, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/StaticArrays.jl
src/indexing.jl,linear_index_size,mtsig,Tuple{Vararg{Type{<:Size}}},"Tuple{Vararg{Type{var""##ANON_TV#2130""} where var""##ANON_TV#2130"" <: Size}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2130""), :(Union{}), :Size, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/StaticArrays.jl
src/indexing.jl,Base.to_indices,mtsig,"Tuple{Any, Tuple{Vararg{Union{Integer, CartesianIndex, StaticArray{<:Tuple, Int}}}}}","Tuple{Any, Tuple{Vararg{Union{Integer, CartesianIndex, StaticArray{var""##ANON_TV#2139"", Int} where var""##ANON_TV#2139"" <: Tuple}}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2139""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/StaticArrays.jl
src/indexing.jl,getindex,mtsig,"Tuple{StaticArray, Vararg{Union{Int, StaticArray{<:Tuple, Int}, SOneTo, Colon}}}","Tuple{StaticArray, Vararg{Union{Int, StaticArray{var""##ANON_TV#2140"", Int} where var""##ANON_TV#2140"" <: Tuple, SOneTo, Colon}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2140""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/StaticArrays.jl
src/indexing.jl,setindex!,mtsig,"Tuple{StaticArray, Any, Vararg{Union{Int, StaticArray{<:Tuple, Int}, Colon}}}","Tuple{StaticArray, Any, Vararg{Union{Int, StaticArray{var""##ANON_TV#2141"", Int} where var""##ANON_TV#2141"" <: Tuple, Colon}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2141""), :(Union{}), :Tuple, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/StaticArrays.jl
src/linalg.jl,diagm,mtsig,"Tuple{Pair{<:Val, <:StaticVector}, Vararg{Pair{<:Val, <:StaticVector}}}","Tuple{(Pair{var""##ANON_TV#2154"", var""##ANON_TV#2155""} where var""##ANON_TV#2154"" <: Val) where var""##ANON_TV#2155"" <: StaticVector, Vararg{(Pair{var""##ANON_TV#2156"", var""##ANON_TV#2157""} where var""##ANON_TV#2156"" <: Val) where var""##ANON_TV#2157"" <: StaticVector}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2154""), :(Union{}), :Val, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2155""), :(Union{}), :StaticVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2156""), :(Union{}), :Val, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2157""), :(Union{}), :StaticVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/StaticArrays.jl
src/base_types.jl,attribute_fields,mtsig,"Tuple{Type{Union{Missing, T}}} where T","Tuple{Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/StationXML.jl
src/base_types.jl,element_fields,mtsig,"Tuple{Type{Union{Missing, T}}} where T","Tuple{Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/StationXML.jl
src/base_types.jl,text_field,mtsig,"Tuple{Type{Union{Missing, T}}} where T","Tuple{Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/StationXML.jl
src/io.jl,parse_node,mtsig,"Tuple{Type{Union{Missing, T}}, EzXML.Node, Bool} where T","Tuple{Type{Union{Missing, T}}, EzXML.Node, Bool} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/StationXML.jl
src/io.jl,local_parse,mtsig,"Tuple{Type{Union{Missing, T}}, AbstractString} where T","Tuple{Type{Union{Missing, T}}, AbstractString} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/StationXML.jl
src/charts/hist2d.jl,_hist2d_counts,mtsig,"(Tuple{AbstractVector{Union{T, Missing}}, AbstractVector{Union{S, Missing}}, Any, Any, Any, Any, Any} where T <: Real) where S <: Real","(Tuple{AbstractVector{Union{T, Missing}}, AbstractVector{Union{S, Missing}}, Any, Any, Any, Any, Any} where T <: Real) where S <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/StatisticalGraphics.jl
src/charts/histogram.jl,_histogram_counts,mtsig,"Tuple{AbstractVector{Union{T, Missing}}, Any, Any} where T <: Real","Tuple{AbstractVector{Union{T, Missing}}, Any, Any} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/StatisticalGraphics.jl
src/charts/histogram.jl,_histogram,mtsig,"Tuple{AbstractVector{Union{T, Missing}}, Symbol, Any} where T <: Real","Tuple{AbstractVector{Union{T, Missing}}, Symbol, Any} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/StatisticalGraphics.jl
src/charts/histogram.jl,_histogram,mtsig,"Tuple{AbstractVector{Union{T, Missing}}, Union{<:Integer, <:AbstractVector}, Any} where T <: Real","Tuple{AbstractVector{Union{T, Missing}}, (Union{var""##ANON_TV#1630"", var""##ANON_TV#1631""} where var""##ANON_TV#1630"" <: Integer) where var""##ANON_TV#1631"" <: AbstractVector, Any} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1630""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1631""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,false,false,true,true,data/ta-info/all/StatisticalGraphics.jl
src/charts/histogram.jl,histogram,mtsig,"Tuple{AbstractVector{Union{T, Missing}}, Union{AbstractVector, Integer, Symbol}, Any, Any} where T <: Real","Tuple{AbstractVector{Union{T, Missing}}, Union{AbstractVector, Integer, Symbol}, Any, Any} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/StatisticalGraphics.jl
src/counts.jl,addcounts!,mtsig,"Tuple{AbstractArray, AbstractArray{<:Integer}, AbstractArray{<:Integer}, NTuple{2, UnitRange{<:Integer}}}","Tuple{AbstractArray, AbstractArray{var""##ANON_TV#2259""} where var""##ANON_TV#2259"" <: Integer, AbstractArray{var""##ANON_TV#2260""} where var""##ANON_TV#2260"" <: Integer, NTuple{2, UnitRange{var""##ANON_TV#2261""} where var""##ANON_TV#2261"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2259""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2260""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2261""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/StatsBase.jl
src/counts.jl,addcounts!,mtsig,"Tuple{AbstractArray, AbstractArray{<:Integer}, AbstractArray{<:Integer}, NTuple{2, UnitRange{<:Integer}}, AbstractWeights}","Tuple{AbstractArray, AbstractArray{var""##ANON_TV#2262""} where var""##ANON_TV#2262"" <: Integer, AbstractArray{var""##ANON_TV#2263""} where var""##ANON_TV#2263"" <: Integer, NTuple{2, UnitRange{var""##ANON_TV#2264""} where var""##ANON_TV#2264"" <: Integer}, AbstractWeights}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2262""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2263""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2264""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/StatsBase.jl
src/counts.jl,counts,mtsig,"Tuple{AbstractArray{<:Integer}, AbstractArray{<:Integer}, NTuple{2, UnitRange{<:Integer}}}","Tuple{AbstractArray{var""##ANON_TV#2265""} where var""##ANON_TV#2265"" <: Integer, AbstractArray{var""##ANON_TV#2266""} where var""##ANON_TV#2266"" <: Integer, NTuple{2, UnitRange{var""##ANON_TV#2267""} where var""##ANON_TV#2267"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2265""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2266""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2267""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/StatsBase.jl
src/counts.jl,counts,mtsig,"Tuple{AbstractArray{<:Integer}, AbstractArray{<:Integer}, NTuple{2, UnitRange{<:Integer}}, AbstractWeights}","Tuple{AbstractArray{var""##ANON_TV#2268""} where var""##ANON_TV#2268"" <: Integer, AbstractArray{var""##ANON_TV#2269""} where var""##ANON_TV#2269"" <: Integer, NTuple{2, UnitRange{var""##ANON_TV#2270""} where var""##ANON_TV#2270"" <: Integer}, AbstractWeights}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2268""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2269""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2270""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/StatsBase.jl
src/counts.jl,proportions,mtsig,"Tuple{AbstractArray{<:Integer}, AbstractArray{<:Integer}, NTuple{2, UnitRange{<:Integer}}}","Tuple{AbstractArray{var""##ANON_TV#2289""} where var""##ANON_TV#2289"" <: Integer, AbstractArray{var""##ANON_TV#2290""} where var""##ANON_TV#2290"" <: Integer, NTuple{2, UnitRange{var""##ANON_TV#2291""} where var""##ANON_TV#2291"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2289""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2290""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2291""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/StatsBase.jl
src/counts.jl,proportions,mtsig,"Tuple{AbstractArray{<:Integer}, AbstractArray{<:Integer}, NTuple{2, UnitRange{<:Integer}}, AbstractWeights}","Tuple{AbstractArray{var""##ANON_TV#2292""} where var""##ANON_TV#2292"" <: Integer, AbstractArray{var""##ANON_TV#2293""} where var""##ANON_TV#2293"" <: Integer, NTuple{2, UnitRange{var""##ANON_TV#2294""} where var""##ANON_TV#2294"" <: Integer}, AbstractWeights}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2292""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2293""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2294""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/StatsBase.jl
src/recipes/conversions.jl,convert_arguments,mtsig,"Tuple{SampleBased, NTuple{N, AbstractVector{<:Number}}} where N","Tuple{SampleBased, NTuple{N, AbstractVector{var""##ANON_TV#4353""} where var""##ANON_TV#4353"" <: Number}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4353""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/StatsMakie.jl
src/Charts.jl,stipple_parse,mtsig,"Tuple{Type{Vector{<:PlotData}}, Vector}","Tuple{Type{Vector{var""##ANON_TV#2570""} where var""##ANON_TV#2570"" <: PlotData}, Vector}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2570""), :(Union{}), :PlotData, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/StipplePlotly.jl
src/methods/api.jl,instantiate,mtsig,"(Tuple{StochasticModel{N}, NTuple{M, Vector{<:AbstractScenario}}, StochasticInstantiation, Any, Bool, Vararg{Any}} where M) where N","(Tuple{StochasticModel{N}, NTuple{M, Vector{var""##ANON_TV#2390""} where var""##ANON_TV#2390"" <: AbstractScenario}, StochasticInstantiation, Any, Bool, Vararg{Any}} where M) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2390""), :(Union{}), :AbstractScenario, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/StochasticPrograms.jl
src/types/stochasticprogram.jl,StochasticProgram,mtsig,"(Tuple{NTuple{N, Stage}, NTuple{M, Vector{<:AbstractScenario}}, StochasticInstantiation, Any} where M) where N","(Tuple{NTuple{N, Stage}, NTuple{M, Vector{var""##ANON_TV#2491""} where var""##ANON_TV#2491"" <: AbstractScenario}, StochasticInstantiation, Any} where M) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2491""), :(Union{}), :AbstractScenario, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/StochasticPrograms.jl
src/types/decisions/functions/operators.jl,MOIU.promote_operation,mtsig,"Tuple{typeof(vcat), Type{T}, Vararg{Type{<:Union{SingleDecision, VectorOfDecisions}}}} where T","Tuple{typeof(vcat), Type{T}, Vararg{Type{var""##ANON_TV#2656""} where var""##ANON_TV#2656"" <: Union{SingleDecision, VectorOfDecisions}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2656""), :(Union{}), :(Union{SingleDecision, VectorOfDecisions}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/StochasticPrograms.jl
src/types/decisions/functions/operators.jl,MOIU.promote_operation,mtsig,"Tuple{typeof(vcat), Type{T}, Type{<:AffineDecisionLike{T}}, Vararg{Type{<:AffineLike{T}}}} where T","Tuple{typeof(vcat), Type{T}, Type{var""##ANON_TV#2657""} where var""##ANON_TV#2657"" <: AffineDecisionLike{T}, Vararg{Type{var""##ANON_TV#2658""} where var""##ANON_TV#2658"" <: AffineLike{T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2657""), :(Union{}), :(AffineDecisionLike{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2658""), :(Union{}), :(AffineLike{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/StochasticPrograms.jl
src/types/decomposition/scenario_decomposition.jl,StochasticStructure,mtsig,"(Tuple{Decisions{N}, NTuple{M, Vector{<:AbstractScenario}}, Union{ScenarioDecomposition, DistributedScenarioDecomposition}} where M) where N","(Tuple{Decisions{N}, NTuple{M, Vector{var""##ANON_TV#2663""} where var""##ANON_TV#2663"" <: AbstractScenario}, Union{ScenarioDecomposition, DistributedScenarioDecomposition}} where M) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2663""), :(Union{}), :AbstractScenario, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/StochasticPrograms.jl
src/types/decomposition/stage_decomposition.jl,StochasticStructure,mtsig,"(Tuple{Decisions{N}, NTuple{M, Vector{<:AbstractScenario}}, Union{StageDecomposition, DistributedStageDecomposition}} where M) where N","(Tuple{Decisions{N}, NTuple{M, Vector{var""##ANON_TV#2674""} where var""##ANON_TV#2674"" <: AbstractScenario}, Union{StageDecomposition, DistributedStageDecomposition}} where M) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2674""), :(Union{}), :AbstractScenario, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/StochasticPrograms.jl
src/types/deterministic_equivalent/deterministicequivalent.jl,StochasticStructure,mtsig,"(Tuple{Decisions{N}, NTuple{M, Vector{<:AbstractScenario}}, Deterministic} where M) where N","(Tuple{Decisions{N}, NTuple{M, Vector{var""##ANON_TV#2679""} where var""##ANON_TV#2679"" <: AbstractScenario}, Deterministic} where M) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2679""), :(Union{}), :AbstractScenario, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/StochasticPrograms.jl
src/ascii.jl,string,mtsig,Tuple{Vararg{MaybeSub{<:Str{ASCIICSE}}}},"Tuple{Vararg{MaybeSub{var""##ANON_TV#3523""} where var""##ANON_TV#3523"" <: Str{ASCIICSE}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3523""), :(Union{}), :(Str{ASCIICSE}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/StrBase.jl
src/support.jl,*,mtsig,"(((Tuple{Union{C1, S1}, Vararg{Union{C2, S2}}} where S2 <: Str) where S1 <: Str) where C2 <: Chr) where C1 <: Chr","(((Tuple{Union{C1, S1}, Vararg{Union{C2, S2}}} where S2 <: Str) where S1 <: Str) where C2 <: Chr) where C1 <: Chr","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S2, :(Union{}), :Str, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S1, :(Union{}), :Str, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:C2, :(Union{}), :Chr, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:C1, :(Union{}), :Chr, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,false,false,true,true,data/ta-info/all/StrBase.jl
src/traits.jl,is_valid,mtsig,"((Tuple{Type{Str{<:CSE{CS1}}}, T} where CS1) where T <: Str{<:CSE{CS2}}) where CS2","((Tuple{Type{Str{var""##ANON_TV#3782""} where var""##ANON_TV#3782"" <: CSE{CS1}}, T} where CS1) where T <: (Str{var""##ANON_TV#3783""} where var""##ANON_TV#3783"" <: CSE{CS2})) where CS2","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3783""), :(Union{}), :(CSE{CS2}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3782""), :(Union{}), :(CSE{CS1}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:CS1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Str{var""##ANON_TV#3783""} where var""##ANON_TV#3783"" <: CSE{CS2}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:CS2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,false,true,true,false,true,true,data/ta-info/all/StrBase.jl
src/traits.jl,is_valid,mtsig,"(Tuple{Type{Str{<:CSE{CS}}}, T} where T <: Str{<:CSE{CS}}) where CS","(Tuple{Type{Str{var""##ANON_TV#3784""} where var""##ANON_TV#3784"" <: CSE{CS}}, T} where T <: (Str{var""##ANON_TV#3785""} where var""##ANON_TV#3785"" <: CSE{CS})) where CS","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3785""), :(Union{}), :(CSE{CS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3784""), :(Union{}), :(CSE{CS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(Str{var""##ANON_TV#3785""} where var""##ANON_TV#3785"" <: CSE{CS}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:CS, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/StrBase.jl
src/utf32.jl,convert,mtsig,"Tuple{Type{<:Str{UTF16CSE}}, MaybeSub{Str{<:UTF32_CSEs}}}","Tuple{Type{var""##ANON_TV#3884""} where var""##ANON_TV#3884"" <: Str{UTF16CSE}, MaybeSub{Str{var""##ANON_TV#3885""} where var""##ANON_TV#3885"" <: UTF32_CSEs}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3884""), :(Union{}), :(Str{UTF16CSE}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3885""), :(Union{}), :UTF32_CSEs, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/StrBase.jl
src/utf32.jl,convert,mtsig,"Tuple{Type{<:Str{C}}, MaybeSub{Str{<:UTF32_CSEs}}} where C <: UCS2_CSEs","Tuple{Type{var""##ANON_TV#3886""} where var""##ANON_TV#3886"" <: Str{C}, MaybeSub{Str{var""##ANON_TV#3887""} where var""##ANON_TV#3887"" <: UTF32_CSEs}} where C <: UCS2_CSEs","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3886""), :(Union{}), :(Str{C}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3887""), :(Union{}), :UTF32_CSEs, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:C, :(Union{}), :UCS2_CSEs, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/StrBase.jl
src/mapreduce.jl,Base.map,mtsig,"(Tuple{F, StridedView{<:Any, N}, Vararg{StridedView{<:Any, N}}} where N) where F","(Tuple{F, StridedView{var""##ANON_TV#2217"", N} where var""##ANON_TV#2217"" <: Any, Vararg{StridedView{var""##ANON_TV#2218"", N} where var""##ANON_TV#2218"" <: Any}} where N) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2217""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2218""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/Strided.jl
src/mapreduce.jl,Base.map!,mtsig,"(Tuple{F, StridedView{<:Any, N}, StridedView{<:Any, N}, Vararg{StridedView{<:Any, N}}} where N) where F","(Tuple{F, StridedView{var""##ANON_TV#2219"", N} where var""##ANON_TV#2219"" <: Any, StridedView{var""##ANON_TV#2220"", N} where var""##ANON_TV#2220"" <: Any, Vararg{StridedView{var""##ANON_TV#2221"", N} where var""##ANON_TV#2221"" <: Any}} where N) where F","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2219""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2220""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2221""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,true,true,false,true,true,data/ta-info/all/Strided.jl
src/mapreduce.jl,Base.mapreducedim!,mtsig,"Tuple{Any, Any, StridedView{<:Any, N}, StridedView{<:Any, N}, Vararg{StridedView{<:Any, N}}} where N","Tuple{Any, Any, StridedView{var""##ANON_TV#2222"", N} where var""##ANON_TV#2222"" <: Any, StridedView{var""##ANON_TV#2223"", N} where var""##ANON_TV#2223"" <: Any, Vararg{StridedView{var""##ANON_TV#2224"", N} where var""##ANON_TV#2224"" <: Any}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2222""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2223""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2224""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/Strided.jl
src/StructMapping.jl,_convertdict,mtsig,"Tuple{Type{Union{T, Nothing}}, Any} where T","Tuple{Type{Union{T, Nothing}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/StructMapping.jl
src/StructMapping.jl,_convertdict,mtsig,"Tuple{Type{Union{T, Nothing}}, AbstractDict} where T","Tuple{Type{Union{T, Nothing}}, AbstractDict} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/StructMapping.jl
src/elimination.jl,<NOT A FUNSIG>,tyassorann,"Array{Dict{P, <:FieldElem}, 1}","Array{Dict{P, var""##ANON_TV#2236""} where var""##ANON_TV#2236"" <: FieldElem, 1}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2236""), :(Union{}), :FieldElem, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/StructuralIdentifiability.jl
src/types.jl,defaultfill,mtsig,"Tuple{Type{Union{T, Nothing}}} where T","Tuple{Type{Union{T, Nothing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SuiteSparseGraphBLAS.jl
src/types.jl,defaultfill,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/SuiteSparseGraphBLAS.jl
src/solvers/cholmod.jl,convert,mtsig,"Tuple{Type{Symmetric{Float64, <:($Mat){Float64}}}, Sparse{Float64}}","Tuple{Type{Symmetric{Float64, var""##ANON_TV#2190""} where var""##ANON_TV#2190"" <: ($Mat){Float64}}, Sparse{Float64}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2190""), :(Union{}), :(($(Expr(:$, :Mat))){Float64}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SuiteSparseGraphBLAS.jl
src/solvers/cholmod.jl,convert,mtsig,"Tuple{Type{Hermitian{Tv, <:($Mat){Tv}}}, Sparse{Tv}} where Tv <: VTypes","Tuple{Type{Hermitian{Tv, var""##ANON_TV#2191""} where var""##ANON_TV#2191"" <: ($Mat){Tv}}, Sparse{Tv}} where Tv <: VTypes","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2191""), :(Union{}), :(($(Expr(:$, :Mat))){Tv}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Tv, :(Union{}), :VTypes, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/SuiteSparseGraphBLAS.jl
src/cox.jl,promote_nonmissing,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Survival.jl
src/optimization.jl,PositiveFactorizations.floattype,mtsig,"Tuple{Type{Union{T, Missing}}} where T","Tuple{Type{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Survival.jl
src/json.jl,from_json,mtsig,"Tuple{Type{Union{Nothing, T}}, Dict{String, Any}} where T","Tuple{Type{Union{Nothing, T}}, Dict{String, Any}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Swagger.jl
src/arrays.jl,SymbolicUtils.promote_symtype,mtsig,"(Tuple{typeof(getindex), Type{A}, Vararg{Type{<:Integer}}} where A <: AbstractArray{T}) where T","(Tuple{typeof(getindex), Type{A}, Vararg{Type{var""##ANON_TV#2929""} where var""##ANON_TV#2929"" <: Integer}} where A <: AbstractArray{T}) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2929""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A, :(Union{}), :(AbstractArray{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/SymbolicCodegen.jl
src/array-lib.jl,Base.getindex,mtsig,"Tuple{Arr, Vararg{Symbolic{<:Integer}}}","Tuple{Arr, Vararg{Symbolic{var""##ANON_TV#4380""} where var""##ANON_TV#4380"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4380""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Symbolics.jl
src/array-lib.jl,Base.CartesianIndex,mtsig,"Tuple{Symbolic{<:Integer}, Vararg{Symbolic{<:Integer}}}","Tuple{Symbolic{var""##ANON_TV#4381""} where var""##ANON_TV#4381"" <: Integer, Vararg{Symbolic{var""##ANON_TV#4382""} where var""##ANON_TV#4382"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4381""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4382""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Symbolics.jl
src/array-lib.jl,getindex,mtsig,"Tuple{AbstractArray, Symbolic{<:Integer}, Vararg{Symbolic{<:Integer}}}","Tuple{AbstractArray, Symbolic{var""##ANON_TV#4385""} where var""##ANON_TV#4385"" <: Integer, Vararg{Symbolic{var""##ANON_TV#4386""} where var""##ANON_TV#4386"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4385""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4386""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Symbolics.jl
src/Symmetry.jl,calc_pointgroup,retty,AbstractVector{AbstractMatrix{<:Real}},"AbstractVector{AbstractMatrix{var""##ANON_TV#2401""} where var""##ANON_TV#2401"" <: Real}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2401""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SymmetryReduceBZ.jl
src/Utilities.jl,get_uniquefacets,retty,Vector{Vector{<:Int}},"Vector{Vector{var""##ANON_TV#2450""} where var""##ANON_TV#2450"" <: Int}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2450""), :(Union{}), :Int, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/SymmetryReduceBZ.jl
src/utils.jl,describe,mtsig,"Tuple{IO, TSFrame, Vararg{Union{Symbol, Pair{<:Base.Callable, <:Union{Symbol, AbstractString}}}}, Any}","Tuple{IO, TSFrame, Vararg{Union{Symbol, (Pair{var""##ANON_TV#3227"", var""##ANON_TV#3228""} where var""##ANON_TV#3227"" <: Base.Callable) where var""##ANON_TV#3228"" <: Union{Symbol, AbstractString}}}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3227""), :(Union{}), :(Base.Callable), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3228""), :(Union{}), :(Union{Symbol, AbstractString}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/TSFrames.jl
src/utils.jl,TSFrames.describe,mtsig,"Tuple{TSFrame, Vararg{Union{Symbol, Pair{<:Base.Callable, <:Union{Symbol, AbstractString}}}}, Any}","Tuple{TSFrame, Vararg{Union{Symbol, (Pair{var""##ANON_TV#3229"", var""##ANON_TV#3230""} where var""##ANON_TV#3229"" <: Base.Callable) where var""##ANON_TV#3230"" <: Union{Symbol, AbstractString}}}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3229""), :(Union{}), :(Base.Callable), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3230""), :(Union{}), :(Union{Symbol, AbstractString}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/TSFrames.jl
src/transforms/coerce.jl,Coerce,mtsig,"Tuple{Vararg{Pair{Symbol, <:Type}}, Any, Any}","Tuple{Vararg{Pair{Symbol, var""##ANON_TV#4467""} where var""##ANON_TV#4467"" <: Type}, Any, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4467""), :(Union{}), :Type, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/TableTransforms.jl
src/transforms/filter.jl,_nonmissing,mtsig,"Tuple{Type{Union{Missing, T}}, Any} where T","Tuple{Type{Union{Missing, T}}, Any} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/TableTransforms.jl
src/tablets.jl,Base.:+,mtsig,"Tuple{Vector{<:Tablet{<:Any}}, Vararg{Vector{<:Tablet{<:Any}}}}","Tuple{Vector{var""##ANON_TV#3012""} where var""##ANON_TV#3012"" <: (Tablet{var""##ANON_TV#3013""} where var""##ANON_TV#3013"" <: Any), Vararg{Vector{var""##ANON_TV#3014""} where var""##ANON_TV#3014"" <: (Tablet{var""##ANON_TV#3015""} where var""##ANON_TV#3015"" <: Any)}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3013""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3012""), :(Union{}), :(Tablet{var""##ANON_TV#3013""} where var""##ANON_TV#3013"" <: Any), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3015""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3014""), :(Union{}), :(Tablet{var""##ANON_TV#3015""} where var""##ANON_TV#3015"" <: Any), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,4,true,true,true,true,true,true,true,true,data/ta-info/all/TabletWeaving.jl
src/models/missings.jl,AbstractGPs.logpdf,mtsig,"Tuple{LGSSM, AbstractVector{Union{Missing, T}}} where T <: Union{<:AbstractVector, <:Real}","Tuple{LGSSM, AbstractVector{Union{Missing, T}}} where T <: ((Union{var""##ANON_TV#4542"", var""##ANON_TV#4543""} where var""##ANON_TV#4542"" <: AbstractVector) where var""##ANON_TV#4543"" <: Real)","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4542""), :(Union{}), :AbstractVector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCUpBnd)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4543""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCUpBnd)), JuliaSub.TyVarSummary(:T, :(Union{}), :((Union{var""##ANON_TV#4542"", var""##ANON_TV#4543""} where var""##ANON_TV#4542"" <: AbstractVector) where var""##ANON_TV#4543"" <: Real), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,false,false,true,true,data/ta-info/all/TemporalGPs.jl
src/models/missings.jl,_filter,mtsig,"Tuple{LGSSM, AbstractVector{Union{Missing, T}}} where T","Tuple{LGSSM, AbstractVector{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/TemporalGPs.jl
src/models/missings.jl,posterior,mtsig,"Tuple{LGSSM, AbstractVector{Union{Missing, T}}} where T","Tuple{LGSSM, AbstractVector{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/TemporalGPs.jl
src/models/missings.jl,fill_in_missings,mtsig,"Tuple{Vector, AbstractVector{Union{Missing, T}}} where T","Tuple{Vector, AbstractVector{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/TemporalGPs.jl
src/models/missings.jl,_fill_in_missings,mtsig,"Tuple{Vector, AbstractVector{Union{Missing, T}}} where T","Tuple{Vector, AbstractVector{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/TemporalGPs.jl
src/models/missings.jl,fill_in_missings,mtsig,"Tuple{Fill, AbstractVector{Union{Missing, T}}} where T","Tuple{Fill, AbstractVector{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/TemporalGPs.jl
src/models/missings.jl,ChainRulesCore.rrule,mtsig,"Tuple{typeof(_fill_in_missings), Vector, AbstractVector{Union{T, Missing}}} where T","Tuple{typeof(_fill_in_missings), Vector, AbstractVector{Union{T, Missing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/TemporalGPs.jl
src/sectors/fermions.jl,Base.isreal,mtsig,"Tuple{Type{Fermion{<:Any, I}}} where I <: Sector","Tuple{Type{Fermion{var""##ANON_TV#2426"", I} where var""##ANON_TV#2426"" <: Any}} where I <: Sector","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2426""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:I, :(Union{}), :Sector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/TensorKit.jl
src/sectors/groups.jl,×,mtsig,"Tuple{Type{<:Group}, Type{<:Group}, Vararg{Type{<:Group}}}","Tuple{Type{var""##ANON_TV#2427""} where var""##ANON_TV#2427"" <: Group, Type{var""##ANON_TV#2428""} where var""##ANON_TV#2428"" <: Group, Vararg{Type{var""##ANON_TV#2429""} where var""##ANON_TV#2429"" <: Group}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2427""), :(Union{}), :Group, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2428""), :(Union{}), :Group, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2429""), :(Union{}), :Group, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/TensorKit.jl
src/spaces/gradedspace.jl,GradedSpace,mtsig,"Tuple{Tuple{Vararg{Pair{I, <:Integer}}}, Bool} where I <: Sector","Tuple{Tuple{Vararg{Pair{I, var""##ANON_TV#2477""} where var""##ANON_TV#2477"" <: Integer}}, Bool} where I <: Sector","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2477""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:I, :(Union{}), :Sector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/TensorKit.jl
src/spaces/gradedspace.jl,GradedSpace,mtsig,"Tuple{Vararg{Pair{I, <:Integer}}, Bool} where I <: Sector","Tuple{Vararg{Pair{I, var""##ANON_TV#2478""} where var""##ANON_TV#2478"" <: Integer}, Bool} where I <: Sector","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2478""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:I, :(Union{}), :Sector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/TensorKit.jl
src/Auxiliary.jl,modemul,mtsig,"(Tuple{AbstractArray{<:Number, N}, Vararg{Pair{Int, <:AbstractMatrix{<:Number}}, M}} where M) where N","(Tuple{AbstractArray{var""##ANON_TV#1346"", N} where var""##ANON_TV#1346"" <: Number, Vararg{Pair{Int, var""##ANON_TV#1347""} where var""##ANON_TV#1347"" <: (AbstractMatrix{var""##ANON_TV#1348""} where var""##ANON_TV#1348"" <: Number), M}} where M) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1346""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1348""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1347""), :(Union{}), :(AbstractMatrix{var""##ANON_TV#1348""} where var""##ANON_TV#1348"" <: Number), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,true,true,true,true,true,true,data/ta-info/all/TensorRefinement.jl
src/TensorTrainFactor.jl,factorkp,mtsig,"((Tuple{Union{Factor{T, N}, Tuple{Factor{T, N}, Int}}, Vararg{Union{Factor{T, N}, Tuple{Factor{T, N}, Int}}, M}} where M) where N) where T <: Number","((Tuple{Union{Factor{T, N}, Tuple{Factor{T, N}, Int}}, Vararg{Union{Factor{T, N}, Tuple{Factor{T, N}, Int}}, M}} where M) where N) where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/TensorRefinement.jl
src/TensorTrainFactorization.jl,deckp,mtsig,"((Tuple{Union{Dec{T, N}, Tuple{Dec{T, N}, Int}}, Vararg{Union{Dec{T, N}, Tuple{Dec{T, N}, Int}}, M}} where M) where N) where T <: Number","((Tuple{Union{Dec{T, N}, Tuple{Dec{T, N}, Int}}, Vararg{Union{Dec{T, N}, Tuple{Dec{T, N}, Int}}, M}} where M) where N) where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,false,true,true,data/ta-info/all/TensorRefinement.jl
src/helper.jl,khatrirao,mtsig,"Tuple{Array{Matrix{<:Number}}, Any}","Tuple{Array{Matrix{var""##ANON_TV#2717""} where var""##ANON_TV#2717"" <: Number}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2717""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/TensorToolbox.jl
src/helper.jl,khatrirao,mtsig,"Tuple{Array{Matrix{<:Number}}, Integer, Any}","Tuple{Array{Matrix{var""##ANON_TV#2720""} where var""##ANON_TV#2720"" <: Number}, Integer, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2720""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/TensorToolbox.jl
src/helper.jl,kron,mtsig,"Tuple{Array{AbstractMatrix{<:Number}}, Any}","Tuple{Array{AbstractMatrix{var""##ANON_TV#2721""} where var""##ANON_TV#2721"" <: Number}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2721""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/TensorToolbox.jl
src/helper.jl,krontkron,mtsig,"Tuple{Array{Matrix{<:Number}}, Array{Vector{<:Number}}, Any}","Tuple{Array{Matrix{var""##ANON_TV#2722""} where var""##ANON_TV#2722"" <: Number}, Array{Vector{var""##ANON_TV#2723""} where var""##ANON_TV#2723"" <: Number}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2722""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2723""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/TensorToolbox.jl
src/helper.jl,krontkron,mtsig,"Tuple{Array{Matrix{<:Number}}, VectorCell, Any}","Tuple{Array{Matrix{var""##ANON_TV#2724""} where var""##ANON_TV#2724"" <: Number}, VectorCell, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2724""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/TensorToolbox.jl
src/helper.jl,krontkron,mtsig,"Tuple{MatrixCell, Array{Vector{<:Number}}, Any}","Tuple{MatrixCell, Array{Vector{var""##ANON_TV#2725""} where var""##ANON_TV#2725"" <: Number}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2725""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/TensorToolbox.jl
src/tensor.jl,contract,mtsig,"Tuple{Array{AbstractArray{<:Number, D}, 1}, Any} where D","Tuple{Array{AbstractArray{var""##ANON_TV#2812"", D} where var""##ANON_TV#2812"" <: Number, 1}, Any} where D","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2812""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/TensorToolbox.jl
src/Space.jl,Base.getindex,mtsig,"Tuple{Space{spaces}, Vararg{Union{Int, StaticVector{<:Any, Int}, StaticIndex, Colon}}} where spaces","Tuple{Space{spaces}, Vararg{Union{Int, StaticVector{var""##ANON_TV#2580"", Int} where var""##ANON_TV#2580"" <: Any, StaticIndex, Colon}}} where spaces","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2580""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:spaces, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Tensorial.jl
src/Space.jl,_getindex,mtsig,"Tuple{Space{spaces}, Vararg{Union{Int, StaticVector{<:Any, Int}, StaticIndex}}} where spaces","Tuple{Space{spaces}, Vararg{Union{Int, StaticVector{var""##ANON_TV#2582"", Int} where var""##ANON_TV#2582"" <: Any, StaticIndex}}} where spaces","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2582""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:spaces, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Tensorial.jl
src/Tensor.jl,Base.:($op),mtsig,"(Tuple{Type{Tensor{S, T, N} where T}} where N) where S","(Tuple{Type{Tensor{S, T, N} where T}} where N) where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/Tensorial.jl
src/Tensor.jl,Base.:($op),mtsig,"((Tuple{Type{Tensor{S, T, N, L} where T}} where L) where N) where S","((Tuple{Type{Tensor{S, T, N, L} where T}} where L) where N) where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/Tensorial.jl
src/abstractarray.jl,Base.getindex,mtsig,"Tuple{AbstractTensor, Vararg{Union{Int, StaticArray{<:Any, Int}, StaticIndex, Colon}}}","Tuple{AbstractTensor, Vararg{Union{Int, StaticArray{var""##ANON_TV#2586"", Int} where var""##ANON_TV#2586"" <: Any, StaticIndex, Colon}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2586""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Tensorial.jl
src/abstractarray.jl,_getindex,mtsig,"Tuple{Space{S}, AbstractTensor, Vararg{Union{Int, StaticArray{<:Any, Int}, StaticIndex, Colon}}} where S","Tuple{Space{S}, AbstractTensor, Vararg{Union{Int, StaticArray{var""##ANON_TV#2588"", Int} where var""##ANON_TV#2588"" <: Any, StaticIndex, Colon}}} where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2588""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Tensorial.jl
src/ops.jl,diagm,mtsig,"Tuple{Vararg{Pair{<:Val, <:AbstractVec}}}","Tuple{Vararg{(Pair{var""##ANON_TV#2602"", var""##ANON_TV#2603""} where var""##ANON_TV#2602"" <: Val) where var""##ANON_TV#2603"" <: AbstractVec}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2602""), :(Union{}), :Val, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2603""), :(Union{}), :AbstractVec, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Tensorial.jl
src/field.jl,fromtype,mtsig,"Tuple{Type{Union{Missing, T}}} where T","Tuple{Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/TextParse.jl
src/train/classify.jl,decide,mtsig,"Tuple{Vector{S}, Dict{String, Vector{T} where T}} where S","Tuple{Vector{S}, Dict{String, Vector{T} where T}} where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Thorn.jl
src/pinning.jl,pinthreads,mtsig,"Tuple{Vararg{AbstractVector{<:Integer}}, Vararg{Any}}","Tuple{Vararg{AbstractVector{var""##ANON_TV#2257""} where var""##ANON_TV#2257"" <: Integer}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2257""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ThreadPinning.jl
src/foreach.jl,ThreadsX.foreach,mtsig,"Tuple{Any, AbstractArray{<:Any, N}, Vararg{AbstractArray{<:Any, N}}, Vararg{Any}} where N","Tuple{Any, AbstractArray{var""##ANON_TV#2649"", N} where var""##ANON_TV#2649"" <: Any, Vararg{AbstractArray{var""##ANON_TV#2650"", N} where var""##ANON_TV#2650"" <: Any}, Vararg{Any}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2649""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2650""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/ThreadsX.jl
src/map.jl,ThreadsX.map,mtsig,"Tuple{Any, AbstractArray{<:Any, N}, Vararg{AbstractArray{<:Any, N}}, Vararg{Any}} where N","Tuple{Any, AbstractArray{var""##ANON_TV#2651"", N} where var""##ANON_TV#2651"" <: Any, Vararg{AbstractArray{var""##ANON_TV#2652"", N} where var""##ANON_TV#2652"" <: Any}, Vararg{Any}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2651""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2652""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/ThreadsX.jl
src/Thrift2.jl,thrifttype,mtsig,"Tuple{Type{Union{T, Nothing}}} where T","Tuple{Type{Union{T, Nothing}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Thrift2.jl
src/compression.jl,get_inflator,mtsig,"Tuple{Type{Tuple{typeof(read!), TiffFile, AbstractArray{T, N} where {T, N}, Val{C}}}} where C","Tuple{Type{Tuple{typeof(read!), TiffFile, (AbstractArray{T, N} where T) where N, Val{C}}}} where C","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,true,true,true,data/ta-info/all/TiffImages.jl
src/TightBindingApproximation.jl,add!,mtsig,"Tuple{AbstractMatrix, TBAMatrixRepresentation{<:TBAKind{:TBA}}, Operator{<:Number, <:ID{CompositeIndex{<:Index{Int, <:FID}}, 2}}, Vararg{Any}}","Tuple{AbstractMatrix, TBAMatrixRepresentation{var""##ANON_TV#2713""} where var""##ANON_TV#2713"" <: TBAKind{:TBA}, (Operator{var""##ANON_TV#2714"", var""##ANON_TV#2715""} where var""##ANON_TV#2714"" <: Number) where var""##ANON_TV#2715"" <: ID{CompositeIndex{var""##ANON_TV#2716""} where var""##ANON_TV#2716"" <: (Index{Int, var""##ANON_TV#2717""} where var""##ANON_TV#2717"" <: FID), 2}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2713""), :(Union{}), :(TBAKind{:TBA}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2717""), :(Union{}), :FID, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2716""), :(Union{}), :(Index{Int, var""##ANON_TV#2717""} where var""##ANON_TV#2717"" <: FID), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2714""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2715""), :(Union{}), :(ID{CompositeIndex{var""##ANON_TV#2716""} where var""##ANON_TV#2716"" <: (Index{Int, var""##ANON_TV#2717""} where var""##ANON_TV#2717"" <: FID), 2}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,true,5,true,true,true,true,true,true,true,true,data/ta-info/all/TightBindingApproximation.jl
src/TightBindingApproximation.jl,add!,mtsig,"Tuple{AbstractMatrix, TBAMatrixRepresentation{<:TBAKind{:BdG}}, Operator{<:Number, <:ID{CompositeIndex{<:Index{Int, <:FID{:f}}}, 2}}, Vararg{Any}}","Tuple{AbstractMatrix, TBAMatrixRepresentation{var""##ANON_TV#2718""} where var""##ANON_TV#2718"" <: TBAKind{:BdG}, (Operator{var""##ANON_TV#2719"", var""##ANON_TV#2720""} where var""##ANON_TV#2719"" <: Number) where var""##ANON_TV#2720"" <: ID{CompositeIndex{var""##ANON_TV#2721""} where var""##ANON_TV#2721"" <: (Index{Int, var""##ANON_TV#2722""} where var""##ANON_TV#2722"" <: FID{:f}), 2}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2718""), :(Union{}), :(TBAKind{:BdG}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2722""), :(Union{}), :(FID{:f}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2721""), :(Union{}), :(Index{Int, var""##ANON_TV#2722""} where var""##ANON_TV#2722"" <: FID{:f}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2719""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2720""), :(Union{}), :(ID{CompositeIndex{var""##ANON_TV#2721""} where var""##ANON_TV#2721"" <: (Index{Int, var""##ANON_TV#2722""} where var""##ANON_TV#2722"" <: FID{:f}), 2}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,true,5,true,true,true,true,true,true,true,true,data/ta-info/all/TightBindingApproximation.jl
src/TightBindingApproximation.jl,add!,mtsig,"Tuple{AbstractMatrix, TBAMatrixRepresentation{<:TBAKind{:BdG}}, Operator{<:Number, <:ID{CompositeIndex{<:Index{Int, <:FID{:b}}}, 2}}, Any, Vararg{Any}}","Tuple{AbstractMatrix, TBAMatrixRepresentation{var""##ANON_TV#2723""} where var""##ANON_TV#2723"" <: TBAKind{:BdG}, (Operator{var""##ANON_TV#2724"", var""##ANON_TV#2725""} where var""##ANON_TV#2724"" <: Number) where var""##ANON_TV#2725"" <: ID{CompositeIndex{var""##ANON_TV#2726""} where var""##ANON_TV#2726"" <: (Index{Int, var""##ANON_TV#2727""} where var""##ANON_TV#2727"" <: FID{:b}), 2}, Any, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2723""), :(Union{}), :(TBAKind{:BdG}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2727""), :(Union{}), :(FID{:b}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2726""), :(Union{}), :(Index{Int, var""##ANON_TV#2727""} where var""##ANON_TV#2727"" <: FID{:b}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2724""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2725""), :(Union{}), :(ID{CompositeIndex{var""##ANON_TV#2726""} where var""##ANON_TV#2726"" <: (Index{Int, var""##ANON_TV#2727""} where var""##ANON_TV#2727"" <: FID{:b}), 2}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,true,5,true,true,true,true,true,true,true,true,data/ta-info/all/TightBindingApproximation.jl
src/TightBindingApproximation.jl,add!,mtsig,"Tuple{AbstractMatrix, TBAMatrixRepresentation{<:TBAKind{:BdG}}, Operator{<:Number, <:ID{CompositeIndex{<:Index{Int, <:PID}}, 2}}, Any, Vararg{Any}}","Tuple{AbstractMatrix, TBAMatrixRepresentation{var""##ANON_TV#2729""} where var""##ANON_TV#2729"" <: TBAKind{:BdG}, (Operator{var""##ANON_TV#2730"", var""##ANON_TV#2731""} where var""##ANON_TV#2730"" <: Number) where var""##ANON_TV#2731"" <: ID{CompositeIndex{var""##ANON_TV#2732""} where var""##ANON_TV#2732"" <: (Index{Int, var""##ANON_TV#2733""} where var""##ANON_TV#2733"" <: PID), 2}, Any, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2729""), :(Union{}), :(TBAKind{:BdG}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2733""), :(Union{}), :PID, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2732""), :(Union{}), :(Index{Int, var""##ANON_TV#2733""} where var""##ANON_TV#2733"" <: PID), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2730""), :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2731""), :(Union{}), :(ID{CompositeIndex{var""##ANON_TV#2732""} where var""##ANON_TV#2732"" <: (Index{Int, var""##ANON_TV#2733""} where var""##ANON_TV#2733"" <: PID), 2}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple))]",false,true,5,true,true,true,true,true,true,true,true,data/ta-info/all/TightBindingApproximation.jl
src/TimeDataFrames.jl,TimeDataFrame,mtsig,"Tuple{T, Vararg{Pair{Symbol, <:Any}}, Bool, Bool} where T <: ExtendedDates.SimpleDate","Tuple{T, Vararg{Pair{Symbol, var""##ANON_TV#2142""} where var""##ANON_TV#2142"" <: Any}, Bool, Bool} where T <: ExtendedDates.SimpleDate","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2142""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(ExtendedDates.SimpleDate), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/TimeDataFrames.jl
src/TimeDataFrames.jl,TimeDataFrame,mtsig,"Tuple{T, Vararg{Pair{<:AbstractString, <:Any}}, Bool, Bool} where T <: ExtendedDates.SimpleDate","Tuple{T, Vararg{(Pair{var""##ANON_TV#2143"", var""##ANON_TV#2144""} where var""##ANON_TV#2143"" <: AbstractString) where var""##ANON_TV#2144"" <: Any}, Bool, Bool} where T <: ExtendedDates.SimpleDate","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2143""), :(Union{}), :AbstractString, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2144""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :(ExtendedDates.SimpleDate), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/TimeDataFrames.jl
src/various.jl,Base.merge!,mtsig,"Tuple{Workspace, Vararg{Union{Workspace, <:AbstractDict}}}","Tuple{Workspace, Vararg{Union{Workspace, var""##ANON_TV#3018""} where var""##ANON_TV#3018"" <: AbstractDict}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3018""), :(Union{}), :AbstractDict, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/TimeSeriesEcon.jl
src/various.jl,Base.merge,mtsig,"Tuple{Workspace, Vararg{Union{Workspace, <:AbstractDict}}}","Tuple{Workspace, Vararg{Union{Workspace, var""##ANON_TV#3019""} where var""##ANON_TV#3019"" <: AbstractDict}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3019""), :(Union{}), :AbstractDict, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/TimeSeriesEcon.jl
src/interface/Components.jl,img,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3259""} where var""##ANON_TV#3259"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3259""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,link,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3260""} where var""##ANON_TV#3260"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3260""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,meta,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3261""} where var""##ANON_TV#3261"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3261""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,input,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3262""} where var""##ANON_TV#3262"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3262""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,a,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3263""} where var""##ANON_TV#3263"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3263""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,p,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3264""} where var""##ANON_TV#3264"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3264""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,h,mtsig,"Tuple{String, Integer, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Integer, Vararg{Pair{String, var""##ANON_TV#3265""} where var""##ANON_TV#3265"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3265""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,h1,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3266""} where var""##ANON_TV#3266"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3266""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,ul,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3267""} where var""##ANON_TV#3267"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3267""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,li,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3268""} where var""##ANON_TV#3268"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3268""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,div,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3269""} where var""##ANON_TV#3269"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3269""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,divider,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3270""} where var""##ANON_TV#3270"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3270""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,br,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3271""} where var""##ANON_TV#3271"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3271""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,i,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3272""} where var""##ANON_TV#3272"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3272""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,title,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3273""} where var""##ANON_TV#3273"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3273""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,span,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3274""} where var""##ANON_TV#3274"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3274""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,iframe,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3275""} where var""##ANON_TV#3275"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3275""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,svg,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3276""} where var""##ANON_TV#3276"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3276""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,element,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3277""} where var""##ANON_TV#3277"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3277""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,label,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3278""} where var""##ANON_TV#3278"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3278""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,script,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3279""} where var""##ANON_TV#3279"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3279""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,nav,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3280""} where var""##ANON_TV#3280"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3280""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,button,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3281""} where var""##ANON_TV#3281"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3281""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,form,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3282""} where var""##ANON_TV#3282"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3282""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,section,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3283""} where var""##ANON_TV#3283"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3283""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,body,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3284""} where var""##ANON_TV#3284"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3284""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,header,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3285""} where var""##ANON_TV#3285"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3285""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,footer,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3286""} where var""##ANON_TV#3286"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3286""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,b,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3287""} where var""##ANON_TV#3287"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3287""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,source,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3288""} where var""##ANON_TV#3288"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3288""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/interface/Components.jl,audio,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#3289""} where var""##ANON_TV#3289"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3289""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Toolips.jl
src/Components.jl,textdiv,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, String, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2592""} where var""##ANON_TV#2592"" <: Any}, String, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2592""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsDefaults.jl
src/Components.jl,textbox,mtsig,"Tuple{String, UnitRange, Vararg{Pair{String, <:Any}}, String, Integer, Vararg{Any}}","Tuple{String, UnitRange, Vararg{Pair{String, var""##ANON_TV#2593""} where var""##ANON_TV#2593"" <: Any}, String, Integer, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2593""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsDefaults.jl
src/Components.jl,dropdown,mtsig,"Tuple{String, Vector{Servable}, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vector{Servable}, Vararg{Pair{String, var""##ANON_TV#2594""} where var""##ANON_TV#2594"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2594""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsDefaults.jl
src/Components.jl,checkbox,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Bool, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2595""} where var""##ANON_TV#2595"" <: Any}, Bool, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2595""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsDefaults.jl
src/Components.jl,keyinput,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Any, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2599""} where var""##ANON_TV#2599"" <: Any}, Any, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2599""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsDefaults.jl
src/ToolipsMarkdown.jl,tmd,mtsig,"Tuple{String, String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, String, Vararg{Pair{String, var""##ANON_TV#3750""} where var""##ANON_TV#3750"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3750""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsMarkdown.jl
src/SVComponents.jl,text,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2600""} where var""##ANON_TV#2600"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2600""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsSVG.jl
src/SVComponents.jl,animate,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2601""} where var""##ANON_TV#2601"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2601""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsSVG.jl
src/SVComponents.jl,image,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2602""} where var""##ANON_TV#2602"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2602""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsSVG.jl
src/SVComponents.jl,circle,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2603""} where var""##ANON_TV#2603"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2603""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsSVG.jl
src/SVComponents.jl,rect,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2604""} where var""##ANON_TV#2604"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2604""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsSVG.jl
src/SVComponents.jl,path,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Any, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2605""} where var""##ANON_TV#2605"" <: Any}, Any, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2605""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsSVG.jl
src/SVComponents.jl,line,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2606""} where var""##ANON_TV#2606"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2606""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsSVG.jl
src/SVComponents.jl,ellipse,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2607""} where var""##ANON_TV#2607"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2607""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsSVG.jl
src/SVComponents.jl,polyline,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2608""} where var""##ANON_TV#2608"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2608""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsSVG.jl
src/SVComponents.jl,polygon,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2609""} where var""##ANON_TV#2609"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2609""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsSVG.jl
src/SVComponents.jl,use,mtsig,"Tuple{String, Vararg{Pair{String, <:Any}}, Vararg{Any}}","Tuple{String, Vararg{Pair{String, var""##ANON_TV#2610""} where var""##ANON_TV#2610"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2610""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ToolipsSVG.jl
src/TopOptProblems/elementmatrix.jl,Base.convert,mtsig,"((Tuple{Type{Vector{<:ElementMatrix}}, Vector{TM}, Any, Any} where TM <: StaticMatrix{N, N, T}) where T) where N","((Tuple{Type{Vector{var""##ANON_TV#3036""} where var""##ANON_TV#3036"" <: ElementMatrix}, Vector{TM}, Any, Any} where TM <: StaticMatrix{N, N, T}) where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3036""), :(Union{}), :ElementMatrix, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TM, :(Union{}), :(StaticMatrix{N, N, T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,true,true,true,data/ta-info/all/TopOpt.jl
src/TopOptProblems/elementmatrix.jl,Base.convert,mtsig,"((Tuple{Type{Vector{<:ElementMatrix}}, Vector{Symmetric{T, TM}}, Any, Any} where TM <: StaticMatrix{N, N, T}) where T) where N","((Tuple{Type{Vector{var""##ANON_TV#3037""} where var""##ANON_TV#3037"" <: ElementMatrix}, Vector{Symmetric{T, TM}}, Any, Any} where TM <: StaticMatrix{N, N, T}) where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3037""), :(Union{}), :ElementMatrix, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TM, :(Union{}), :(StaticMatrix{N, N, T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,true,true,true,data/ta-info/all/TopOpt.jl
src/TopOptProblems/elementmatrix.jl,Base.convert,mtsig,"(Tuple{Type{Vector{<:ElementMatrix}}, Vector{TM}, Any, Any} where TM <: AbstractMatrix{T}) where T","(Tuple{Type{Vector{var""##ANON_TV#3038""} where var""##ANON_TV#3038"" <: ElementMatrix}, Vector{TM}, Any, Any} where TM <: AbstractMatrix{T}) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3038""), :(Union{}), :ElementMatrix, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TM, :(Union{}), :(AbstractMatrix{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/TopOpt.jl
src/TopOptProblems/elementmatrix.jl,Base.convert,mtsig,"(Tuple{Type{Vector{<:ElementMatrix}}, Vector{Symmetric{T, TM}}, Any, Any} where TM <: AbstractMatrix{T}) where T","(Tuple{Type{Vector{var""##ANON_TV#3039""} where var""##ANON_TV#3039"" <: ElementMatrix}, Vector{Symmetric{T, TM}}, Any, Any} where TM <: AbstractMatrix{T}) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3039""), :(Union{}), :ElementMatrix, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TM, :(Union{}), :(AbstractMatrix{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/TopOpt.jl
src/elementmatrix.jl,Base.convert,mtsig,"((Tuple{Type{Vector{<:ElementMatrix}}, Vector{TM}, Any, Any} where TM <: StaticMatrix{N, N, T}) where T) where N","((Tuple{Type{Vector{var""##ANON_TV#2954""} where var""##ANON_TV#2954"" <: ElementMatrix}, Vector{TM}, Any, Any} where TM <: StaticMatrix{N, N, T}) where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2954""), :(Union{}), :ElementMatrix, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TM, :(Union{}), :(StaticMatrix{N, N, T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,true,true,true,data/ta-info/all/TopOptProblems.jl
src/elementmatrix.jl,Base.convert,mtsig,"((Tuple{Type{Vector{<:ElementMatrix}}, Vector{Symmetric{T, TM}}, Any, Any} where TM <: StaticMatrix{N, N, T}) where T) where N","((Tuple{Type{Vector{var""##ANON_TV#2955""} where var""##ANON_TV#2955"" <: ElementMatrix}, Vector{Symmetric{T, TM}}, Any, Any} where TM <: StaticMatrix{N, N, T}) where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2955""), :(Union{}), :ElementMatrix, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TM, :(Union{}), :(StaticMatrix{N, N, T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,true,true,true,data/ta-info/all/TopOptProblems.jl
src/elementmatrix.jl,Base.convert,mtsig,"(Tuple{Type{Vector{<:ElementMatrix}}, Vector{TM}, Any, Any} where TM <: AbstractMatrix{T}) where T","(Tuple{Type{Vector{var""##ANON_TV#2956""} where var""##ANON_TV#2956"" <: ElementMatrix}, Vector{TM}, Any, Any} where TM <: AbstractMatrix{T}) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2956""), :(Union{}), :ElementMatrix, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TM, :(Union{}), :(AbstractMatrix{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/TopOptProblems.jl
src/elementmatrix.jl,Base.convert,mtsig,"(Tuple{Type{Vector{<:ElementMatrix}}, Vector{Symmetric{T, TM}}, Any, Any} where TM <: AbstractMatrix{T}) where T","(Tuple{Type{Vector{var""##ANON_TV#2957""} where var""##ANON_TV#2957"" <: ElementMatrix}, Vector{Symmetric{T, TM}}, Any, Any} where TM <: AbstractMatrix{T}) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2957""), :(Union{}), :ElementMatrix, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:TM, :(Union{}), :(AbstractMatrix{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,true,true,true,data/ta-info/all/TopOptProblems.jl
src/core.jl,_real_state_type,mtsig,"Tuple{Type{Union{T, _FakeState}}} where T","Tuple{Type{Union{T, _FakeState}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Transducers.jl
src/core.jl,_nonidtype,mtsig,"(Tuple{Type{Union{S, T}}} where S <: InferableInit) where T","(Tuple{Type{Union{S, T}}} where S <: InferableInit) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(Union{}), :InferableInit, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/Transducers.jl
src/groupby.jl,_typesubtract_impl,mtsig,"(Tuple{Type{T}, Type{Union{T, S}}} where T) where S","(Tuple{Type{T}, Type{Union{T, S}}} where T) where S","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,false,false,true,true,data/ta-info/all/Transducers.jl
src/processes.jl,_copy,mtsig,"Tuple{Any, Type{Vector{<:Any}}, Any, SizeStable, Base.HasLength}","Tuple{Any, Type{Vector{var""##ANON_TV#2331""} where var""##ANON_TV#2331"" <: Any}, Any, SizeStable, Base.HasLength}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2331""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Transducers.jl
src/processes.jl,_copy,mtsig,"Tuple{Any, Type{Array{<:Any, N}}, Any, SizeStable, Base.HasShape} where N","Tuple{Any, Type{Array{var""##ANON_TV#2332"", N} where var""##ANON_TV#2332"" <: Any}, Any, SizeStable, Base.HasShape} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2332""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/Transducers.jl
src/ApFilterTrials.jl,ap_filter_trials,retty,"NTuple{2, Vector{T} where T <: Union{Float64, Int}}","NTuple{2, Vector{T} where T <: Union{Float64, Int}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :(Union{Float64, Int}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/TreeParzen.jl
src/Tries.jl,Trie,mtsig,"(Tuple{Vararg{Pair{NTuple{N, K}, T} where N}} where T) where K","(Tuple{Vararg{Pair{NTuple{N, K}, T} where N}} where T) where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,false,true,false,true,true,data/ta-info/all/Tries.jl
src/Tries.jl,Trie,mtsig,"Tuple{Vararg{Pair{NTuple{N, K}, <:Any} where N}} where K","Tuple{Vararg{(Pair{NTuple{N, K}, var""##ANON_TV#4719""} where var""##ANON_TV#4719"" <: Any) where N}} where K","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4719""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,false,true,false,true,true,data/ta-info/all/Tries.jl
src/reversible/LogLikeNumbers/base.jl,NiLang.loaddata,mtsig,"Tuple{Type{Array{<:LogLikeNumber{GVar{T, T}}}}, Array{<:LogLikeNumber{T}}} where T","Tuple{Type{Array{var""##ANON_TV#3326""} where var""##ANON_TV#3326"" <: LogLikeNumber{GVar{T, T}}}, Array{var""##ANON_TV#3327""} where var""##ANON_TV#3327"" <: LogLikeNumber{T}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3326""), :(Union{}), :(LogLikeNumber{GVar{T, T}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3327""), :(Union{}), :(LogLikeNumber{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,true,false,true,true,data/ta-info/all/TropicalYao.jl
lib/TryExperimental/src/concrete.jl,Base.convert,mtsig,"Tuple{Type{ConcreteResult{<:Any, E}}, Err} where E","Tuple{Type{ConcreteResult{var""##ANON_TV#3078"", E} where var""##ANON_TV#3078"" <: Any}, Err} where E","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3078""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:E, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/Try.jl
src/concrete.jl,Base.convert,mtsig,"Tuple{Type{ConcreteResult{<:Any, E}}, Err} where E","Tuple{Type{ConcreteResult{var""##ANON_TV#2342"", E} where var""##ANON_TV#2342"" <: Any}, Err} where E","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2342""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:E, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/TryExperimental.jl
src/Interfaces/MOI/MOI_wrapper.jl,<NOT A FUNSIG>,tyassorann,"Dict{MOI.ConstraintIndex{MOI.ScalarAffineFunction{T}, <:SCALAR_SETS{T}}, Int}","Dict{MOI.ConstraintIndex{MOI.ScalarAffineFunction{T}, var""##ANON_TV#4478""} where var""##ANON_TV#4478"" <: SCALAR_SETS{T}, Int}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4478""), :(Union{}), :(SCALAR_SETS{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Tulip.jl
src/Interfaces/MOI/MOI_wrapper.jl,<NOT A FUNSIG>,tyassorann,"Dict{MOI.VariableIndex, Set{Type{<:MOI.AbstractScalarSet}}}","Dict{MOI.VariableIndex, Set{Type{var""##ANON_TV#4479""} where var""##ANON_TV#4479"" <: MOI.AbstractScalarSet}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4479""), :(Union{}), :(MOI.AbstractScalarSet), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/Tulip.jl
src/basics.jl,BoundingBox,mtsig,"Tuple{NTuple{2, AbstractUnitRange{<:Integer}}}","Tuple{NTuple{2, AbstractUnitRange{var""##ANON_TV#4012""} where var""##ANON_TV#4012"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4012""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/TwoDimensional.jl
src/basics.jl,BoundingBox,mtsig,"Tuple{NTuple{2, AbstractUnitRange{<:Integer}}} where T","Tuple{NTuple{2, AbstractUnitRange{var""##ANON_TV#4013""} where var""##ANON_TV#4013"" <: Integer}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4013""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,true,true,true,true,true,true,data/ta-info/all/TwoDimensional.jl
src/TypeInstances_DataTypesBasic/Either.jl,TypeClasses.neutral,mtsig,"(Tuple{Type{Either{L, <:UR}}} where UR) where L","(Tuple{Type{Either{L, var""##ANON_TV#3067""} where var""##ANON_TV#3067"" <: UR}} where UR) where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3067""), :(Union{}), :UR, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:UR, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/TypeClasses.jl
src/TypeInstances_DataTypesBasic/Either.jl,TypeClasses.neutral,mtsig,Tuple{Type{Option{<:UT}}} where UT,"Tuple{Type{Option{var""##ANON_TV#3068""} where var""##ANON_TV#3068"" <: UT}} where UT","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3068""), :(Union{}), :UT, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:UT, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/TypeClasses.jl
src/TypeInstances_DataTypesBasic/Either.jl,TypeClasses.pure,mtsig,"(Tuple{Type{Either{L, <:UR}}, Any} where UR) where L","(Tuple{Type{Either{L, var""##ANON_TV#3069""} where var""##ANON_TV#3069"" <: UR}, Any} where UR) where L","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3069""), :(Union{}), :UR, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:UR, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/TypeClasses.jl
src/TypeInstances_DataTypesBasic/Either.jl,TypeClasses.pure,mtsig,"(Tuple{Type{Either{<:UL, R}}, Any} where R) where UL","(Tuple{Type{Either{var""##ANON_TV#3070"", R} where var""##ANON_TV#3070"" <: UL}, Any} where R) where UL","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3070""), :(Union{}), :UL, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:R, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:UL, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/TypeClasses.jl
src/TypeInstances_DataTypesBasic/Either.jl,TypeClasses.pure,mtsig,"(Tuple{Type{Either{<:UL, <:UR}}, Any} where UR) where UL","(Tuple{Type{(Either{var""##ANON_TV#3071"", var""##ANON_TV#3072""} where var""##ANON_TV#3071"" <: UL) where var""##ANON_TV#3072"" <: UR}, Any} where UR) where UL","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3071""), :(Union{}), :UL, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3072""), :(Union{}), :UR, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:UR, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:UL, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUpBnd, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/TypeClasses.jl
src/concept/thing/Relation.jl,get_players,mtsig,"Tuple{AbstractCoreTransaction, AbstractRelation, Optional{Vector{<:AbstractRoleType}}}","Tuple{AbstractCoreTransaction, AbstractRelation, Optional{Vector{var""##ANON_TV#2725""} where var""##ANON_TV#2725"" <: AbstractRoleType}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2725""), :(Union{}), :AbstractRoleType, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/TypeDBClient.jl
src/concept/thing/Relation.jl,get_relations,mtsig,"Tuple{AbstractCoreTransaction, AbstractThing, Optional{AbstractVector{<:AbstractRoleType}}}","Tuple{AbstractCoreTransaction, AbstractThing, Optional{AbstractVector{var""##ANON_TV#2726""} where var""##ANON_TV#2726"" <: AbstractRoleType}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2726""), :(Union{}), :AbstractRoleType, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/TypeDBClient.jl
src/concept/thing/Thing.jl,get_has,mtsig,"Tuple{AbstractCoreTransaction, AbstractThing, Optional{AttributeType}, Optional{Vector{<:AbstractAttributeType}}, Any}","Tuple{AbstractCoreTransaction, AbstractThing, Optional{AttributeType}, Optional{Vector{var""##ANON_TV#2727""} where var""##ANON_TV#2727"" <: AbstractAttributeType}, Any}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2727""), :(Union{}), :AbstractAttributeType, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/TypeDBClient.jl
src/promotion.jl,MP.promote_rule,mtsig,"Tuple{Type{Term{C, M1} where C}, Type{<:MonomialLike}} where M1","Tuple{Type{Term{C, M1} where C}, Type{var""##ANON_TV#4505""} where var""##ANON_TV#4505"" <: MonomialLike} where M1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4505""), :(Union{}), :MonomialLike, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/TypedPolynomials.jl
src/promotion.jl,MP.promote_rule,mtsig,"Tuple{Type{<:MonomialLike}, Type{Term{C, M2} where C}} where M2","Tuple{Type{var""##ANON_TV#4506""} where var""##ANON_TV#4506"" <: MonomialLike, Type{Term{C, M2} where C}} where M2","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4506""), :(Union{}), :MonomialLike, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/TypedPolynomials.jl
src/promotion.jl,MP.promote_rule,mtsig,"((Tuple{Type{Term{C, M1} where C}, Type{Term{T, M2}}} where M2) where M1) where T","((Tuple{Type{Term{C, M1} where C}, Type{Term{T, M2}}} where M2) where M1) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/TypedPolynomials.jl
src/promotion.jl,MP.promote_rule,mtsig,"((Tuple{Type{Term{T, M2}}, Type{Term{C, M1} where C}} where M2) where M1) where T","((Tuple{Type{Term{T, M2}}, Type{Term{C, M1} where C}} where M2) where M1) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/TypedPolynomials.jl
src/promotion.jl,MP.promote_rule,mtsig,"Tuple{Type{<:Polynomial}, Type{Term{C, M} where C}} where M","Tuple{Type{var""##ANON_TV#4507""} where var""##ANON_TV#4507"" <: Polynomial, Type{Term{C, M} where C}} where M","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4507""), :(Union{}), :Polynomial, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/TypedPolynomials.jl
src/promotion.jl,MP.promote_rule,mtsig,"Tuple{Type{Term{C, M} where C}, Type{<:Polynomial}} where M","Tuple{Type{Term{C, M} where C}, Type{var""##ANON_TV#4508""} where var""##ANON_TV#4508"" <: Polynomial} where M","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4508""), :(Union{}), :Polynomial, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/TypedPolynomials.jl
src/promotion.jl,MP.promote_rule_constant,mtsig,"Tuple{Type, Type{Term{C, M} where C}} where M","Tuple{Type, Type{Term{C, M} where C}} where M","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/TypedPolynomials.jl
src/promotion.jl,Base.convert,mtsig,"Tuple{Type{Term{C, M} where C}, MonomialLike} where M","Tuple{Type{Term{C, M} where C}, MonomialLike} where M","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:C, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:M, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/TypedPolynomials.jl
src/DictTable.jl,Dictionaries.empty_type,mtsig,"(Tuple{Type{DictTable{<:Any, <:Any, <:Any, Inds}}, Type{I}} where Inds) where I","(Tuple{Type{((DictTable{var""##ANON_TV#4726"", var""##ANON_TV#4727"", var""##ANON_TV#4728"", Inds} where var""##ANON_TV#4726"" <: Any) where var""##ANON_TV#4727"" <: Any) where var""##ANON_TV#4728"" <: Any}, Type{I}} where Inds) where I","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4726""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4727""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4728""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:Inds, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:I, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,false,true,true,false,true,true,data/ta-info/all/TypedTables.jl
src/FlexTable.jl,<NOT A FUNSIG>,tyassorann,"NamedTuple{<:Any, <:Tuple{Vararg{AbstractArray{<:Any, N}}}}","(NamedTuple{var""##ANON_TV#4748"", var""##ANON_TV#4749""} where var""##ANON_TV#4748"" <: Any) where var""##ANON_TV#4749"" <: Tuple{Vararg{AbstractArray{var""##ANON_TV#4750"", N} where var""##ANON_TV#4750"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4750""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4748""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4749""), :(Union{}), :(Tuple{Vararg{AbstractArray{var""##ANON_TV#4750"", N} where var""##ANON_TV#4750"" <: Any}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/TypedTables.jl
src/FlexTable.jl,FlexTable,mtsig,"Tuple{NamedTuple{<:Any, <:Tuple{Vararg{AbstractArray{<:Any, N}}}}} where N","Tuple{(NamedTuple{var""##ANON_TV#4751"", var""##ANON_TV#4752""} where var""##ANON_TV#4751"" <: Any) where var""##ANON_TV#4752"" <: Tuple{Vararg{AbstractArray{var""##ANON_TV#4753"", N} where var""##ANON_TV#4753"" <: Any}}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4753""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4751""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4752""), :(Union{}), :(Tuple{Vararg{AbstractArray{var""##ANON_TV#4753"", N} where var""##ANON_TV#4753"" <: Any}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,true,false,true,true,false,true,true,data/ta-info/all/TypedTables.jl
src/Table.jl,Base.vcat,mtsig,"Tuple{Table{<:NamedTuple{names}}, Table{<:NamedTuple{names}}, Vararg{Table{<:NamedTuple{names}}}} where names","Tuple{Table{var""##ANON_TV#4802""} where var""##ANON_TV#4802"" <: NamedTuple{names}, Table{var""##ANON_TV#4803""} where var""##ANON_TV#4803"" <: NamedTuple{names}, Vararg{Table{var""##ANON_TV#4804""} where var""##ANON_TV#4804"" <: NamedTuple{names}}} where names","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4802""), :(Union{}), :(NamedTuple{names}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4803""), :(Union{}), :(NamedTuple{names}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4804""), :(Union{}), :(NamedTuple{names}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:names, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/TypedTables.jl
src/Table.jl,Base.hcat,mtsig,"Tuple{Table{<:NamedTuple{names}}, Table{<:NamedTuple{names}}, Vararg{Table{<:NamedTuple{names}}}} where names","Tuple{Table{var""##ANON_TV#4807""} where var""##ANON_TV#4807"" <: NamedTuple{names}, Table{var""##ANON_TV#4808""} where var""##ANON_TV#4808"" <: NamedTuple{names}, Vararg{Table{var""##ANON_TV#4809""} where var""##ANON_TV#4809"" <: NamedTuple{names}}} where names","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4807""), :(Union{}), :(NamedTuple{names}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4808""), :(Union{}), :(NamedTuple{names}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4809""), :(Union{}), :(NamedTuple{names}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:names, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,4,true,false,false,true,true,false,true,true,data/ta-info/all/TypedTables.jl
src/Table.jl,Base.hvcat,mtsig,"Tuple{Tuple{Vararg{Int}}, Vararg{Table{<:NamedTuple{names}}}} where names","Tuple{Tuple{Vararg{Int}}, Vararg{Table{var""##ANON_TV#4810""} where var""##ANON_TV#4810"" <: NamedTuple{names}}} where names","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4810""), :(Union{}), :(NamedTuple{names}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:names, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/TypedTables.jl
src/TypedTables.jl,_ndims,mtsig,"Tuple{Type{<:Tuple{Vararg{AbstractArray{<:Any, n}}}}} where n","Tuple{Type{var""##ANON_TV#4813""} where var""##ANON_TV#4813"" <: Tuple{Vararg{AbstractArray{var""##ANON_TV#4814"", n} where var""##ANON_TV#4814"" <: Any}}} where n","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4814""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4813""), :(Union{}), :(Tuple{Vararg{AbstractArray{var""##ANON_TV#4814"", n} where var""##ANON_TV#4814"" <: Any}}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:n, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCUpBnd, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/TypedTables.jl
src/columnops.jl,Broadcast.broadcasted,mtsig,"Tuple{Broadcast.DefaultArrayStyle{N}, typeof(merge), Vararg{Table{<:Any, N}}} where N","Tuple{Broadcast.DefaultArrayStyle{N}, typeof(merge), Vararg{Table{var""##ANON_TV#4817"", N} where var""##ANON_TV#4817"" <: Any}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#4817""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,false,false,true,true,false,true,true,data/ta-info/all/TypedTables.jl
src/resampling/resampling_schemes/ConstrainedIndexValueResampling.jl,<NOT A FUNSIG>,tyassorann,"NTuple{N_DATASETS, NTuple{N_VARIABLES, Union{SamplingConstraint, Vector{<:SamplingConstraint}}}}","NTuple{N_DATASETS, NTuple{N_VARIABLES, Union{SamplingConstraint, Vector{var""##ANON_TV#3807""} where var""##ANON_TV#3807"" <: SamplingConstraint}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3807""), :(Union{}), :SamplingConstraint, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/UncertainData.jl
src/resampling/resampling_schemes/ConstrainedIndexValueResampling.jl,ConstrainedIndexValueResampling,mtsig,"Tuple{Vararg{NTuple{N_VARIABLES, Union{SamplingConstraint, Vector{<:SamplingConstraint}}}}} where N_VARIABLES","Tuple{Vararg{NTuple{N_VARIABLES, Union{SamplingConstraint, Vector{var""##ANON_TV#3808""} where var""##ANON_TV#3808"" <: SamplingConstraint}}}} where N_VARIABLES","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3808""), :(Union{}), :SamplingConstraint, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N_VARIABLES, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,true,true,true,data/ta-info/all/UncertainData.jl
src/resampling/resampling_schemes/ConstrainedIndexValueResampling.jl,ConstrainedIndexValueResampling,mtsig,"Tuple{Int, Vararg{NTuple{N_VARIABLES, Union{SamplingConstraint, Vector{<:SamplingConstraint}}}}} where N_VARIABLES","Tuple{Int, Vararg{NTuple{N_VARIABLES, Union{SamplingConstraint, Vector{var""##ANON_TV#3809""} where var""##ANON_TV#3809"" <: SamplingConstraint}}}} where N_VARIABLES","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3809""), :(Union{}), :SamplingConstraint, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N_VARIABLES, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,true,true,true,data/ta-info/all/UncertainData.jl
src/resampling/resampling_schemes/ConstrainedResampling.jl,<NOT A FUNSIG>,tyassorann,"NTuple{N, Union{SamplingConstraint, Vector{<:SamplingConstraint}}}","NTuple{N, Union{SamplingConstraint, Vector{var""##ANON_TV#3810""} where var""##ANON_TV#3810"" <: SamplingConstraint}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3810""), :(Union{}), :SamplingConstraint, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/UncertainData.jl
src/resampling/resampling_schemes/ConstrainedResampling.jl,ConstrainedResampling,mtsig,"Tuple{Vararg{Union{SamplingConstraint, Vector{<:SamplingConstraint}}}}","Tuple{Vararg{Union{SamplingConstraint, Vector{var""##ANON_TV#3811""} where var""##ANON_TV#3811"" <: SamplingConstraint}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3811""), :(Union{}), :SamplingConstraint, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/UncertainData.jl
src/resampling/resampling_schemes/ConstrainedResampling.jl,ConstrainedResampling,mtsig,"Tuple{Vector{Union{SamplingConstraint, Vector{<:SamplingConstraint}}}}","Tuple{Vector{Union{SamplingConstraint, Vector{var""##ANON_TV#3812""} where var""##ANON_TV#3812"" <: SamplingConstraint}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3812""), :(Union{}), :SamplingConstraint, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/UncertainData.jl
src/uncertain_values/UncertainValue.jl,UncertainValue,mtsig,"Tuple{Vector{Array{<:Real, 0}}}","Tuple{Vector{Array{var""##ANON_TV#3857"", 0} where var""##ANON_TV#3857"" <: Real}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3857""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/UncertainData.jl
src/timeexpandedterm.jl,TimeExpandedTerm,mtsig,"Tuple{NTuple{N, Union{<:AbstractTerm, <:MixedModels.RandomEffectsTerm}}, Any, Array{Symbol, 1}} where N","Tuple{NTuple{N, (Union{var""##ANON_TV#3186"", var""##ANON_TV#3187""} where var""##ANON_TV#3186"" <: AbstractTerm) where var""##ANON_TV#3187"" <: MixedModels.RandomEffectsTerm}, Any, Array{Symbol, 1}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3186""), :(Union{}), :AbstractTerm, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3187""), :(Union{}), :(MixedModels.RandomEffectsTerm), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,true,true,true,true,true,true,data/ta-info/all/Unfold.jl
src/logarithm.jl,uconvert,mtsig,"(((Tuple{MixedUnits{Gain{L1, S1, <:Real}}, Level{L2, S2}} where S2) where S1) where L2) where L1","(((Tuple{MixedUnits{Gain{L1, S1, var""##ANON_TV#1722""} where var""##ANON_TV#1722"" <: Real}, Level{L2, S2}} where S2) where S1) where L2) where L1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#1722""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:L1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,true,false,true,true,false,true,true,data/ta-info/all/Unitful.jl
src/quantities.jl,zero,mtsig,"Tuple{AbstractArray{Union{T, Missing}}} where T <: AbstractQuantity","Tuple{AbstractArray{Union{T, Missing}}} where T <: AbstractQuantity","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :AbstractQuantity, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Unitful.jl
src/utils.jl,unit,mtsig,"Tuple{Type{Union{Missing, T}}} where T","Tuple{Type{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Unitful.jl
src/UnitfulEquivalences.jl,dimtype,mtsig,"Tuple{Type{Union{Quantity{T, D, U}, Level{L, S, Quantity{T, D, U}} where {L, S}} where {T, U}}} where D","Tuple{Type{(Union{Quantity{T, D, U}, (Level{L, S, Quantity{T, D, U}} where L) where S} where T) where U}} where D","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:L, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUnion, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUnion)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:U, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCInvar, JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,5,true,false,false,false,true,false,true,true,data/ta-info/all/UnitfulEquivalences.jl
src/0_structs_and_generic_reversals.jl,<NOT A FUNSIG>,tyassorann,"Union{Array{PE_Function, 1}, Array{PE_Function{<:Real, <:Integer}, 1}}","Union{Array{PE_Function, 1}, Array{(PE_Function{var""##ANON_TV#2163"", var""##ANON_TV#2164""} where var""##ANON_TV#2163"" <: Real) where var""##ANON_TV#2164"" <: Integer, 1}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2163""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCUnion)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2164""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCUnion))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/UnivariateFunctions.jl
src/Unmarshal.jl,unmarshal,mtsig,"Tuple{Type{Array{E, N} where E}, Union{Vector, AbstractArray}, Bool, Int} where N","Tuple{Type{Array{E, N} where E}, Union{Vector, AbstractArray}, Bool, Int} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:E, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/Unmarshal.jl
src/Unmarshal.jl,unmarshal,mtsig,"Tuple{Type{Union{T, Missing}}, Any, Bool, Int} where T","Tuple{Type{Union{T, Missing}}, Any, Bool, Int} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Unmarshal.jl
src/Unmarshal.jl,unmarshal,mtsig,"Tuple{Type{Union{T, Nothing}}, Nothing, Bool, Int} where T","Tuple{Type{Union{T, Nothing}}, Nothing, Bool, Int} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Unmarshal.jl
src/Unmarshal.jl,unmarshal,mtsig,"Tuple{Type{Union{T, Nothing}}, T, Bool, Int} where T","Tuple{Type{Union{T, Nothing}}, T, Bool, Int} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple), list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/Unmarshal.jl
src/lazyjson.jl,unmarshal,mtsig,"Tuple{Type{Union{T, Nothing}}, LazyJSON.Number, Bool, Int} where T <: Number","Tuple{Type{Union{T, Nothing}}, LazyJSON.Number, Bool, Int} where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Unmarshal.jl
src/lazyjson.jl,unmarshal,mtsig,"Tuple{Type{Union{T, Missing}}, LazyJSON.Number, Bool, Int} where T <: Number","Tuple{Type{Union{T, Missing}}, LazyJSON.Number, Bool, Int} where T <: Number","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Unmarshal.jl
src/pyjlconv.jl,_hist_edges,mtsig,"Tuple{NTuple{N, AbstractVector{<:Real}}} where N","Tuple{NTuple{N, AbstractVector{var""##ANON_TV#3781""} where var""##ANON_TV#3781"" <: Real}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3781""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/UpROOT.jl
src/convert.jl,copy_gt!,mtsig,"Tuple{Union{AbstractMatrix{Union{Missing, T}}, AbstractVector{Union{Missing, T}}}, VCF.Reader, Symbol, Bool, Bool, Bool, String, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}} where T <: Real","Tuple{Union{AbstractMatrix{Union{Missing, T}}, AbstractVector{Union{Missing, T}}}, VCF.Reader, Symbol, Bool, Bool, Bool, String, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/VCFTools.jl
src/convert.jl,copy_gt_trans!,mtsig,"Tuple{Union{AbstractMatrix{Union{Missing, T}}, AbstractVector{Union{Missing, T}}}, VCF.Reader, Symbol, Bool, Bool, Bool, String, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}} where T <: Real","Tuple{Union{AbstractMatrix{Union{Missing, T}}, AbstractVector{Union{Missing, T}}}, VCF.Reader, Symbol, Bool, Bool, Bool, String, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/VCFTools.jl
src/convert.jl,copy_ds!,mtsig,"Tuple{Union{AbstractMatrix{Union{Missing, T}}, AbstractVector{Union{Missing, T}}}, VCF.Reader, String, Symbol, Bool, Bool, Bool, String, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}} where T <: Real","Tuple{Union{AbstractMatrix{Union{Missing, T}}, AbstractVector{Union{Missing, T}}}, VCF.Reader, String, Symbol, Bool, Bool, Bool, String, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/VCFTools.jl
src/convert.jl,copy_ds_trans!,mtsig,"Tuple{Union{AbstractMatrix{Union{Missing, T}}, AbstractVector{Union{Missing, T}}}, VCF.Reader, String, Symbol, Bool, Bool, Bool, String, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}} where T <: Real","Tuple{Union{AbstractMatrix{Union{Missing, T}}, AbstractVector{Union{Missing, T}}}, VCF.Reader, String, Symbol, Bool, Bool, Bool, String, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}, Union{AbstractVector, Nothing}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,false,false,true,false,false,true,true,data/ta-info/all/VCFTools.jl
src/array_shape.jl,_bcasted_view_unchanged,mtsig,"(Tuple{AbstractArray{<:AbstractVector{T}}, ArrayShape{U, 1}} where U >: T) where T <: Real","(Tuple{AbstractArray{var""##ANON_TV#3382""} where var""##ANON_TV#3382"" <: AbstractVector{T}, ArrayShape{U, 1}} where U >: T) where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3382""), :(Union{}), :(AbstractVector{T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:U, :T, :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCLoBnd), list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,false,false,true,false,true,false,true,data/ta-info/all/ValueShapes.jl
src/vecunroll/mappedloadstore.jl,_vload,mtsig,"((Tuple{AbstractStridedPointer, Tuple{Vararg{Union{IntegerIndex, MM, VecUnroll{N, <:Any, <:Any, <:IntegerIndex}}}}, VecUnroll{N, <:Any, Bit}, J, A} where A) where J) where N","((Tuple{AbstractStridedPointer, Tuple{Vararg{Union{IntegerIndex, MM, ((VecUnroll{N, var""##ANON_TV#2798"", var""##ANON_TV#2799"", var""##ANON_TV#2800""} where var""##ANON_TV#2798"" <: Any) where var""##ANON_TV#2799"" <: Any) where var""##ANON_TV#2800"" <: IntegerIndex}}}, VecUnroll{N, var""##ANON_TV#2801"", Bit} where var""##ANON_TV#2801"" <: Any, J, A} where A) where J) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2798""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2799""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2800""), :(Union{}), :IntegerIndex, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2801""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:J, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere), list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,7,true,false,false,true,true,false,true,true,data/ta-info/all/VectorizationBase.jl
src/utils.jl,modify_col!,mtsig,"Tuple{AbstractDataFrame, String, Type{Union{Missing, A}}} where A <: Any","Tuple{AbstractDataFrame, String, Type{Union{Missing, A}}} where A <: Any","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/WRDSMerger.jl
src/Mesh/abstractmesh.jl,Base.eltype,mtsig,"(Tuple{SType{NodeIterator{<:AbstractMesh{N, T}}}} where T) where N","(Tuple{SType{NodeIterator{var""##ANON_TV#3484""} where var""##ANON_TV#3484"" <: AbstractMesh{N, T}}} where T) where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3484""), :(Union{}), :(AbstractMesh{N, T}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/WavePropBase.jl
src/WeakRefStrings.jl,Base.convert,mtsig,"(Tuple{Type{StringArray{T, N} where T}, AbstractArray{S}} where N) where S <: STR","(Tuple{Type{StringArray{T, N} where T}, AbstractArray{S}} where N) where S <: STR","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:S, :(Union{}), :STR, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/WeakRefStrings.jl
src/WeakRefStrings.jl,_setindex!,mtsig,"(Tuple{StringArray{Union{T, Missing}, N}, Missing, Any} where N) where T","(Tuple{StringArray{Union{T, Missing}, N}, Missing, Any} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/WeakRefStrings.jl
src/WeakRefStrings.jl,_setindex!,mtsig,"(Tuple{StringArray{Union{T, Missing}, N}, Missing, Vararg{Any}} where N) where T","(Tuple{StringArray{Union{T, Missing}, N}, Missing, Vararg{Any}} where N) where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/WeakRefStrings.jl
src/WeakRefStrings.jl,Base.push!,mtsig,"Tuple{StringVector{Union{T, Missing}}, Missing} where T","Tuple{StringVector{Union{T, Missing}}, Missing} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/WeakRefStrings.jl
src/WeakRefStrings.jl,Base.insert!,mtsig,"Tuple{StringVector{Union{T, Missing}}, Integer, Missing} where T","Tuple{StringVector{Union{T, Missing}}, Integer, Missing} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/WeakRefStrings.jl
src/WeakValueDicts.jl,WeakValueDict,mtsig,"Tuple{Vararg{Pair{K, V} where K}} where V","Tuple{Vararg{Pair{K, V} where K}} where V","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:K, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:V, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/WeakValueDicts.jl
src/covmatrix.jl,_fit!,mtsig,"(Tuple{WeightedCovMatrix{T1}, AbstractVector{Union{T2, Missing}}, Any} where T2) where T1","(Tuple{WeightedCovMatrix{T1}, AbstractVector{Union{T2, Missing}}, Any} where T2) where T1","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T2, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:T1, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,false,false,true,true,data/ta-info/all/WeightedOnlineStats.jl
test/runtests.jl,missing_to_nan,mtsig,"Tuple{Array{Union{Missing, T}}} where T","Tuple{Array{Union{Missing, T}}} where T","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/WeightedOnlineStats.jl
test/syntax_traits.jl,fs2,mtsig,Tuple{Vector{A}} where Integer <: A <: Number,Tuple{Vector{A}} where Integer <: A <: Number,"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:A, :Integer, :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/WhereTraits.jl
src/interface.jl,<NOT A FUNSIG>,tyassorann,"Union{Nothing, NamedTuple{(:X, :p), Tuple{Tuple{Vararg{Vector{T}, N} where N}, Vector{T}}}}","Union{Nothing, NamedTuple{(:X, :p), Tuple{Tuple{Vararg{Vector{T}, N} where N}, Vector{T}}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple, JuliaSub.TCTuple, JuliaSub.TCInvar, JuliaSub.TCUnion))]",false,true,1,true,true,true,true,true,true,true,true,data/ta-info/all/WildBootTests.jl
src/interface.jl,_wildboottest,mtsig,"Tuple{DataType, AbstractVecOrMat, AbstractVecOrMat, AbstractVecOrMat{<:Real}, AbstractVecOrMat{<:Real}, AbstractVecOrMat{<:Real}, AbstractVecOrMat{<:Real}, AbstractVecOrMat, AbstractVecOrMat, Bool, AbstractVecOrMat{<:Integer}, Integer, Integer, Bool, AbstractVecOrMat{<:Integer}, Integer, AbstractVecOrMat{<:Real}, Bool, Number, Symbol, Bool, Bool, Number, Number, Bool, Bool, Bool, Bool, Bool, Bool, Integer, Bool, Symbol, AbstractRNG, Number, Number, Symbol, Integer, Bool, AbstractVecOrMat, AbstractVecOrMat, AbstractMatrix, Union{VecOrMat{S}, VecOrMat{Union{S, Missing}}} where S <: Number, Union{VecOrMat{S}, VecOrMat{Union{S, Missing}}} where S <: Number, Union{VecOrMat{S}, VecOrMat{Union{S, Missing}}} where S <: Number, Symbol, Bool, Bool, Bool, Bool}","Tuple{DataType, AbstractVecOrMat, AbstractVecOrMat, AbstractVecOrMat{var""##ANON_TV#3532""} where var""##ANON_TV#3532"" <: Real, AbstractVecOrMat{var""##ANON_TV#3533""} where var""##ANON_TV#3533"" <: Real, AbstractVecOrMat{var""##ANON_TV#3534""} where var""##ANON_TV#3534"" <: Real, AbstractVecOrMat{var""##ANON_TV#3535""} where var""##ANON_TV#3535"" <: Real, AbstractVecOrMat, AbstractVecOrMat, Bool, AbstractVecOrMat{var""##ANON_TV#3536""} where var""##ANON_TV#3536"" <: Integer, Integer, Integer, Bool, AbstractVecOrMat{var""##ANON_TV#3537""} where var""##ANON_TV#3537"" <: Integer, Integer, AbstractVecOrMat{var""##ANON_TV#3538""} where var""##ANON_TV#3538"" <: Real, Bool, Number, Symbol, Bool, Bool, Number, Number, Bool, Bool, Bool, Bool, Bool, Bool, Integer, Bool, Symbol, AbstractRNG, Number, Number, Symbol, Integer, Bool, AbstractVecOrMat, AbstractVecOrMat, AbstractMatrix, Union{VecOrMat{S}, VecOrMat{Union{S, Missing}}} where S <: Number, Union{VecOrMat{S}, VecOrMat{Union{S, Missing}}} where S <: Number, Union{VecOrMat{S}, VecOrMat{Union{S, Missing}}} where S <: Number, Symbol, Bool, Bool, Bool, Bool}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3532""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3533""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3534""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3535""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3536""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3537""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3538""), :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:S, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:S, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion)], list(JuliaSub.TCTuple)), JuliaSub.TyVarSummary(:S, :(Union{}), :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion), list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCUnion)], list(JuliaSub.TCTuple))]",false,false,10,true,false,false,true,false,false,true,true,data/ta-info/all/WildBootTests.jl
src/interaction.jl,<NOT A FUNSIG>,tyassorann,"Dictionary{MouseButton, EventDetails{<:MouseEvent{ButtonPressed}, W, Float64}}","Dictionary{MouseButton, EventDetails{var""##ANON_TV#2463"", W, Float64} where var""##ANON_TV#2463"" <: MouseEvent{ButtonPressed}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2463""), :(Union{}), :(MouseEvent{ButtonPressed}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/WindowAbstractions.jl
src/gridtypes/unstructured/polydata.jl,vtk_grid,mtsig,"Tuple{VTKPolyData, AbstractString, UnstructuredCoords, Vararg{AbstractArray{<:PolyCell}}, Vararg{Any}}","Tuple{VTKPolyData, AbstractString, UnstructuredCoords, Vararg{AbstractArray{var""##ANON_TV#2743""} where var""##ANON_TV#2743"" <: PolyCell}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2743""), :(Union{}), :PolyCell, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/WriteVTK.jl
src/dmatrix.jl,DMatrix,mtsig,"Tuple{AbstractMatrix{Union{Missing, T}}, Vararg{Any}} where T <: Real","Tuple{AbstractMatrix{Union{Missing, T}}, Vararg{Any}} where T <: Real","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Union{}), :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/XGBoost.jl
src/tables_interface.jl,writetable,mtsig,"Tuple{AbstractString, Vararg{Pair{<:String, <:Any}}, Vararg{Any}}","Tuple{AbstractString, Vararg{(Pair{var""##ANON_TV#3138"", var""##ANON_TV#3139""} where var""##ANON_TV#3138"" <: String) where var""##ANON_TV#3139"" <: Any}, Vararg{Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3138""), :(Union{}), :String, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3139""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/XLSX.jl
src/MOI/MOI_wrapper.jl,MOI.supports,mtsig,"Tuple{Optimizer, MOI.ConstraintConflictStatus, Type{MOI.ConstraintIndex{<:MOI.VariableIndex, <:SCALAR_SETS}}}","Tuple{Optimizer, MOI.ConstraintConflictStatus, Type{(MOI.ConstraintIndex{var""##ANON_TV#3950"", var""##ANON_TV#3951""} where var""##ANON_TV#3950"" <: MOI.VariableIndex) where var""##ANON_TV#3951"" <: SCALAR_SETS}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3950""), :(Union{}), :(MOI.VariableIndex), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3951""), :(Union{}), :SCALAR_SETS, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Xpress.jl
src/MOI/MOI_wrapper.jl,MOI.supports,mtsig,"Tuple{Optimizer, MOI.ConstraintConflictStatus, Type{MOI.ConstraintIndex{<:MOI.ScalarAffineFunction, <:Union{MOI.LessThan, MOI.GreaterThan, MOI.EqualTo}}}}","Tuple{Optimizer, MOI.ConstraintConflictStatus, Type{(MOI.ConstraintIndex{var""##ANON_TV#3952"", var""##ANON_TV#3953""} where var""##ANON_TV#3952"" <: MOI.ScalarAffineFunction) where var""##ANON_TV#3953"" <: Union{MOI.LessThan, MOI.GreaterThan, MOI.EqualTo}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3952""), :(Union{}), :(MOI.ScalarAffineFunction), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#3953""), :(Union{}), :(Union{MOI.LessThan, MOI.GreaterThan, MOI.EqualTo}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Xpress.jl
lib/YaoBlocks/src/composite/chain.jl,chain,mtsig,"Tuple{Vararg{Union{AbstractBlock{D}, Function}}} where D","Tuple{Vararg{Union{AbstractBlock{D}, Function}}} where D","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/Yao.jl
lib/YaoBlocks/src/composite/kron.jl,KronBlock,mtsig,"Tuple{Int, Vararg{Pair{<:Any, <:AbstractBlock{D}}}} where D","Tuple{Int, Vararg{(Pair{var""##ANON_TV#2919"", var""##ANON_TV#2920""} where var""##ANON_TV#2919"" <: Any) where var""##ANON_TV#2920"" <: AbstractBlock{D}}} where D","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2919""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2920""), :(Union{}), :(AbstractBlock{D}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/Yao.jl
lib/YaoBlocks/src/composite/kron.jl,Base.kron,mtsig,"Tuple{Int, Vararg{Pair{<:Any, <:AbstractBlock}}}","Tuple{Int, Vararg{(Pair{var""##ANON_TV#2921"", var""##ANON_TV#2922""} where var""##ANON_TV#2921"" <: Any) where var""##ANON_TV#2922"" <: AbstractBlock}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2921""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2922""), :(Union{}), :AbstractBlock, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Yao.jl
lib/YaoBlocks/src/composite/kron.jl,Base.kron,mtsig,"Tuple{Int, Vararg{Union{Pair{<:Any, <:AbstractBlock}, AbstractBlock}}}","Tuple{Int, Vararg{Union{(Pair{var""##ANON_TV#2923"", var""##ANON_TV#2924""} where var""##ANON_TV#2923"" <: Any) where var""##ANON_TV#2924"" <: AbstractBlock, AbstractBlock}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2923""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2924""), :(Union{}), :AbstractBlock, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Yao.jl
lib/YaoBlocks/src/composite/kron.jl,Base.kron,mtsig,"Tuple{Vararg{Pair{<:Any, <:AbstractBlock}}}","Tuple{Vararg{(Pair{var""##ANON_TV#2925"", var""##ANON_TV#2926""} where var""##ANON_TV#2925"" <: Any) where var""##ANON_TV#2926"" <: AbstractBlock}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2925""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2926""), :(Union{}), :AbstractBlock, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/Yao.jl
src/composite/chain.jl,chain,mtsig,"Tuple{Vararg{Union{AbstractBlock{D}, Function}}} where D","Tuple{Vararg{Union{AbstractBlock{D}, Function}}} where D","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,false,true,false,false,true,true,data/ta-info/all/YaoBlocks.jl
src/composite/kron.jl,KronBlock,mtsig,"Tuple{Int, Vararg{Pair{<:Any, <:AbstractBlock{D}}}} where D","Tuple{Int, Vararg{(Pair{var""##ANON_TV#2809"", var""##ANON_TV#2810""} where var""##ANON_TV#2809"" <: Any) where var""##ANON_TV#2810"" <: AbstractBlock{D}}} where D","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2809""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2810""), :(Union{}), :(AbstractBlock{D}), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:D, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCUpBnd, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,3,true,true,false,true,true,false,true,true,data/ta-info/all/YaoBlocks.jl
src/composite/kron.jl,Base.kron,mtsig,"Tuple{Int, Vararg{Pair{<:Any, <:AbstractBlock}}}","Tuple{Int, Vararg{(Pair{var""##ANON_TV#2811"", var""##ANON_TV#2812""} where var""##ANON_TV#2811"" <: Any) where var""##ANON_TV#2812"" <: AbstractBlock}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2811""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2812""), :(Union{}), :AbstractBlock, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/YaoBlocks.jl
src/composite/kron.jl,Base.kron,mtsig,"Tuple{Int, Vararg{Union{Pair{<:Any, <:AbstractBlock}, AbstractBlock}}}","Tuple{Int, Vararg{Union{(Pair{var""##ANON_TV#2813"", var""##ANON_TV#2814""} where var""##ANON_TV#2813"" <: Any) where var""##ANON_TV#2814"" <: AbstractBlock, AbstractBlock}}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2813""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2814""), :(Union{}), :AbstractBlock, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCUnion, JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/YaoBlocks.jl
src/composite/kron.jl,Base.kron,mtsig,"Tuple{Vararg{Pair{<:Any, <:AbstractBlock}}}","Tuple{Vararg{(Pair{var""##ANON_TV#2815"", var""##ANON_TV#2816""} where var""##ANON_TV#2815"" <: Any) where var""##ANON_TV#2816"" <: AbstractBlock}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2815""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)), JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2816""), :(Union{}), :AbstractBlock, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,2,true,true,true,true,true,true,true,true,data/ta-info/all/YaoBlocks.jl
src/grammar.jl,parse_qasm,mtsig,Tuple{Vector{Token{A} where A}},Tuple{Vector{Token{A} where A}},"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:A, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/YaoQASM.jl
src/ZippedArrays.jl,ZippedArray,mtsig,"Tuple{Vararg{AbstractArray{<:Any, N}}} where N","Tuple{Vararg{AbstractArray{var""##ANON_TV#2473"", N} where var""##ANON_TV#2473"" <: Any}} where N","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2473""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple, JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:N, :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCWhere, JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,false,true,true,false,true,true,data/ta-info/all/ZippedArrays.jl
src/ZippedArrays.jl,$f,mtsig,Tuple{Vararg{AbstractVector{<:Any}}},"Tuple{Vararg{AbstractVector{var""##ANON_TV#2474""} where var""##ANON_TV#2474"" <: Any}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2474""), :(Union{}), :Any, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/ZippedArrays.jl
src/statevec.jl,expectationsOnPauliBasis,mtsig,"Tuple{CuStateVec, Vector{Pauli}, Vector{Vector{<:Integer}}}","Tuple{CuStateVec, Vector{Pauli}, Vector{Vector{var""##ANON_TV#2746""} where var""##ANON_TV#2746"" <: Integer}}","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(Symbol(""##ANON_TV#2746""), :(Union{}), :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], list(JuliaSub.TCInvar, JuliaSub.TCTuple))]",false,false,1,true,true,true,true,true,true,true,true,data/ta-info/all/cuStateVec.jl
