File,Function,Kind,TypeAnnotation,UnrolledTypeAnnotation,TypeVarsSummary,Error,Warning,VarCnt,HasWhere,VarsUsedOnce,UseSiteVariance,ImprUseSiteVariance,ExistInInv,RestrictedScope,ClosedLowerBound,TrivConsistBounds,Package
test/test_piracy.jl,Base.findfirst,mtsig,"Tuple{AbstractChar, Set{T}} where Int <: T <: Integer","Tuple{AbstractChar, Set{T}} where Int <: T <: Integer","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :Int, :Integer, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/Aqua.jl
test/inheritance.jl,<NOT A FUNSIG>,tyassorann,"Pair{S, Some{T}} where typeassert(T, DataType) <: S <: typeassert(T, DataType)","Pair{S, Some{T}} where typeassert(T, DataType) <: S <: typeassert(T, DataType)","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :(typeassert(T, DataType)), :(typeassert(T, DataType)), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/ComputedFieldTypes.jl
test/method.jl,f13,mtsig,Tuple{S} where Integer <: S <: Number,Tuple{S} where Integer <: S <: Number,"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:S, :Integer, :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/ExprTools.jl
test/toplevel_script.jl,f2,mtsig,Tuple{T} where Unsigned <: T <: Real,Tuple{T} where Unsigned <: T <: Real,"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :Unsigned, :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/JuliaInterpreter.jl
src/concrete/bytes.jl,pybytes,mtsig,"Tuple{Type{T}, Any} where Vector{UInt8} <: T <: Vector","Tuple{Type{T}, Any} where Vector{UInt8} <: T <: Vector","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Vector{UInt8}), :Vector, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/PythonCall.jl
src/concrete/bytes.jl,pybytes,mtsig,"Tuple{Type{T}, Any} where Base.CodeUnits{UInt8, String} <: T <: Base.CodeUnits","Tuple{Type{T}, Any} where Base.CodeUnits{UInt8, String} <: T <: Base.CodeUnits","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :(Base.CodeUnits{UInt8, String}), :(Base.CodeUnits), DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/PythonCall.jl
src/Tools.jl,hasBoolRelation,mtsig,"(Tuple{Function, F1, F2, Bool, Bool, Bool} where StructuredFunction <: F2 <: Function) where StructuredFunction <: F1 <: Function","(Tuple{Function, F1, F2, Bool, Bool, Bool} where StructuredFunction <: F2 <: Function) where StructuredFunction <: F1 <: Function","JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:F2, :StructuredFunction, :Function, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], list(JuliaSub.TCWhere)), JuliaSub.TyVarSummary(:F1, :StructuredFunction, :Function, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple, JuliaSub.TCWhere)], nil(JuliaSub.TypeConstructor))]",false,false,2,true,true,true,true,false,true,true,false,data/ta-info/all/Quiqbox.jl
test/testmodules/FuncKinds.jl,f2,mtsig,Tuple{T} where Unsigned <: T <: Real,Tuple{T} where Unsigned <: T <: Real,"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:T, :Unsigned, :Real, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/SnoopCompile.jl
test/syntax_traits.jl,fs2,mtsig,Tuple{Vector{A}} where Integer <: A <: Number,Tuple{Vector{A}} where Integer <: A <: Number,"JuliaSub.TyVarSummary[JuliaSub.TyVarSummary(:A, :Integer, :Number, DataStructures.LinkedList{JuliaSub.TypeConstructor}[list(JuliaSub.TCInvar, JuliaSub.TCTuple)], nil(JuliaSub.TypeConstructor))]",false,false,1,true,true,true,true,false,true,true,false,data/ta-info/all/WhereTraits.jl
